{"version":3,"file":"build.worker.js","sources":["../../node_modules/webpd/dist/WebPd/src/build/build-wasm.js","../../node_modules/webpd/dist/WebPd_pd-parser/dist/tokens.js","../../node_modules/webpd/dist/WebPd_pd-parser/dist/hydrate.js","../../node_modules/webpd/dist/WebPd_pd-parser/dist/tokenize.js","../../node_modules/webpd/dist/WebPd_pd-parser/dist/types.js","../../node_modules/webpd/dist/WebPd_pd-parser/dist/parse.js","../../node_modules/webpd/dist/WebPd/src/build/helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/package.json.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/render/metadata.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/functional-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/ast/declare.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/dsp-graph/getters.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/dsp-graph/traversers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/dsp-graph/graph-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-javascript/compile/macros.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/compile/macros.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/compile-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/dsp-groups.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/render/templates.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/render/index.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/proxies.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-javascript/compile/render.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/compile/render.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/proxies.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/sked/sked.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/commons/commons.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/core/core.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/msg/msg.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/dependencies.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/ast/ast-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/nodes.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/portlet.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/node-implementations.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/dsp-graph/mutators.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/io.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/precompile/index.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/settings.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/compile/index.js","../../node_modules/webpd/dist/WebPd/src/assets/runtime.js.txt.js","../../node_modules/webpd/dist/WebPd/src/build/build-app.js","../../node_modules/webpd/dist/WebPd/src/gui-controls.js","../../node_modules/webpd/dist/WebPd/src/compile-dsp-graph/compile-helpers.js","../../node_modules/webpd/dist/WebPd/src/compile-dsp-graph/instantiate-abstractions.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/subpatch.js","../../node_modules/webpd/dist/WebPd/src/nodes/validation.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/_mixer~.js","../../node_modules/webpd/dist/WebPd/src/nodes/standard-message-receivers.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/sig~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/_routemsg.js","../../node_modules/webpd/dist/WebPd/src/compile-dsp-graph/to-dsp-graph.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/controls-base.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/buses.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/core.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/controls-float.js","../../node_modules/webpd/dist/WebPd/src/build/io.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/run/run-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/core/bindings-assemblyscript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/run/wasm-helpers.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/run/engine-lifecycle-bindings.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/commons/bindings-assemblyscript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/run/metadata.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/msg/bindings-assemblyscript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/run/io-bindings.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/fs/bindings-assemblyscript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-assemblyscript/run/index.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/fs/bindings-javascript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/commons/bindings-javascript.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/engine-javascript/run/index.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/base64-arraybuffer.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/codecs/bitdepth.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/codecs/imaadpcm.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/codecs/alaw.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/codecs/mulaw.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/binary/lib/endianness.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/binary/lib/utf8-parser.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/binary/lib/int-parser.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/binary/lib/float-parser.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/binary/index.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/riff-file.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-reader.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/write-string.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-parser.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/parsers/interleave.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/validators/validate-num-channels.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/validators/validate-sample-rate.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-creator.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-tag-editor.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-cue-editor.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/resampler/interpolator.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/resampler/fir-lpf.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/resampler/butterworth-lpf.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/resampler/index.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/lib/wavefile-converter.js","../../node_modules/webpd/dist/WebPd/node_modules/wavefile/index.js","../../node_modules/webpd/dist/WebPd/src/build/build-audio.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/dac~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/adc~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/samplerate~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/osc~-phasor~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/clip~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/samphold~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/snapshot~.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/points.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/lines.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/timing.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/vline~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/line~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/line.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/funcs.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/funcs~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tab-base.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tabread.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tabwrite.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tabwrite~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tabread~-tabread4~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/tabplay~.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/buf/buf.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/fs/constants.js","../../node_modules/webpd/dist/WebPd_compiler/dist/src/stdlib/fs/fs.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/fs.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/readsf~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/writesf~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-bp~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/throw~-catch~-send~-receive~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/metro.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/timer.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/delay.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/controls-bang.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/controls-atoms.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/loadbang.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/numbers.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/float-int.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/funcs.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/binop~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/noise~.js","../../node_modules/webpd/dist/WebPd/src/nodes/global-code/delay-buffers.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/delread~-delread4~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/delwrite~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-real~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-complex~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-hip~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-lop~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/filters-vcf~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/msg.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/list.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/symbol.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/send-receive.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/soundfiler.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/print.js","../../node_modules/webpd/dist/WebPd/src/nodes/type-arguments.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/trigger.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/change.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/moses.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/clip.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/route.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/spigot.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/until.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/random.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/pipe.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/pack.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/unpack.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/expr-expr~.js","../../node_modules/webpd/dist/WebPd/src/nodes/nodes/binop.js","../../node_modules/webpd/dist/WebPd/src/nodes/index.js","../../node_modules/webpd/dist/WebPd/src/build/build.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_runtime/node_modules/fetch-retry/index.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_runtime/src/utils.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/compile/proxies.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/dsp-graph/getters.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/compile/compile-helpers.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/functional-helpers.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/ast/declare.js","../../node_modules/webpd/dist/WebPd_runtime/dist/WebPd_compiler/dist/src/compile/precompile/proxies.js","../../node_modules/webpd/dist/WebPd/src/browser/build-helpers.js","../../src/store/artefacts-worker-safe.ts","../../src/workers/build.ts"],"sourcesContent":["let ASC = null;\n/**\n * This function sets the assemblyscript compiler so that WebPd can use it.\n * The assemblyscript compiler is quite heavy and causes problems with bundling.\n * Also, depending on the host environment (web or node), it is loaded differently.\n * Therefore we leave it to the consumer to load it themselves and then pass the loaded\n * instance to WebPd.\n */\nconst setAsc = (asc) => ASC = asc;\nconst compileAssemblyscript = async (code, bitDepth) => {\n    if (!ASC) {\n        throw new Error(`assemblyscript compiler was not set properly. Please use WebPd's setAsc function to initialize it.`);\n    }\n    const compileOptions = {\n        optimizeLevel: 3,\n        runtime: 'incremental',\n        exportRuntime: true,\n        sourceMap: true,\n    };\n    if (bitDepth === 32) {\n        // For 32 bits version of Math\n        compileOptions.use = ['Math=NativeMathf'];\n    }\n    const { error, binary, stderr } = await ASC.compileString(code, compileOptions);\n    if (error) {\n        throw new Error(stderr.toString());\n    }\n    return binary.buffer;\n};\n\nexport { compileAssemblyscript, setAsc };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// Regular expressions to detect escaped special chars.\nconst ESCAPED_DOLLAR_VAR_RE_GLOB = /\\\\(\\$\\d+)/g;\nconst ESCAPED_COMMA_VAR_RE_GLOB = /\\\\\\\\\\\\,/g;\nconst ESCAPED_SEMICOLON_VAR_RE_GLOB = /\\\\\\\\\\\\;/g;\n/**\n * Parses token to a node arg (string or a number).\n * Needs to handle the case when the token is already a number as in the process of gathering\n * arguments we sometimes insert a number.\n */\nconst parseArg = (rawArg) => {\n    // Try to parse arg as a number\n    try {\n        return parseFloatToken(rawArg);\n    }\n    catch (err) {\n        if (!(err instanceof ValueError)) {\n            throw err;\n        }\n    }\n    // Try to parse arg as a string\n    try {\n        return parseStringToken(rawArg);\n    }\n    catch (err) {\n        if (!(err instanceof ValueError)) {\n            throw err;\n        }\n    }\n    throw new ValueError(`Not a valid arg ${rawArg}`);\n};\n/** Parses a float from a .pd file. Returns the parsed float or throws ValueError. */\nconst parseFloatToken = (val) => {\n    if (isNumber(val)) {\n        return val;\n    }\n    else if (isString(val)) {\n        // `Number` is better than `parseFloat` for example\n        // which is too flexible.\n        // REF : https://stackoverflow.com/questions/3257112/is-it-possible-to-parsefloat-the-whole-string\n        const parsed = Number(val);\n        if (isNaN(parsed)) {\n            throw new ValueError(`Not a valid number arg ${val}`);\n        }\n        return parsed;\n    }\n    else {\n        throw new ValueError(`Not a valid number arg ${val}`);\n    }\n};\n/** Parses an int from a .pd file. Returns the parsed int or throws ValueError. */\nconst parseIntToken = (token) => {\n    if (token === undefined) {\n        throw new ValueError(`Received undefined`);\n    }\n    const parsed = parseInt(token, 10);\n    if (isNaN(parsed)) {\n        throw new ValueError(`Invalid int received`);\n    }\n    return parsed;\n};\n/** Parses a '0' or '1' from a .pd file. */\nconst parseBoolToken = (val) => {\n    const parsed = parseFloatToken(val);\n    if (parsed === 0 || parsed === 1) {\n        return parsed;\n    }\n    throw new ValueError(`Should be 0 or 1`);\n};\n/** Unescape string args. */\nconst parseStringToken = (val, emptyValue = null) => {\n    if (!isString(val)) {\n        throw new ValueError(`Not a valid string arg ${val}`);\n    }\n    // If empty value, make real empty string\n    if (emptyValue !== null && val === emptyValue) {\n        return '';\n    }\n    // Unescape special characters\n    let arg = val\n        .replace(ESCAPED_COMMA_VAR_RE_GLOB, ',')\n        .replace(ESCAPED_SEMICOLON_VAR_RE_GLOB, ';');\n    // Unescape dollars\n    let matched;\n    while ((matched = ESCAPED_DOLLAR_VAR_RE_GLOB.exec(arg))) {\n        arg = arg.replace(matched[0], matched[1]);\n    }\n    return arg;\n};\nclass ValueError extends Error {\n}\nconst isNumber = (obj) => Number.isFinite(obj);\nconst isString = (obj) => typeof obj === 'string';\n\nexport { ValueError, parseArg, parseBoolToken, parseFloatToken, parseIntToken, parseStringToken };\n","import { parseIntToken, parseBoolToken, parseFloatToken, parseStringToken, parseArg } from './tokens.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @param coordsTokenizedLine Defined only if the patch declares a graph on its parent,\n * i.e. if the patch has a UI visible in its parent.\n */\nconst hydratePatch = (id, isRoot, canvasTokenizedLine, coordsTokenizedLine) => {\n    const { tokens: canvasTokens } = canvasTokenizedLine;\n    const coordsTokens = coordsTokenizedLine ? coordsTokenizedLine.tokens : null;\n    let layout = {\n        windowX: parseIntToken(canvasTokens[2]),\n        windowY: parseIntToken(canvasTokens[3]),\n        windowWidth: parseIntToken(canvasTokens[4]),\n        windowHeight: parseIntToken(canvasTokens[5]),\n    };\n    if (typeof canvasTokens[7] !== 'undefined') {\n        layout.openOnLoad = parseBoolToken(canvasTokens[7]);\n    }\n    if (coordsTokens && typeof coordsTokens[8] !== 'undefined') {\n        const graphOnParentRaw = parseFloatToken(coordsTokens[8]);\n        layout.graphOnParent = graphOnParentRaw > 0 ? 1 : 0;\n        if (layout.graphOnParent === 1) {\n            layout = {\n                ...layout,\n                hideObjectNameAndArguments: graphOnParentRaw === 2 ? 1 : 0,\n                viewportX: coordsTokens[9] ? parseIntToken(coordsTokens[9]) : 0,\n                viewportY: coordsTokens[10]\n                    ? parseIntToken(coordsTokens[10])\n                    : 0,\n                viewportWidth: parseIntToken(coordsTokens[6]),\n                viewportHeight: parseIntToken(coordsTokens[7]),\n            };\n        }\n    }\n    return {\n        id,\n        isRoot,\n        layout,\n        args: [],\n        nodes: {},\n        connections: [],\n        inlets: [],\n        outlets: [],\n    };\n};\nconst hydrateArray = (id, { tokens }) => {\n    const arrayName = parseStringToken(tokens[2]);\n    const arraySize = parseArg(tokens[3]);\n    // Options flag :\n    // first bit if for `saveContents` second for `drawAs`\n    const optionsFlag = parseIntToken(tokens[5]);\n    const saveContents = (optionsFlag % 2);\n    const drawAs = ['polygon', 'points', 'bezier'][optionsFlag >>> 1];\n    return {\n        id,\n        args: [arrayName, arraySize, saveContents],\n        data: null,\n        layout: {\n            drawAs,\n        },\n    };\n};\nconst hydrateNodePatch = (id, { tokens }) => {\n    const canvasType = tokens[4];\n    const args = [];\n    if (canvasType !== 'pd' &&\n        canvasType !== 'graph' &&\n        canvasType !== 'table') {\n        throw new Error(`unknown canvasType : ${canvasType}`);\n    }\n    // add subpatch name\n    if (canvasType === 'pd' && tokens[5] !== undefined) {\n        args.push(parseStringToken(tokens[5]));\n    }\n    return {\n        id,\n        type: canvasType,\n        patchId: parseStringToken(tokens[1]),\n        nodeClass: 'subpatch',\n        args,\n        layout: {\n            x: parseIntToken(tokens[2]),\n            y: parseIntToken(tokens[3]),\n        },\n    };\n};\nconst hydrateNodeArray = (id, { tokens }) => ({\n    id,\n    args: [],\n    type: 'array',\n    nodeClass: 'array',\n    arrayId: parseStringToken(tokens[1]),\n});\nconst hydrateNodeBase = (id, tokens) => {\n    const elementType = tokens[1];\n    let type = ''; // the object name\n    let args; // the construction args for the object\n    // 2 categories here :\n    //  - elems whose name is `elementType`\n    //  - elems whose name is `token[4]`\n    if (elementType === 'obj') {\n        type = parseStringToken(tokens[4]);\n        args = tokens.slice(5);\n    }\n    else {\n        type = parseStringToken(elementType);\n        args = tokens.slice(4);\n    }\n    // If text, we need to re-join all tokens\n    if (elementType === 'text') {\n        args = [tokens.slice(4).join(' ')];\n    }\n    return {\n        id,\n        type,\n        args,\n        layout: {\n            x: parseFloatToken(tokens[2]),\n            y: parseFloatToken(tokens[3]),\n        },\n    };\n};\nconst hydrateConnection = ({ tokens, }) => ({\n    source: {\n        nodeId: parseStringToken(tokens[2]),\n        portletId: parseIntToken(tokens[3]),\n    },\n    sink: {\n        nodeId: parseStringToken(tokens[4]),\n        portletId: parseIntToken(tokens[5]),\n    },\n});\nconst hydrateNodeGeneric = (nodeBase) => {\n    const node = {\n        ...nodeBase,\n        nodeClass: 'generic',\n    };\n    node.args = node.args.map(parseArg);\n    return node;\n};\n// This is put here just for readability of the main `parse` function\nconst hydrateNodeControl = (nodeBase) => {\n    const args = nodeBase.args;\n    const node = {\n        ...nodeBase,\n        type: nodeBase.type,\n        nodeClass: 'control',\n    };\n    if (node.type === 'floatatom' ||\n        node.type === 'symbolatom' ||\n        node.type === 'listbox') {\n        // <widthInChars> <lower_limit> <upper_limit> <label_pos> <label> <receive> <send>\n        node.layout = {\n            ...node.layout,\n            widthInChars: parseFloatToken(args[0]),\n            labelPos: parseFloatToken(args[3]),\n            label: parseStringToken(args[4], '-'),\n        };\n        node.args = [\n            parseFloatToken(args[1]),\n            parseFloatToken(args[2]),\n            parseStringToken(args[5], '-'),\n            parseStringToken(args[6], '-'),\n        ];\n        // In Pd `msg` is actually more handled like a standard object, even though it is a control.\n    }\n    else if (node.type === 'msg') {\n        node.args = node.args.map(parseArg);\n    }\n    else if (node.type === 'bng') {\n        // <size> <hold> <interrupt> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color>\n        node.layout = {\n            ...node.layout,\n            size: parseFloatToken(args[0]),\n            hold: parseFloatToken(args[1]),\n            interrupt: parseFloatToken(args[2]),\n            label: parseStringToken(args[6], 'empty'),\n            labelX: parseFloatToken(args[7]),\n            labelY: parseFloatToken(args[8]),\n            labelFont: args[9],\n            labelFontSize: parseFloatToken(args[10]),\n            bgColor: args[11],\n            fgColor: args[12],\n            labelColor: args[13],\n        };\n        node.args = [\n            parseBoolToken(args[3]),\n            parseStringToken(args[5], 'empty'),\n            parseStringToken(args[4], 'empty'),\n        ];\n    }\n    else if (node.type === 'tgl') {\n        // <size> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <init_value> <default_value>\n        node.layout = {\n            ...node.layout,\n            size: parseFloatToken(args[0]),\n            label: parseStringToken(args[4], 'empty'),\n            labelX: parseFloatToken(args[5]),\n            labelY: parseFloatToken(args[6]),\n            labelFont: args[7],\n            labelFontSize: parseFloatToken(args[8]),\n            bgColor: args[9],\n            fgColor: args[10],\n            labelColor: args[11],\n        };\n        node.args = [\n            parseFloatToken(args[13]),\n            parseBoolToken(args[1]),\n            parseFloatToken(args[12]),\n            parseStringToken(args[3], 'empty'),\n            parseStringToken(args[2], 'empty'),\n        ];\n    }\n    else if (node.type === 'nbx') {\n        // !!! doc is inexact here, logHeight is not at the specified position, and initial value of the nbx was missing.\n        // <size> <height> <min> <max> <log> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <log_height>\n        node.layout = {\n            ...node.layout,\n            widthInChars: parseFloatToken(args[0]),\n            height: parseFloatToken(args[1]),\n            log: parseFloatToken(args[4]),\n            label: parseStringToken(args[8], 'empty'),\n            labelX: parseFloatToken(args[9]),\n            labelY: parseFloatToken(args[10]),\n            labelFont: args[11],\n            labelFontSize: parseFloatToken(args[12]),\n            bgColor: args[13],\n            fgColor: args[14],\n            labelColor: args[15],\n            logHeight: args[17],\n        };\n        node.args = [\n            parseFloatToken(args[2]),\n            parseFloatToken(args[3]),\n            parseBoolToken(args[5]),\n            parseFloatToken(args[16]),\n            parseStringToken(args[7], 'empty'),\n            parseStringToken(args[6], 'empty'),\n        ];\n    }\n    else if (node.type === 'vsl' || node.type === 'hsl') {\n        // <width> <height> <min> <max> <log> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <default_value> <steady_on_click>\n        node.layout = {\n            ...node.layout,\n            width: parseFloatToken(args[0]),\n            height: parseFloatToken(args[1]),\n            log: parseFloatToken(args[4]),\n            label: parseStringToken(args[8], 'empty'),\n            labelX: parseFloatToken(args[9]),\n            labelY: parseFloatToken(args[10]),\n            labelFont: args[11],\n            labelFontSize: parseFloatToken(args[12]),\n            bgColor: args[13],\n            fgColor: args[14],\n            labelColor: args[15],\n            steadyOnClick: args[17],\n        };\n        const minValue = parseFloatToken(args[2]);\n        const maxValue = parseFloatToken(args[3]);\n        const isLogScale = parseBoolToken(args[4]);\n        const pixValue = parseFloatToken(args[16]);\n        const pixSize = node.type === 'hsl' ? node.layout.width : node.layout.height;\n        let initValue = 0;\n        if (isLogScale) {\n            const k = Math.log(maxValue / minValue) / (pixSize - 1);\n            initValue = minValue * Math.exp(k * pixValue * 0.01);\n        }\n        else {\n            // Reversed engineered formula for the initial value.\n            initValue =\n                minValue +\n                    ((maxValue - minValue) * pixValue) / ((pixSize - 1) * 100);\n        }\n        node.args = [\n            minValue,\n            maxValue,\n            parseBoolToken(args[5]),\n            initValue,\n            parseStringToken(args[7], 'empty'),\n            parseStringToken(args[6], 'empty'),\n        ];\n    }\n    else if (node.type === 'vradio' || node.type === 'hradio') {\n        // <size> <new_old> <init> <number> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <default_value>\n        node.layout = {\n            ...node.layout,\n            size: parseFloatToken(args[0]),\n            label: parseStringToken(args[6], 'empty'),\n            labelX: parseFloatToken(args[7]),\n            labelY: parseFloatToken(args[8]),\n            labelFont: args[9],\n            labelFontSize: parseFloatToken(args[10]),\n            bgColor: args[11],\n            fgColor: args[12],\n            labelColor: args[13],\n        };\n        node.args = [\n            parseFloatToken(args[3]),\n            parseBoolToken(args[2]),\n            parseFloatToken(args[14]),\n            parseStringToken(args[5], 'empty'),\n            parseStringToken(args[4], 'empty'),\n            parseBoolToken(args[2]),\n        ];\n    }\n    else if (node.type === 'vu') {\n        // <width> <height> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <label_color> <scale> <?>\n        node.layout = {\n            ...node.layout,\n            width: parseFloatToken(args[0]),\n            height: parseFloatToken(args[1]),\n            label: parseStringToken(args[3], 'empty'),\n            labelX: parseFloatToken(args[4]),\n            labelY: parseFloatToken(args[5]),\n            labelFont: args[6],\n            labelFontSize: parseFloatToken(args[7]),\n            bgColor: args[8],\n            labelColor: args[9],\n            log: parseFloatToken(args[10]),\n        };\n        node.args = [\n            parseStringToken(args[2], 'empty'),\n            parseStringToken(args[11]),\n        ];\n    }\n    else if (node.type === 'cnv') {\n        // <size> <width> <height> <send> <receive> <label> <x_off> <y_off> <font> <font_size> <bg_color> <label_color> <?>\n        node.layout = {\n            ...node.layout,\n            size: parseFloatToken(args[0]),\n            width: parseFloatToken(args[1]),\n            height: parseFloatToken(args[2]),\n            label: parseStringToken(args[5], 'empty'),\n            labelX: parseFloatToken(args[6]),\n            labelY: parseFloatToken(args[7]),\n            labelFont: args[8],\n            labelFontSize: parseFloatToken(args[9]),\n            bgColor: args[10],\n            labelColor: args[11],\n        };\n        node.args = [\n            parseStringToken(args[4], 'empty'),\n            parseStringToken(args[3], 'empty'),\n            parseStringToken(args[12]),\n        ];\n    }\n    else {\n        throw new Error(`Unexpected control node ${node.type}`);\n    }\n    return node;\n};\nfunction hydrateLineAfterComma(node, lineAfterComma) {\n    // Handling stuff after the comma\n    // I have no idea what's the specification for this, so this is really reverse\n    // engineering on what appears in pd files.\n    if (lineAfterComma) {\n        const afterCommaTokens = lineAfterComma;\n        while (afterCommaTokens.length) {\n            const command = afterCommaTokens.shift();\n            if (command === 'f') {\n                node.layout.width =\n                    parseFloatToken(afterCommaTokens.shift());\n            }\n        }\n    }\n    return node;\n}\n\nexport { hydrateArray, hydrateConnection, hydrateLineAfterComma, hydrateNodeArray, hydrateNodeBase, hydrateNodeControl, hydrateNodeGeneric, hydrateNodePatch, hydratePatch };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// Regular expression to split tokens in a message.\n// For groups 1 (captures semicolon) and group 5 (captures comma), we capture as a separator \n// only unescaped characters.\n// A separator can be e.g. : \" ,  \" or \"; \"\n// NOTE: Normally we'd use named regexp capturing groups, but that causes problems with \n// create-react-app which uses a babel plugin to remove them.\nconst TOKENS_RE = /(?<comma>((?<!\\\\)\\s*)((?<!\\\\\\\\)\\\\,)((?<!\\\\)\\s*))|(?<semi>((?<!\\\\)\\s*)((?<!\\\\\\\\)\\\\;)((?<!\\\\)\\s*))|((?<!\\\\)\\s)+|\\r\\n?|\\n/;\nconst AFTER_COMMA_RE = /,(?!\\\\)/;\n// Regular expression for finding valid lines of Pd in a file\nconst LINES_RE = /(#((.|\\r|\\n)*?)[^\\\\\\\\])\\r{0,1}\\n{0,1};\\r{0,1}(\\n|$)/gi;\n// Helper function to reverse a string\nconst _reverseString = (s) => s.split('').reverse().join('');\nvar tokenize = (pdString) => {\n    const tokenizedLines = [];\n    // use our regular expression to match instances of valid Pd lines\n    LINES_RE.lastIndex = 0; // reset lastIndex, in case the previous call threw an error\n    let lineMatch = null;\n    while ((lineMatch = LINES_RE.exec(pdString))) {\n        // In order to support object width, pd vanilla adds something like \", f 10\" at the end\n        // of the line. So we need to look for non-escaped comma, and get that part after it.\n        // Doing that is annoying in JS since regexps have no look-behind assertions.\n        // The hack is to reverse the string, and use a regexp look-forward assertion.\n        const lineParts = _reverseString(lineMatch[1])\n            .split(AFTER_COMMA_RE)\n            .reverse()\n            .map(_reverseString);\n        const lineIndex = pdString.slice(0, lineMatch.index).split('\\n').length - 1;\n        tokenizedLines.push({\n            tokens: tokenizeLine(lineParts[0]),\n            lineAfterComma: lineParts[1]\n                ? tokenizeLine(lineParts[1])\n                : undefined,\n            lineIndex,\n        });\n    }\n    return tokenizedLines;\n};\nconst tokenizeLine = (line) => {\n    const matches = Array.from(line.matchAll(new RegExp(TOKENS_RE, 'g')));\n    const tokens = [];\n    matches.forEach((match, i) => {\n        const tokenStart = i === 0 ? 0 : matches[i - 1].index + matches[i - 1][0].length;\n        const tokenEnd = match.index;\n        const token = line.slice(tokenStart, tokenEnd);\n        if (token.length) {\n            tokens.push(token);\n        }\n        if (match[1]) {\n            tokens.push(',');\n        }\n        else if (match[5]) {\n            tokens.push(';');\n        }\n    });\n    const lastMatch = matches.slice(-1)[0];\n    if (lastMatch) {\n        const token = line.slice(lastMatch.index + lastMatch[0].length);\n        if (token.length) {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n};\n\nexport { AFTER_COMMA_RE, LINES_RE, TOKENS_RE, tokenize as default, tokenizeLine };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst CONTROL_TYPE = {\n    floatatom: 'floatatom',\n    symbolatom: 'symbolatom',\n    listbox: 'listbox',\n    bng: 'bng',\n    tgl: 'tgl',\n    nbx: 'nbx',\n    vsl: 'vsl',\n    hsl: 'hsl',\n    vradio: 'vradio',\n    hradio: 'hradio',\n    vu: 'vu',\n    cnv: 'cnv',\n    msg: 'msg',\n};\n\nexport { CONTROL_TYPE };\n","import { ValueError, parseStringToken, parseFloatToken } from './tokens.js';\nimport { hydratePatch, hydrateArray, hydrateNodePatch, hydrateNodeArray, hydrateNodeBase, hydrateNodeControl, hydrateLineAfterComma, hydrateNodeGeneric, hydrateConnection } from './hydrate.js';\nimport tokenize from './tokenize.js';\nimport { CONTROL_TYPE } from './types.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst DEFAULT_ARRAY_SIZE = 100;\nconst NODES = ['obj', 'floatatom', 'symbolatom', 'listbox', 'msg', 'text'];\nconst nextPatchId = () => `${++nextPatchId.counter}`;\nnextPatchId.counter = -1;\nconst nextArrayId = () => `${++nextArrayId.counter}`;\nnextArrayId.counter = -1;\nconst _tokensMatch = (tokens, ...values) => values.every((value, i) => value === tokens[i]);\n/** Parses a Pd file, returns a simplified JSON version */\nvar parse = (pdString) => {\n    let tokenizedLines = tokenize(pdString);\n    let patchTokenizedLinesMap = {};\n    const c = {\n        pd: {\n            rootPatchId: '0',\n            patches: {},\n            arrays: {},\n        },\n        errors: [],\n        warnings: [],\n        tokenizedLines,\n        patchTokenizedLinesMap,\n    };\n    _parsePatches(c, true);\n    Object.keys(c.pd.patches).forEach((patchId) => {\n        _parseArrays(c, patchId);\n        _parseNodesAndConnections(c, patchId);\n        _computePatchPortlets(c, patchId);\n        if (c.patchTokenizedLinesMap[patchId].length) {\n            c.patchTokenizedLinesMap[patchId].forEach(({ tokens, lineIndex }) => {\n                c.errors.push({ message: `\"${tokens[0]} ${tokens[1]}\" unexpected chunk`, lineIndex });\n            });\n        }\n    });\n    if (c.errors.length) {\n        return {\n            status: 1,\n            warnings: c.warnings,\n            errors: c.errors,\n        };\n    }\n    else {\n        return {\n            status: 0,\n            warnings: c.warnings,\n            pd: c.pd,\n        };\n    }\n};\nconst _parsePatches = (c, isPatchRoot) => {\n    const patchId = nextPatchId();\n    const patchTokenizedLines = [];\n    let patchCanvasTokens = null;\n    let patchCoordsTokens = null;\n    let iterCounter = -1;\n    let continueIteration = true;\n    let firstLineIndex = c.tokenizedLines[0] ? c.tokenizedLines[0].lineIndex : -1;\n    while (c.tokenizedLines.length && continueIteration) {\n        const { tokens, lineIndex } = c.tokenizedLines[0];\n        if (_tokensMatch(tokens, '#N', 'struct')\n            || _tokensMatch(tokens, '#X', 'declare')\n            || _tokensMatch(tokens, '#X', 'scalar')\n            || _tokensMatch(tokens, '#X', 'f')) {\n            c.warnings.push({ message: `\"${tokens[0]} ${tokens[1]}\" chunk is not supported`, lineIndex });\n            c.tokenizedLines.shift();\n            continue;\n        }\n        iterCounter++;\n        _catchParsingErrors(c, lineIndex, () => {\n            // First line of the patch / subpatch, initializes the patch\n            if (_tokensMatch(tokens, '#N', 'canvas') && iterCounter === 0) {\n                patchCanvasTokens = c.tokenizedLines.shift();\n                // If not first line, starts a subpatch\n            }\n            else if (_tokensMatch(tokens, '#N', 'canvas')) {\n                _parsePatches(c, false);\n                // Table : a table subpatch\n                // It seems that a table object is just a subpatch containing an array.\n                // Therefore we add some synthetic lines to the tokenized file to simulate\n                // this subpatch.\n            }\n            else if (\n            // prettier-ignore\n            _tokensMatch(tokens, '#X', 'obj', tokens[2], tokens[3], 'table')) {\n                const tableTokens = c.tokenizedLines.shift().tokens;\n                c.tokenizedLines = [\n                    {\n                        // prettier-ignore\n                        tokens: ['#N', 'canvas', '0', '0', '100', '100', '(subpatch)', '0'],\n                        lineIndex,\n                    },\n                    {\n                        // prettier-ignore\n                        tokens: ['#N', 'canvas', '0', '0', '100', '100', '(subpatch)', '0'],\n                        lineIndex,\n                    },\n                    {\n                        // prettier-ignore\n                        tokens: ['#X', 'array', parseStringToken(tableTokens[5]), tableTokens[6] || DEFAULT_ARRAY_SIZE.toString(), 'float', '0'],\n                        lineIndex,\n                    },\n                    // prettier-ignore\n                    { tokens: ['#X', 'restore', '0', '0', 'graph'], lineIndex },\n                    {\n                        // prettier-ignore\n                        tokens: ['#X', 'restore', tableTokens[2], tableTokens[3], 'table'],\n                        lineIndex,\n                    },\n                    ...c.tokenizedLines,\n                ];\n                _parsePatches(c, false);\n                // coords : visual range of framesets\n            }\n            else if (_tokensMatch(tokens, '#X', 'coords')) {\n                patchCoordsTokens = c.tokenizedLines.shift();\n                // Restore : ends a canvas definition\n            }\n            else if (_tokensMatch(tokens, '#X', 'restore')) {\n                // Creates a synthetic node that our parser will hydrate at a later stage\n                c.tokenizedLines[0].tokens = [\n                    'PATCH',\n                    patchId,\n                    ...c.tokenizedLines[0].tokens.slice(2),\n                ];\n                continueIteration = false;\n                // A normal chunk to add to the current patch\n            }\n            else {\n                patchTokenizedLines.push(c.tokenizedLines.shift());\n            }\n        });\n    }\n    if (patchCanvasTokens === null) {\n        c.errors.push({ message: `Parsing failed #canvas missing`, lineIndex: firstLineIndex });\n        return;\n    }\n    if (isPatchRoot) {\n        c.pd.rootPatchId = patchId;\n    }\n    c.pd.patches[patchId] = hydratePatch(patchId, isPatchRoot, patchCanvasTokens, patchCoordsTokens);\n    c.patchTokenizedLinesMap[patchId] = patchTokenizedLines;\n};\n/**\n * Use the layout of [inlet] / [outlet] objects to compute the order\n * of portlets of a subpatch.\n */\nconst _computePatchPortlets = (c, patchId) => {\n    const patch = c.pd.patches[patchId];\n    const _comparePortletsId = (node1, node2) => parseFloat(node1.id) - parseFloat(node2.id);\n    const _comparePortletsLayout = (node1, node2) => node1.layout.x - node2.layout.x;\n    const inletNodes = Object.values(patch.nodes).filter((node) => ['inlet', 'inlet~'].includes(node.type));\n    const inletsSortFunction = inletNodes.every((node) => !!node.layout)\n        ? _comparePortletsLayout\n        : _comparePortletsId;\n    inletNodes.sort(inletsSortFunction);\n    const outletNodes = Object.values(patch.nodes).filter((node) => ['outlet', 'outlet~'].includes(node.type));\n    const outletsSortFunction = outletNodes.every((node) => !!node.layout)\n        ? _comparePortletsLayout\n        : _comparePortletsId;\n    outletNodes.sort(outletsSortFunction);\n    c.pd.patches[patchId] = {\n        ...patch,\n        inlets: inletNodes.map((node) => node.id),\n        outlets: outletNodes.map((node) => node.id),\n    };\n};\nconst _parseArrays = (c, patchId) => {\n    const patchTokenizedLines = c.patchTokenizedLinesMap[patchId];\n    const remainingTokenizedLines = [];\n    // keep the last array for handling correctly\n    // the array related instructions which might follow.\n    let currentArray = null;\n    while (patchTokenizedLines.length) {\n        const { tokens, lineIndex } = patchTokenizedLines[0];\n        _catchParsingErrors(c, lineIndex, () => {\n            // start of an array definition\n            if (_tokensMatch(tokens, '#X', 'array')) {\n                currentArray = hydrateArray(nextArrayId(), patchTokenizedLines.shift());\n                c.pd.arrays[currentArray.id] = currentArray;\n                // Creates a synthetic node that our parser will hydrate at a later stage\n                remainingTokenizedLines.push({\n                    tokens: ['ARRAY', currentArray.id],\n                    lineAfterComma: [],\n                    lineIndex,\n                });\n                // array data to add to the current array\n            }\n            else if (_tokensMatch(tokens, '#A')) {\n                if (!currentArray) {\n                    throw new Error(`line ${lineIndex}: Unsupported data chunk #A.`);\n                }\n                if (currentArray.args[2] === 0) {\n                    throw new Error(\"got array data for an array that doesn't save contents.\");\n                }\n                const currentData = currentArray.data || [];\n                currentArray.data = currentData;\n                // reads in part of an array of data, starting at the index specified in this line\n                // name of the array comes from the the '#X array' and '#X restore' matches above\n                const indexOffset = parseFloatToken(tokens[1]);\n                tokens.slice(2).forEach((rawVal, i) => {\n                    const val = parseFloatToken(rawVal);\n                    if (Number.isFinite(val)) {\n                        currentData[indexOffset + i] = val;\n                    }\n                });\n                patchTokenizedLines.shift();\n                // A normal chunk to add to the current patch\n            }\n            else {\n                remainingTokenizedLines.push(patchTokenizedLines.shift());\n            }\n        });\n    }\n    c.patchTokenizedLinesMap[patchId] = remainingTokenizedLines;\n};\nconst _parseNodesAndConnections = (c, patchId) => {\n    const patch = c.pd.patches[patchId];\n    const patchTokenizedLines = c.patchTokenizedLinesMap[patchId];\n    const remainingTokenizedLines = [];\n    // In Pd files it seems like node ids are assigned in order in which nodes are declared.\n    // Then connection declarations use these same ids to identify nodes.\n    let idCounter = -1;\n    const nextId = () => `${++idCounter}`;\n    while (patchTokenizedLines.length) {\n        const { tokens, lineIndex } = patchTokenizedLines[0];\n        _catchParsingErrors(c, lineIndex, () => {\n            let node = null;\n            if (_tokensMatch(tokens, 'PATCH')) {\n                node = hydrateNodePatch(nextId(), patchTokenizedLines.shift());\n            }\n            else if (_tokensMatch(tokens, 'ARRAY')) {\n                node = hydrateNodeArray(nextId(), patchTokenizedLines.shift());\n            }\n            else if (NODES.some((nodeType) => _tokensMatch(tokens, '#X', nodeType))) {\n                const tokenizedLine = patchTokenizedLines.shift();\n                const nodeBase = hydrateNodeBase(nextId(), tokenizedLine.tokens);\n                if (Object.keys(CONTROL_TYPE).includes(nodeBase.type)) {\n                    node = hydrateNodeControl(nodeBase);\n                    node = hydrateLineAfterComma(node, tokenizedLine.lineAfterComma);\n                }\n                else {\n                    node = hydrateNodeGeneric(nodeBase);\n                    node = hydrateLineAfterComma(node, tokenizedLine.lineAfterComma);\n                }\n            }\n            if (node) {\n                patch.nodes[node.id] = node;\n                return;\n            }\n            if (_tokensMatch(tokens, '#X', 'connect')) {\n                patch.connections.push(hydrateConnection(patchTokenizedLines.shift()));\n            }\n            else {\n                remainingTokenizedLines.push(patchTokenizedLines.shift());\n            }\n        });\n    }\n    c.patchTokenizedLinesMap[patchId] = remainingTokenizedLines;\n};\nconst _catchParsingErrors = (c, lineIndex, func) => {\n    try {\n        func();\n    }\n    catch (err) {\n        if (err instanceof ValueError) {\n            c.errors.push({ message: err.message, lineIndex });\n        }\n        else {\n            throw err;\n        }\n    }\n};\n\nexport { DEFAULT_ARRAY_SIZE, _parsePatches, parse as default, nextArrayId, nextPatchId };\n","import parse from '../../../WebPd_pd-parser/dist/parse.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * A helper to build an abstraction loader.\n * @param pdFileLoader takes a node type and returns the corresponding pd file.\n * If the pd file could not be found, the function must throw an UnknownNodeTypeError.\n */\nconst makeAbstractionLoader = (pdFileLoader) => async (nodeType) => {\n    let pd = null;\n    try {\n        pd = await pdFileLoader(nodeType);\n    }\n    catch (err) {\n        if (err instanceof UnknownNodeTypeError) {\n            return {\n                status: 1,\n                unknownNodeType: nodeType,\n            };\n        }\n        else {\n            throw err;\n        }\n    }\n    const parseResult = parse(pd);\n    if (parseResult.status === 0) {\n        return {\n            status: 0,\n            pd: parseResult.pd,\n            parsingWarnings: parseResult.warnings,\n        };\n    }\n    else {\n        return {\n            status: 1,\n            parsingErrors: parseResult.errors,\n            parsingWarnings: parseResult.warnings,\n        };\n    }\n};\nclass UnknownNodeTypeError extends Error {\n}\nconst getArtefact = (artefacts, outFormat) => {\n    const artefact = artefacts[outFormat];\n    if (!artefact) {\n        throw new Error(`no artefact was generated for ${outFormat}`);\n    }\n    return artefact;\n};\nconst stringifyArrayBuffer = (buffer) => new TextDecoder().decode(buffer);\n\nexport { UnknownNodeTypeError, getArtefact, makeAbstractionLoader, stringifyArrayBuffer };\n","var name = \"@webpd/compiler\";\nvar version = \"0.1.0\";\nvar description = \"WebPd compiler package\";\nvar main = \"./dist/src/index.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar type = \"module\";\nvar license = \"LGPL-3.0\";\nvar author = \"Sébastien Piquemal\";\nvar scripts = {\n\ttest: \"NODE_OPTIONS='--experimental-vm-modules --no-warnings' npx jest --runInBand --config node_modules/@webpd/dev/configs/jest.js\",\n\t\"build:dist\": \"npx rollup --config configs/dist.rollup.mjs\",\n\t\"build:bindings\": \"npx rollup --config configs/bindings.rollup.mjs\",\n\tbuild: \"npm run clean; npm run build:dist; npm run build:bindings\",\n\tclean: \"rm -rf dist\",\n\tprettier: \"npm explore @webpd/dev -- npm run prettier $(pwd)/src\",\n\teslint: \"npm explore @webpd/dev -- npm run eslint $(pwd)/src\"\n};\nvar repository = {\n\ttype: \"git\",\n\turl: \"git+https://github.com/sebpiq/WebPd_compiler.git\"\n};\nvar bugs = {\n\turl: \"https://github.com/sebpiq/WebPd_compiler/issues\"\n};\nvar homepage = \"https://github.com/sebpiq/WebPd_compiler#readme\";\nvar devDependencies = {\n\t\"@rollup/plugin-commonjs\": \"^23.0.4\",\n\t\"@rollup/plugin-node-resolve\": \"^15.0.1\",\n\t\"@rollup/plugin-typescript\": \"^10.0.1\",\n\t\"@types/jest\": \"^29.4.0\",\n\t\"@types/node\": \"^14.14.7\",\n\t\"@webpd/dev\": \"git+https://github.com/sebpiq/WebPd_dev.git\",\n\tassemblyscript: \"^0.27.24\",\n\tjest: \"^29.4.3\",\n\trollup: \"^3.7.0\",\n\t\"ts-jest\": \"^29.0.5\",\n\t\"ts-node\": \"^10.9.1\",\n\ttslib: \"^2.4.1\",\n\ttypedoc: \"^0.22.17\",\n\ttypescript: \"^4.7.2\"\n};\nvar packageInfo = {\n\tname: name,\n\tversion: version,\n\tdescription: description,\n\tmain: main,\n\ttypes: types,\n\ttype: type,\n\tlicense: license,\n\tauthor: author,\n\tscripts: scripts,\n\trepository: repository,\n\tbugs: bugs,\n\thomepage: homepage,\n\tdevDependencies: devDependencies\n};\n\nexport { author, bugs, packageInfo as default, description, devDependencies, homepage, license, main, name, repository, scripts, type, types, version };\n","import packageInfo from '../../../package.json.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** Helper to build engine metadata from compilation object */\nconst buildMetadata = ({ variableNamesReadOnly, precompiledCode: { dependencies }, settings: { audio: audioSettings, io }, }) => {\n    const filteredGlobals = {};\n    const exportsAndImportsNames = [\n        ...dependencies.exports,\n        ...dependencies.imports.map((astFunc) => astFunc.name),\n    ];\n    Object.entries(variableNamesReadOnly.globals).forEach(([ns, names]) => Object.entries(names || {}).forEach(([name, variableName]) => {\n        if (exportsAndImportsNames.includes(variableName)) {\n            if (!filteredGlobals[ns]) {\n                filteredGlobals[ns] = {};\n            }\n            filteredGlobals[ns][name] = variableName;\n        }\n    }));\n    return {\n        libVersion: packageInfo.version,\n        settings: {\n            audio: {\n                ...audioSettings,\n                // Determined at initialize\n                sampleRate: 0,\n                blockSize: 0,\n            },\n            io,\n        },\n        compilation: {\n            variableNamesIndex: {\n                io: variableNamesReadOnly.io,\n                globals: filteredGlobals,\n            },\n        },\n    };\n};\n\nexport { buildMetadata };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** Generate an integer series from 0 to `count` (non-inclusive). */\nconst countTo = (count) => {\n    const results = [];\n    for (let i = 0; i < count; i++) {\n        results.push(i);\n    }\n    return results;\n};\n/**\n * @param func Called for each element in `src`. Returns a pair `[<key>, <value>]`.\n * @returns A new object whoses keys and values are the result of\n * applying `func` to each element in `src`.\n */\nconst mapArray = (src, func) => {\n    const dest = {};\n    src.forEach((srcValue, i) => {\n        const [key, destValue] = func(srcValue, i);\n        dest[key] = destValue;\n    });\n    return dest;\n};\n/**\n * Renders one of several alternative bits of code.\n *\n * @param routes A list of alternatives `[<test>, <code>]`\n * @returns The first `code` whose `test` evaluated to true.\n */\nconst renderSwitch = (...routes) => {\n    const matchedRoute = routes.find(([test]) => test);\n    if (!matchedRoute) {\n        throw new Error(`no route found`);\n    }\n    return matchedRoute[1];\n};\n\nexport { countTo, mapArray, renderSwitch };\n","import { countTo } from '../functional-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst Var = (typeName, name, value) => _preventToString({\n    astType: 'Var',\n    name,\n    type: typeName,\n    value: value !== undefined ? _prepareVarValue(value) : undefined,\n});\nconst ConstVar = (typeName, name, value) => _preventToString({\n    astType: 'ConstVar',\n    name,\n    type: typeName,\n    value: _prepareVarValue(value),\n});\nconst Func = (name, args = [], returnType = 'void') => (strings, ...content) => _preventToString({\n    astType: 'Func',\n    name,\n    args,\n    returnType,\n    body: ast(strings, ...content),\n});\nconst AnonFunc = (args = [], returnType = 'void') => (strings, ...content) => _preventToString({\n    astType: 'Func',\n    name: null,\n    args,\n    returnType,\n    body: ast(strings, ...content),\n});\nconst Class = (name, members) => _preventToString({\n    astType: 'Class',\n    name,\n    members,\n});\nconst Sequence = (content) => ({\n    astType: 'Sequence',\n    content: _processRawContent(_intersperse(content, countTo(content.length - 1).map(() => '\\n'))),\n});\nconst ast = (strings, ...content) => _preventToString({\n    astType: 'Sequence',\n    content: _processRawContent(_intersperse(strings, content)),\n});\nconst _processRawContent = (content) => {\n    // 1. Flatten arrays and AstSequence, filter out nulls, and convert numbers to strings\n    // Basically converts input to an Array<AstContent>.\n    const flattenedAndFiltered = content.flatMap((element) => {\n        if (typeof element === 'string') {\n            return [element];\n        }\n        else if (typeof element === 'number') {\n            return [element.toString()];\n        }\n        else {\n            if (element === null) {\n                return [];\n            }\n            else if (Array.isArray(element)) {\n                return _processRawContent(_intersperse(element, countTo(element.length - 1).map(() => '\\n')));\n            }\n            else if (typeof element === 'object' &&\n                element.astType === 'Sequence') {\n                return element.content;\n            }\n            else {\n                return [element];\n            }\n        }\n    });\n    // 2. Combine adjacent strings\n    const [combinedContent, remainingString] = flattenedAndFiltered.reduce(([combinedContent, currentString], element) => {\n        if (typeof element === 'string') {\n            return [combinedContent, currentString + element];\n        }\n        else {\n            if (currentString.length) {\n                return [[...combinedContent, currentString, element], ''];\n            }\n            else {\n                return [[...combinedContent, element], ''];\n            }\n        }\n    }, [[], '']);\n    if (remainingString.length) {\n        combinedContent.push(remainingString);\n    }\n    return combinedContent;\n};\n/**\n * Intersperse content from array1 with content from array2.\n * `array1.length` must be equal to `array2.length + 1`.\n */\nconst _intersperse = (array1, array2) => {\n    if (array1.length === 0) {\n        return [];\n    }\n    return array1.slice(1).reduce((combinedContent, element, i) => {\n        return combinedContent.concat([array2[i], element]);\n    }, [array1[0]]);\n};\n/**\n * Prevents AST elements from being rendered as a string, as this is\n * most likely an error due to unproper use of `ast`.\n * Deacivated. Activate for debugging by uncommenting the line below.\n */\nconst _preventToString = (element) => ({\n    ...element,\n    // Uncomment this to activate\n    // toString: () => { throw new Error(`Rendering element ${elemennt.astType} as string is probably an error`) }\n});\nconst _prepareVarValue = (value) => {\n    if (typeof value === 'number') {\n        return Sequence([value.toString()]);\n    }\n    else if (typeof value === 'string') {\n        return Sequence([value]);\n    }\n    else {\n        return value;\n    }\n};\n\nexport { AnonFunc, Class, ConstVar, Func, Sequence, Var, _processRawContent, ast };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst getNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (node) {\n        return node;\n    }\n    throw new Error(`Node \"${nodeId}\" not found in graph`);\n};\nconst getInlet = (node, inletId) => {\n    const inlet = node.inlets[inletId];\n    if (inlet) {\n        return inlet;\n    }\n    throw new Error(`Inlet \"${inletId}\" not found in node ${node.id} of type ${node.type}`);\n};\nconst getOutlet = (node, outletId) => {\n    const outlet = node.outlets[outletId];\n    if (outlet) {\n        return outlet;\n    }\n    throw new Error(`Outlet \"${outletId}\" not found in node ${node.id} of type ${node.type}`);\n};\n/** Returns the list of sinks for the outlet or an empty list. */\nconst getSinks = (node, outletId) => node.sinks[outletId] || [];\n/** Returns the list of sources for the inlet or an empty list. */\nconst getSources = (node, inletId) => node.sources[inletId] || [];\n\nexport { getInlet, getNode, getOutlet, getSinks, getSources };\n","import { mapArray } from '../functional-helpers.js';\nimport { getNode, getOutlet, getInlet } from './getters.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * Simple helper to get a list of nodes from a traversal (which is simply node ids).\n */\nconst toNodes = (graph, traversal) => traversal.map((nodeId) => getNode(graph, nodeId));\nconst listSinkNodes = (graph, node, portletType) => _listSourceOrSinkNodes(node.sinks, getOutlet, graph, node, portletType);\nconst listSourceNodes = (graph, node, portletType) => _listSourceOrSinkNodes(node.sources, getInlet, graph, node, portletType);\nconst listSinkConnections = (node, portletType) => _listSourcesOrSinks(node.sinks, getOutlet, node, portletType);\nconst _listSourcesOrSinks = (sourcesOrSinks, portletGetter, node, portletType) => \n// We always put the `node` endpoint first, even if we're listing connections to sources,\n// this allows mre genericity to the function\nObject.entries(sourcesOrSinks).reduce((connections, [portletId, sourceOrSinkList]) => {\n    const nodeEndpoint = { portletId, nodeId: node.id };\n    const portlet = portletGetter(node, portletId);\n    if (portlet.type === portletType || portletType === undefined) {\n        return [\n            ...connections,\n            ...sourceOrSinkList.map((s) => [nodeEndpoint, s]),\n        ];\n    }\n    else {\n        return connections;\n    }\n}, []);\nconst _listSourceOrSinkNodes = (sourcesOrSinks, portletGetter, graph, node, portletType) => _listSourcesOrSinks(sourcesOrSinks, portletGetter, node, portletType)\n    .reduce((sourceOrSinkNodeIds, [_, sourceOrSink]) => {\n    if (!sourceOrSinkNodeIds.includes(sourceOrSink.nodeId)) {\n        return [...sourceOrSinkNodeIds, sourceOrSink.nodeId];\n    }\n    else {\n        return sourceOrSinkNodeIds;\n    }\n}, [])\n    .map((nodeId) => getNode(graph, nodeId));\n/**\n * Breadth first traversal for signal in the graph.\n * Traversal path is calculated by pulling incoming connections from\n * {@link nodesPullingSignal}.\n */\nconst signalTraversal = (graph, nodesPullingSignal, shouldContinue) => {\n    const traversal = [];\n    nodesPullingSignal.forEach((node) => _signalTraversalBreadthFirstRecursive(traversal, [], graph, node, shouldContinue));\n    return traversal;\n};\nconst _signalTraversalBreadthFirstRecursive = (traversal, currentPath, graph, node, shouldContinue) => {\n    if (shouldContinue && !shouldContinue(node)) {\n        return;\n    }\n    const nextPath = [...currentPath, node.id];\n    listSourceNodes(graph, node, 'signal').forEach((sourceNode) => {\n        if (currentPath.indexOf(sourceNode.id) !== -1) {\n            return;\n        }\n        _signalTraversalBreadthFirstRecursive(traversal, nextPath, graph, sourceNode, shouldContinue);\n    });\n    if (traversal.indexOf(node.id) === -1) {\n        traversal.push(node.id);\n    }\n};\n/**\n * Breadth first traversal for signal in the graph.\n * Traversal path is calculated by pulling incoming connections from\n * {@link nodesPushingMessages}.\n */\nconst messageTraversal = (graph, nodesPushingMessages) => {\n    const traversal = [];\n    nodesPushingMessages.forEach((node) => {\n        _messageTraversalDepthFirstRecursive(traversal, graph, node);\n    });\n    return traversal;\n};\nconst _messageTraversalDepthFirstRecursive = (traversal, graph, node) => {\n    if (traversal.indexOf(node.id) !== -1) {\n        return;\n    }\n    traversal.push(node.id);\n    listSinkNodes(graph, node, 'message').forEach((sinkNode) => {\n        _messageTraversalDepthFirstRecursive(traversal, graph, sinkNode);\n    });\n};\n/**\n * Remove dead sinks and sources in graph.\n * @param graphTraversal contains all nodes that are connected to\n * an input or output of the graph.\n */\nconst trimGraph = (graph, graphTraversal) => mapArray(Object.values(graph).filter((node) => graphTraversal.includes(node.id)), (node) => [\n    node.id,\n    {\n        ...node,\n        sources: removeDeadSources(node.sources, graphTraversal),\n        sinks: removeDeadSinks(node.sinks, graphTraversal),\n    },\n]);\n/**\n * When `node` has a sink node that is not connected to an end sink, that sink node won't be included\n * in the traversal, but will still appear in `node.sinks`.\n * Therefore, we need to make sure to filter `node.sinks` to exclude sink nodes that don't\n * appear in the traversal.\n */\nconst removeDeadSinks = (sinks, graphTraversal) => {\n    const filteredSinks = {};\n    Object.entries(sinks).forEach(([outletId, outletSinks]) => {\n        const filteredOutletSinks = outletSinks.filter(({ nodeId: sinkNodeId }) => graphTraversal.includes(sinkNodeId));\n        if (filteredOutletSinks.length) {\n            filteredSinks[outletId] = filteredOutletSinks;\n        }\n    });\n    return filteredSinks;\n};\n/**\n * Filters a node's sources to exclude source nodes that don't\n * appear in the traversal.\n */\nconst removeDeadSources = (sources, graphTraversal) => {\n    const filteredSources = {};\n    Object.entries(sources).forEach(([inletId, inletSources]) => {\n        const filteredInletSources = inletSources.filter(({ nodeId: sourceNodeId }) => graphTraversal.includes(sourceNodeId));\n        if (filteredInletSources.length) {\n            filteredSources[inletId] = filteredInletSources;\n        }\n    });\n    return filteredSources;\n};\n\nexport { listSinkConnections, listSinkNodes, listSourceNodes, messageTraversal, removeDeadSinks, removeDeadSources, signalTraversal, toNodes, trimGraph };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst nodeDefaults = (id, type = 'DUMMY') => ({\n    id,\n    type,\n    args: {},\n    sources: {},\n    sinks: {},\n    inlets: {},\n    outlets: {},\n});\nconst endpointsEqual = (a1, a2) => a1.portletId === a2.portletId && a1.nodeId === a2.nodeId;\n\nexport { endpointsEqual, nodeDefaults };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst Var = (declaration, renderedValue) => \n// prettier-ignore\n`let ${declaration.name}${renderedValue ? ` = ${renderedValue}` : ''}`;\nconst ConstVar = (declaration, renderedValue) => \n// prettier-ignore\n`const ${declaration.name} = ${renderedValue}`;\nconst Func = (declaration, renderedArgsValues, renderedBody) => \n// prettier-ignore\n`function ${declaration.name !== null ? declaration.name : ''}(${declaration.args.map((arg, i) => renderedArgsValues[i] ? `${arg.name}=${renderedArgsValues[i]}` : arg.name).join(', ')}) {${renderedBody}}`;\nconst Class = () => ``;\nconst macros = {\n    Var,\n    ConstVar,\n    Func,\n    Class,\n};\n\nexport { macros as default };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst Var = (declaration, renderedValue) => \n// prettier-ignore\n`let ${declaration.name}: ${declaration.type}${renderedValue ? ` = ${renderedValue}` : ''}`;\nconst ConstVar = (declaration, renderedValue) => \n// prettier-ignore\n`const ${declaration.name}: ${declaration.type} = ${renderedValue}`;\nconst Func = (declaration, renderedArgsValues, renderedBody) => \n// prettier-ignore\n`function ${declaration.name !== null ? declaration.name : ''}(${declaration.args.map((arg, i) => `${arg.name}: ${arg.type}${renderedArgsValues[i] ? `=${renderedArgsValues[i]}` : ''}`).join(', ')}): ${declaration.returnType} {${renderedBody}}`;\nconst Class = (declaration) => \n// prettier-ignore\n`class ${declaration.name} {\n${declaration.members.map(varDeclaration => `${varDeclaration.name}: ${varDeclaration.type}`).join('\\n')}\n}`;\nconst macros = {\n    Var,\n    ConstVar,\n    Func,\n    Class,\n};\n\nexport { macros as default };\n","import { messageTraversal, signalTraversal } from '../dsp-graph/traversers.js';\nimport macros from '../engine-javascript/compile/macros.js';\nimport macros$1 from '../engine-assemblyscript/compile/macros.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** Helper to get code macros from compile target. */\nconst getMacros = (target) => ({ javascript: macros, assemblyscript: macros$1 }[target]);\n/** Helper to get node implementation or throw an error if not implemented. */\nconst getNodeImplementation = (nodeImplementations, nodeType) => {\n    const nodeImplementation = nodeImplementations[nodeType];\n    if (!nodeImplementation) {\n        throw new Error(`node [${nodeType}] is not implemented`);\n    }\n    return {\n        dependencies: [],\n        ...nodeImplementation,\n    };\n};\n/**\n * Build graph traversal for all nodes.\n * This should be exhaustive so that all nodes that are connected\n * to an input or output of the graph are declared correctly.\n * Order of nodes doesn't matter.\n */\nconst buildFullGraphTraversal = (graph) => {\n    const nodesPullingSignal = Object.values(graph).filter((node) => !!node.isPullingSignal);\n    const nodesPushingMessages = Object.values(graph).filter((node) => !!node.isPushingMessages);\n    return Array.from(new Set([\n        ...messageTraversal(graph, nodesPushingMessages),\n        ...signalTraversal(graph, nodesPullingSignal),\n    ]));\n};\nconst getNodeImplementationsUsedInGraph = (graph, nodeImplementations) => Object.values(graph).reduce((nodeImplementationsUsedInGraph, node) => {\n    if (node.type in nodeImplementationsUsedInGraph) {\n        return nodeImplementationsUsedInGraph;\n    }\n    else {\n        return {\n            ...nodeImplementationsUsedInGraph,\n            [node.type]: getNodeImplementation(nodeImplementations, node.type),\n        };\n    }\n}, {});\n/**\n * Build graph traversal for all signal nodes.\n */\nconst buildGraphTraversalSignal = (graph) => signalTraversal(graph, getGraphSignalSinks(graph));\nconst getGraphSignalSinks = (graph) => Object.values(graph).filter((node) => !!node.isPullingSignal);\n\nexport { buildFullGraphTraversal, buildGraphTraversalSignal, getGraphSignalSinks, getMacros, getNodeImplementation, getNodeImplementationsUsedInGraph };\n","import { signalTraversal, toNodes, listSinkNodes, listSinkConnections } from '../../dsp-graph/traversers.js';\nimport { endpointsEqual } from '../../dsp-graph/graph-helpers.js';\nimport { buildGraphTraversalSignal } from '../compile-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst precompileColdDspGroup = ({ graph, variableNamesAssigner, precompiledCodeAssigner }, dspGroup, groupId) => {\n    precompiledCodeAssigner.graph.coldDspGroups[groupId] = {\n        functionName: variableNamesAssigner.coldDspGroups[groupId],\n        dspGroup,\n        sinkConnections: buildGroupSinkConnections(graph, dspGroup),\n    };\n};\nconst buildHotDspGroup = ({ graph }, parentDspGroup, coldDspGroups) => ({\n    traversal: coldDspGroups.reduce((traversal, coldDspGroup) => removeNodesFromTraversal(traversal, coldDspGroup.traversal), buildGraphTraversalSignal(graph)),\n    outNodesIds: parentDspGroup.outNodesIds,\n});\nconst buildColdDspGroups = (precompilation, parentDspGroup) => \n// Go through all nodes in the signal traversal, and find groups of signal nodes\n// that can be cached / computed only when needed (cold dsp), outside\n// of the main dsp loop (hot dsp). We proceed in the following way :\n//\n// 1. Find single flow dsp groups, i.e. a cold node and all its sources,\n//      and their sources, etc. as long as all nodes are cold.\n// 2. some of these single flow dsp groups might be connected to each other,\n//      therefore we need to merge them.\n// 3. for each merged group consolidate the signal traversal, therefore\n//      fixing the order in which nodes are visited and removing potential duplicates.\n//\n// e.g. :\n//\n//      [  c1  ]\n//         |\\________\n//         |         |\n//      [  c2  ]  [  c4  ]\n//         |         |\n//      [  c3  ]  [  c5  ]  <- out nodes of cold the cold dsp group\n//         |         |\n//      [  h1  ]  [  h2  ]  <- hot nodes\n//\n// In the graph above, [c1, c2, c3, c4, c5] constitute a cold dsp group.\n// 1. We start by finding 2 single flow dsp groups : [c3, c2, c1] and [c5, c4, c1]\n// 2. We detect that these 2 groups are connected, so we merge them into one group : [c3, c2, c1, c5, c4, c1]\n// 3. ...\n_buildSingleFlowColdDspGroups(precompilation, parentDspGroup)\n    // Combine all connected single flow dsp groups.\n    .reduce((dspGroups, singleFlowDspGroup) => {\n    const groupToMergeInto = dspGroups.find((otherGroup) => otherGroup.traversal.some((nodeId) => singleFlowDspGroup.traversal.includes(nodeId)));\n    if (groupToMergeInto) {\n        return [\n            ...dspGroups.filter((dspGroup) => dspGroup !== groupToMergeInto),\n            // Merging here is incomplete, we don't recompute the traversal\n            // and don't remove the duplicate nodes until all groups are combined.\n            {\n                traversal: [\n                    ...groupToMergeInto.traversal,\n                    ...singleFlowDspGroup.traversal,\n                ],\n                outNodesIds: [\n                    ...groupToMergeInto.outNodesIds,\n                    ...singleFlowDspGroup.outNodesIds,\n                ],\n            },\n        ];\n    }\n    else {\n        return [...dspGroups, singleFlowDspGroup];\n    }\n}, [])\n    // Compute the signal traversal, therefore fixing the order in which\n    // nodes are visited and removing potential duplicates.\n    .map((dspGroup) => ({\n    traversal: signalTraversal(precompilation.graph, toNodes(precompilation.graph, dspGroup.outNodesIds)),\n    outNodesIds: dspGroup.outNodesIds,\n}));\nconst _buildSingleFlowColdDspGroups = (precompilation, parentDspGroup) => toNodes(precompilation.graph, parentDspGroup.traversal)\n    .reduce((dspGroups, node) => {\n    // If one of `node`'s sinks is a also cold, then `node` is not the\n    // out node of a dsp group.\n    if (!_isNodeDspCold(precompilation, node) ||\n        listSinkNodes(precompilation.graph, node, 'signal')\n            .every((sinkNode) => _isNodeDspCold(precompilation, sinkNode))) {\n        return dspGroups;\n    }\n    // We need to check that all upstream nodes are also cold.\n    let areAllSourcesCold = true;\n    const dspGroup = {\n        outNodesIds: [node.id],\n        traversal: signalTraversal(precompilation.graph, [node], (sourceNode) => {\n            areAllSourcesCold =\n                areAllSourcesCold &&\n                    _isNodeDspCold(precompilation, sourceNode);\n            return areAllSourcesCold;\n        }),\n    };\n    if (areAllSourcesCold) {\n        return [...dspGroups, dspGroup];\n    }\n    else {\n        return dspGroups;\n    }\n}, []);\nconst buildInlinableDspGroups = (precompilation, parentDspGroup) => toNodes(precompilation.graph, parentDspGroup.traversal)\n    .reduce((dspGroups, node) => {\n    const sinkNodes = listSinkNodes(precompilation.graph, node, 'signal');\n    // We're looking for the out node of an inlinable dsp group.\n    if (_isNodeDspInlinable(precompilation, node) &&\n        // If node is the out node of its parent dsp group, then its not inlinable,\n        // because it needs to declare output variables.\n        !parentDspGroup.outNodesIds.includes(node.id) &&\n        // If `node`'s sink is itself inlinable, then `node` is not the out node.\n        (!_isNodeDspInlinable(precompilation, sinkNodes[0]) ||\n            // However, if `node`'s sink is also is the out node of the parent group,\n            // then it can't actually be inlined, so `node` is the out node.\n            parentDspGroup.outNodesIds.includes(sinkNodes[0].id))) {\n        return [\n            ...dspGroups,\n            {\n                traversal: signalTraversal(precompilation.graph, [node], (sourceNode) => _isNodeDspInlinable(precompilation, sourceNode)),\n                outNodesIds: [node.id],\n            },\n        ];\n    }\n    else {\n        return dspGroups;\n    }\n}, []);\nconst isNodeInsideGroup = (dspGroup, nodeId) => dspGroup.traversal.includes(nodeId);\nconst findColdDspGroupFromSink = (coldDspGroupMap, sink) => Object.values(coldDspGroupMap).find(({ sinkConnections }) => sinkConnections.find(([_, otherSink]) => endpointsEqual(otherSink, sink)));\nconst buildGroupSinkConnections = (graph, dspGroup) => toNodes(graph, dspGroup.outNodesIds)\n    // Get a flat list of all the sink connections of the out nodes.\n    .flatMap((outNode) => listSinkConnections(outNode, 'signal'));\nconst removeNodesFromTraversal = (traversal, toRemove) => traversal.filter((nodeId) => !toRemove.includes(nodeId));\nconst _isNodeDspCold = ({ precompiledCodeAssigner }, node) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    return precompiledNodeImplementation.nodeImplementation.flags\n        ? !!precompiledNodeImplementation.nodeImplementation.flags\n            .isPureFunction\n        : false;\n};\nconst _isNodeDspInlinable = ({ precompiledCodeAssigner }, node) => {\n    const sinks = listSinkConnections(node, 'signal')\n        .map(([_, sink]) => sink)\n        // De-duplicate sinks\n        .reduce((dedupedSinks, sink) => {\n        if (dedupedSinks.every((otherSink) => !endpointsEqual(otherSink, sink))) {\n            return [...dedupedSinks, sink];\n        }\n        else {\n            return dedupedSinks;\n        }\n    }, []);\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    return (!!precompiledNodeImplementation.nodeImplementation.flags &&\n        !!precompiledNodeImplementation.nodeImplementation.flags.isDspInline &&\n        sinks.length === 1);\n};\n\nexport { _buildSingleFlowColdDspGroups, _isNodeDspInlinable, buildColdDspGroups, buildGroupSinkConnections, buildHotDspGroup, buildInlinableDspGroups, findColdDspGroupFromSink, isNodeInsideGroup, precompileColdDspGroup, removeNodesFromTraversal };\n","import { Sequence, ConstVar, ast, Func, Var } from '../../ast/declare.js';\nimport { findColdDspGroupFromSink } from '../precompile/dsp-groups.js';\n\nconst dependencies = ({ precompiledCode }) => precompiledCode.dependencies.ast;\nconst nodeImplementationsCoreAndStateClasses = ({ precompiledCode: { nodeImplementations }, }) => Sequence(Object.values(nodeImplementations).map((precompiledImplementation) => [\n    precompiledImplementation.stateClass,\n    precompiledImplementation.core,\n]));\nconst nodeStateInstances = ({ precompiledCode: { graph, nodes, nodeImplementations }, }) => Sequence([\n    graph.fullTraversal.reduce((declarations, nodeId) => {\n        const precompiledNode = nodes[nodeId];\n        const precompiledNodeImplementation = nodeImplementations[precompiledNode.nodeType];\n        if (!precompiledNode.state) {\n            return declarations;\n        }\n        else {\n            if (!precompiledNodeImplementation.stateClass) {\n                throw new Error(`Node \"${nodeId}\" of type ${precompiledNode.nodeType} has a state but no state class`);\n            }\n            return [\n                ...declarations,\n                ConstVar(precompiledNodeImplementation.stateClass.name, precompiledNode.state.name, ast `{\n                                ${Object.entries(precompiledNode.state.initialization).map(([key, value]) => ast `${key}: ${value},`)}\n                            }`),\n            ];\n        }\n    }, []),\n]);\nconst nodeInitializations = ({ precompiledCode: { graph, nodes }, }) => Sequence([\n    graph.fullTraversal.map((nodeId) => nodes[nodeId].initialization),\n]);\nconst ioMessageReceivers = ({ globals: { msg }, precompiledCode: { io }, }) => Sequence(Object.values(io.messageReceivers).map((inletsMap) => {\n    return Object.values(inletsMap).map((precompiledIoMessageReceiver) => {\n        // prettier-ignore\n        return Func(precompiledIoMessageReceiver.functionName, [\n            Var(msg.Message, `m`)\n        ], 'void') `\n                    ${precompiledIoMessageReceiver.getSinkFunctionName()}(m)\n                `;\n    });\n}));\nconst ioMessageSenders = ({ precompiledCode }, generateIoMessageSender) => Sequence(Object.entries(precompiledCode.io.messageSenders).map(([nodeId, portletIdsMap]) => Object.entries(portletIdsMap).map(([outletId, messageSender]) => {\n    return generateIoMessageSender(messageSender.functionName, nodeId, outletId);\n})));\nconst portletsDeclarations = ({ globals: { msg }, precompiledCode: { graph, nodes }, settings: { debug }, }) => Sequence([\n    graph.fullTraversal\n        .map((nodeId) => [nodes[nodeId], nodeId])\n        .map(([precompiledNode, nodeId]) => [\n        // 1. Declares signal outlets\n        Object.values(precompiledNode.signalOuts).map((outName) => Var(`Float`, outName, `0`)),\n        // 2. Declares message receivers for all message inlets.\n        Object.entries(precompiledNode.messageReceivers).map(([inletId, astFunc]) => {\n            // prettier-ignore\n            return Func(astFunc.name, astFunc.args, astFunc.returnType) `\n                            ${astFunc.body}\n                            throw new Error('Node \"${nodeId}\", inlet \"${inletId}\", unsupported message : ' + ${msg.display}(${astFunc.args[0].name})${debug\n                ? \" + '\\\\nDEBUG : remember, you must return from message receiver'\"\n                : ''})\n                        `;\n        }),\n    ]),\n    // 3. Declares message senders for all message outlets.\n    // This needs to come after all message receivers are declared since we reference them here.\n    graph.fullTraversal\n        .flatMap((nodeId) => Object.values(nodes[nodeId].messageSenders))\n        // If only one sink declared, we don't need to declare the messageSender,\n        // as precompilation takes care of substituting the messageSender name\n        // with the sink name.\n        .filter(({ sinkFunctionNames }) => sinkFunctionNames.length > 0)\n        .map(({ messageSenderName, sinkFunctionNames }) => \n    // prettier-ignore\n    Func(messageSenderName, [\n        Var(msg.Message, `m`)\n    ], 'void') `\n                        ${sinkFunctionNames.map(functionName => `${functionName}(m)`)}\n                    `),\n]);\nconst dspLoop = ({ globals: { core, commons }, precompiledCode: { nodes, graph: { hotDspGroup, coldDspGroups }, }, }) => \n// prettier-ignore\nast `\n        for (${core.IT_FRAME} = 0; ${core.IT_FRAME} < ${core.BLOCK_SIZE}; ${core.IT_FRAME}++) {\n            ${commons._emitFrame}(${core.FRAME})\n            ${hotDspGroup.traversal.map((nodeId) => [\n    // For all inlets dsp functions, we render those that are not\n    // the sink of a cold dsp group.\n    ...Object.entries(nodes[nodeId].dsp.inlets)\n        .filter(([inletId]) => findColdDspGroupFromSink(coldDspGroups, {\n        nodeId,\n        portletId: inletId\n    }) === undefined)\n        .map(([_, astElement]) => astElement),\n    nodes[nodeId].dsp.loop\n])}\n            ${core.FRAME}++\n        }\n    `;\nconst coldDspInitialization = ({ globals: { msg }, precompiledCode: { graph }, }) => Sequence(Object.values(graph.coldDspGroups).map(({ functionName }) => `${functionName}(${msg.EMPTY_MESSAGE})`));\nconst coldDspFunctions = ({ globals: { msg }, precompiledCode: { graph: { coldDspGroups }, nodes, }, }) => Sequence(Object.values(coldDspGroups).map(({ dspGroup, sinkConnections: dspGroupSinkConnections, functionName, }) => \n// prettier-ignore\nFunc(functionName, [\n    Var(msg.Message, `m`)\n], 'void') `\n                    ${dspGroup.traversal.map((nodeId) => nodes[nodeId].dsp.loop)}\n                    ${dspGroupSinkConnections\n    // For all sinks of the cold dsp group, we also render \n    // the inlets dsp functions that are connected to it. \n    .filter(([_, sink]) => sink.portletId in nodes[sink.nodeId].dsp.inlets)\n    .map(([_, sink]) => nodes[sink.nodeId].dsp.inlets[sink.portletId])}\n                `));\nconst importsExports = ({ precompiledCode: { dependencies } }, generateImport, generateExport) => Sequence([\n    dependencies.imports.map(generateImport),\n    dependencies.exports.map(generateExport),\n]);\nvar templates = {\n    dependencies,\n    nodeImplementationsCoreAndStateClasses,\n    nodeStateInstances,\n    nodeInitializations,\n    ioMessageReceivers,\n    ioMessageSenders,\n    portletsDeclarations,\n    dspLoop,\n    coldDspInitialization,\n    coldDspFunctions,\n    importsExports,\n};\n\nexport { templates as default };\n","const render = (macros, element) => {\n    if (typeof element === 'string') {\n        return element;\n    }\n    else if (element.astType === 'Var') {\n        return element.value\n            ? macros.Var(element, render(macros, element.value))\n            : macros.Var(element);\n    }\n    else if (element.astType === 'ConstVar') {\n        if (!element.value) {\n            throw new Error(`ConstVar ${element.name} must have an initial value`);\n        }\n        return macros.ConstVar(element, render(macros, element.value));\n    }\n    else if (element.astType === 'Func') {\n        return macros.Func(element, element.args.map((arg) => arg.value ? render(macros, arg.value) : null), render(macros, element.body));\n    }\n    else if (element.astType === 'Class') {\n        return macros.Class(element);\n    }\n    else if (element.astType === 'Sequence') {\n        return element.content.map((child) => render(macros, child)).join('');\n    }\n    else {\n        throw new Error(`Unexpected element in AST ${element}`);\n    }\n};\n\nexport { render as default };\n","const _addPath = (parent, key, _path) => {\n    const path = _ensurePath(_path);\n    return {\n        keys: [...path.keys, key],\n        parents: [...path.parents, parent],\n    };\n};\nconst _ensurePath = (path) => path || {\n    keys: [],\n    parents: [],\n};\nconst _proxySetHandlerReadOnly = () => {\n    throw new Error('This Proxy is read-only.');\n};\nconst _proxyGetHandlerThrowIfKeyUnknown = (target, key, path) => {\n    if (!(key in target)) {\n        // Whitelist some fields that are undefined but accessed at\n        // some point or another by our code.\n        // TODO : find a better way to do this.\n        if ([\n            'toJSON',\n            'Symbol(Symbol.toStringTag)',\n            'constructor',\n            '$typeof',\n            '$$typeof',\n            '@@__IMMUTABLE_ITERABLE__@@',\n            '@@__IMMUTABLE_RECORD__@@',\n            'then',\n        ].includes(key)) {\n            return true;\n        }\n        throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \"${String(key)}\"`);\n    }\n    return false;\n};\nconst proxyAsAssigner = (spec, _obj, context, _path) => {\n    const path = _path || { keys: [], parents: [] };\n    const obj = proxyAsAssigner.ensureValue(_obj, spec, context, path);\n    // If `_path` is provided, assign the new value to the parent object.\n    if (_path) {\n        const parent = _path.parents[_path.parents.length - 1];\n        const key = _path.keys[_path.keys.length - 1];\n        // The only case where we want to overwrite the existing value\n        // is when it was a `null` assigned by `LiteralDefaultNull`, and\n        // we want to set the real value instead.\n        if (!(key in parent) || 'LiteralDefaultNull' in spec) {\n            parent[key] = obj;\n        }\n    }\n    // If the object is a Literal, end of the recursion.\n    if ('Literal' in spec || 'LiteralDefaultNull' in spec) {\n        return obj;\n    }\n    return new Proxy(obj, {\n        get: (_, k) => {\n            const key = String(k);\n            let nextSpec;\n            if ('Index' in spec) {\n                nextSpec = spec.Index(key, context, path);\n            }\n            else if ('Interface' in spec) {\n                if (!(key in spec.Interface)) {\n                    throw new Error(`Interface has no entry \"${String(key)}\"`);\n                }\n                nextSpec = spec.Interface[key];\n            }\n            else {\n                throw new Error('no builder');\n            }\n            return proxyAsAssigner(nextSpec, \n            // We use this form here instead of `obj[key]` specifically\n            // to allow Assign to play well with `ProtectedIndex`, which\n            // would raise an error if trying to access an undefined key.\n            key in obj ? obj[key] : undefined, context, _addPath(obj, key, path));\n        },\n        set: _proxySetHandlerReadOnly,\n    });\n};\nproxyAsAssigner.ensureValue = (_obj, spec, context, _path, _recursionPath) => {\n    if ('Index' in spec) {\n        return (_obj || spec.indexConstructor(context, _ensurePath(_path)));\n    }\n    else if ('Interface' in spec) {\n        const obj = (_obj || {});\n        Object.entries(spec.Interface).forEach(([key, nextSpec]) => {\n            obj[key] = proxyAsAssigner.ensureValue(obj[key], nextSpec, context, _addPath(obj, key, _path), _addPath(obj, key, _recursionPath));\n        });\n        return obj;\n    }\n    else if ('Literal' in spec) {\n        return (_obj || spec.Literal(context, _ensurePath(_path)));\n    }\n    else if ('LiteralDefaultNull' in spec) {\n        if (!_recursionPath) {\n            return (_obj ||\n                spec.LiteralDefaultNull(context, _ensurePath(_path)));\n        }\n        else {\n            return (_obj || null);\n        }\n    }\n    else {\n        throw new Error('Invalid Assigner');\n    }\n};\nproxyAsAssigner.Interface = (a) => ({ Interface: a });\nproxyAsAssigner.Index = (f, indexConstructor) => ({\n    Index: f,\n    indexConstructor: indexConstructor || (() => ({})),\n});\nproxyAsAssigner.Literal = (f) => ({\n    Literal: f,\n});\nproxyAsAssigner.LiteralDefaultNull = (f) => ({ LiteralDefaultNull: f });\n// ---------------------------- proxyAsProtectedIndex ---------------------------- //\n/**\n * Helper to declare namespace objects enforcing stricter access rules.\n * Specifically, it forbids :\n * - reading an unknown property.\n * - trying to overwrite an existing property.\n */\nconst proxyAsProtectedIndex = (namespace, path) => {\n    return new Proxy(namespace, {\n        get: (target, k) => {\n            const key = String(k);\n            if (_proxyGetHandlerThrowIfKeyUnknown(target, key, path)) {\n                return undefined;\n            }\n            return target[key];\n        },\n        set: (target, k, newValue) => {\n            const key = _trimDollarKey(String(k));\n            if (target.hasOwnProperty(key)) {\n                throw new Error(`Key \"${String(key)}\" is protected and cannot be overwritten.`);\n            }\n            else {\n                target[key] = newValue;\n            }\n            return newValue;\n        },\n    });\n};\n// ---------------------------- proxyAsReadOnlyIndex ---------------------------- //\n/**\n * Helper to declare namespace objects enforcing stricter access rules.\n * Specifically, it forbids :\n * - reading an unknown property.\n * - writing to a property.\n */\nconst proxyAsReadOnlyIndex = (namespace, path) => {\n    return new Proxy(namespace, {\n        get: (target, k) => {\n            const key = String(k);\n            if (_proxyGetHandlerThrowIfKeyUnknown(target, key, path)) {\n                return undefined;\n            }\n            const value = target[key];\n            if (typeof value === 'object' && value !== null) {\n                return proxyAsReadOnlyIndex(value, _addPath(target, key, path));\n            }\n            else {\n                return value;\n            }\n        },\n        set: _proxySetHandlerReadOnly,\n    });\n};\n// ---------------------------- proxyAsReadOnlyIndexWithDollarKeys ---------------------------- //\n/**\n * Helper to declare namespace objects enforcing stricter access rules.\n * Specifically :\n * - it is read only\n * - it throws an error when trying to read an unknown property.\n * - allows to access properties starting with a number by prepending a `$`.\n *      This is convenient to access portlets by their id without using\n *      indexing syntax, for example : `namespace.$0` instead of `namespace['0']`.\n */\nconst proxyAsReadOnlyIndexWithDollarKeys = (namespace, nodeId, name) => {\n    return new Proxy(namespace, {\n        get: (target, k) => {\n            const key = _trimDollarKey(String(k));\n            if (_proxyGetHandlerThrowIfKeyUnknown(target, key, {\n                parents: [target],\n                keys: [nodeId, name],\n            })) {\n                return undefined;\n            }\n            return target[key];\n        },\n        set: _proxySetHandlerReadOnly,\n    });\n};\nconst _trimDollarKey = (key) => {\n    const match = /\\$(.*)/.exec(key);\n    if (!match) {\n        return key;\n    }\n    else {\n        return match[1];\n    }\n};\n\nexport { _proxyGetHandlerThrowIfKeyUnknown, proxyAsAssigner, proxyAsProtectedIndex, proxyAsReadOnlyIndex, proxyAsReadOnlyIndexWithDollarKeys };\n","import { buildMetadata } from '../../compile/render/metadata.js';\nimport templates from '../../compile/render/templates.js';\nimport render from '../../compile/render/index.js';\nimport macros from './macros.js';\nimport { ast } from '../../ast/declare.js';\nimport { proxyAsReadOnlyIndex } from '../../compile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar renderToJavascript = (renderInput) => {\n    const { precompiledCode, settings, variableNamesReadOnly: variableNamesIndex, } = renderInput;\n    const variableNamesReadOnly = proxyAsReadOnlyIndex(variableNamesIndex);\n    const { globals } = variableNamesReadOnly;\n    const renderTemplateInput = {\n        settings,\n        globals,\n        precompiledCode,\n    };\n    const metadata = buildMetadata(renderInput);\n    // prettier-ignore\n    return render(macros, ast `\n        ${templates.dependencies(renderTemplateInput)}\n        ${templates.nodeImplementationsCoreAndStateClasses(renderTemplateInput)}\n\n        ${templates.nodeStateInstances(renderTemplateInput)}\n        ${templates.portletsDeclarations(renderTemplateInput)}\n\n        ${templates.coldDspFunctions(renderTemplateInput)}\n        ${templates.ioMessageReceivers(renderTemplateInput)}\n        ${templates.ioMessageSenders(renderTemplateInput, (variableName, nodeId, outletId) => ast `const ${variableName} = (m) => {exports.io.messageSenders['${nodeId}']['${outletId}'](m)}`)}\n\n        const exports = {\n            metadata: ${JSON.stringify(metadata)},\n            initialize: (sampleRate, blockSize) => {\n                exports.metadata.settings.audio.sampleRate = sampleRate\n                exports.metadata.settings.audio.blockSize = blockSize\n                ${globals.core.SAMPLE_RATE} = sampleRate\n                ${globals.core.BLOCK_SIZE} = blockSize\n\n                ${templates.nodeInitializations(renderTemplateInput)}\n                ${templates.coldDspInitialization(renderTemplateInput)}\n            },\n            dspLoop: (${globals.core.INPUT}, ${globals.core.OUTPUT}) => {\n                ${templates.dspLoop(renderTemplateInput)}\n            },\n            io: {\n                messageReceivers: {\n                    ${Object.entries(precompiledCode.io.messageReceivers).map(([nodeId, portletIdsMap]) => ast `${nodeId}: {\n                            ${Object.entries(portletIdsMap).map(([inletId, { functionName }]) => `\"${inletId}\": ${functionName},`)}\n                        },`)}\n                },\n                messageSenders: {\n                    ${Object.entries(settings.io.messageSenders).map(([nodeId, spec]) => ast `${nodeId}: {\n                            ${spec.portletIds.map(outletId => `\"${outletId}\": () => undefined,`)}\n                        },`)}\n                },\n            }\n        }\n\n        ${templates.importsExports(renderTemplateInput, ({ name }) => ast `\n                exports.${name} = () => { throw new Error('import for ${name} not provided') }\n                const ${name} = (...args) => exports.${name}(...args)\n            `, (name) => ast `exports.${name} = ${name}`)}\n    `);\n};\n\nexport { renderToJavascript as default };\n","import { buildMetadata } from '../../compile/render/metadata.js';\nimport templates from '../../compile/render/templates.js';\nimport render from '../../compile/render/index.js';\nimport macros from './macros.js';\nimport { ast } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar renderToAssemblyscript = (renderInput) => {\n    const { precompiledCode, settings, variableNamesReadOnly: variableNamesIndex, } = renderInput;\n    const globals = variableNamesIndex.globals;\n    const renderTemplateInput = {\n        settings,\n        globals,\n        precompiledCode,\n    };\n    const { channelCount } = settings.audio;\n    const metadata = buildMetadata(renderInput);\n    // prettier-ignore\n    return render(macros, ast `\n        const metadata: string = '${JSON.stringify(metadata)}'\n\n        ${templates.dependencies(renderTemplateInput)}\n        ${templates.nodeImplementationsCoreAndStateClasses(renderTemplateInput)}\n\n        ${templates.nodeStateInstances(renderTemplateInput)}\n        ${templates.portletsDeclarations(renderTemplateInput)}\n\n        ${templates.coldDspFunctions(renderTemplateInput)}\n        ${templates.ioMessageReceivers(renderTemplateInput)}\n        ${templates.ioMessageSenders(renderTemplateInput, (variableName) => ast `export declare function ${variableName}(m: ${globals.msg.Message}): void`)}\n\n        export function initialize(sampleRate: Float, blockSize: Int): void {\n            ${globals.core.INPUT} = createFloatArray(blockSize * ${channelCount.in.toString()})\n            ${globals.core.OUTPUT} = createFloatArray(blockSize * ${channelCount.out.toString()})\n            ${globals.core.SAMPLE_RATE} = sampleRate\n            ${globals.core.BLOCK_SIZE} = blockSize\n\n            ${templates.nodeInitializations(renderTemplateInput)}\n            ${templates.coldDspInitialization(renderTemplateInput)}\n        }\n\n        export function dspLoop(): void {\n            ${templates.dspLoop(renderTemplateInput)}\n        }\n\n        export {\n            metadata,\n            ${Object.values(precompiledCode.io.messageReceivers).map((portletIdsMap) => Object.values(portletIdsMap).map(({ functionName }) => functionName + ','))}\n        }\n\n        ${templates.importsExports(renderTemplateInput, ({ name, args, returnType }) => ast `export declare function ${name} (${args.map((a) => `${a.name}: ${a.type}`).join(',')}): ${returnType}`, (name) => ast `export { ${name} }`)}\n    `);\n};\n\nexport { renderToAssemblyscript as default };\n","import { getNode } from '../../dsp-graph/getters.js';\nimport { getNodeImplementation } from '../compile-helpers.js';\nimport { proxyAsAssigner, proxyAsProtectedIndex } from '../proxies.js';\nimport { ast, Sequence } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ---------------------------- VariableNamesIndex ---------------------------- //\nconst NS = {\n    GLOBALS: 'G',\n    NODES: 'N',\n    NODE_TYPES: 'NT',\n    IO: 'IO',\n    COLD: 'COLD',\n};\nconst _VARIABLE_NAMES_ASSIGNER_SPEC = proxyAsAssigner.Interface({\n    nodes: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Interface({\n        signalOuts: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'outs', portletId))),\n        messageSenders: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'snds', portletId))),\n        messageReceivers: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'rcvs', portletId))),\n        state: proxyAsAssigner.LiteralDefaultNull(() => _name(NS.NODES, nodeId, 'state')),\n    })),\n    nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => {\n        const nodeImplementation = getNodeImplementation(nodeImplementations, nodeType);\n        const nodeTypePrefix = (nodeImplementation.flags\n            ? nodeImplementation.flags.alphaName\n            : null) || nodeType;\n        return proxyAsAssigner.Index((name) => proxyAsAssigner.Literal(() => _name(NS.NODE_TYPES, nodeTypePrefix, name)));\n    }),\n    globals: proxyAsAssigner.Index((ns) => proxyAsAssigner.Index((name) => {\n        if (['fs'].includes(ns)) {\n            return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\n            // We don't prefix stdlib core module, because these are super\n            // basic functions that are always included in the global scope.\n        }\n        else if (ns === 'core') {\n            return proxyAsAssigner.Literal(() => name);\n        }\n        else {\n            return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\n        }\n    })),\n    io: proxyAsAssigner.Interface({\n        messageReceivers: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((inletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'rcv', nodeId, inletId)))),\n        messageSenders: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((outletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'snd', nodeId, outletId)))),\n    }),\n    coldDspGroups: proxyAsAssigner.Index((groupId) => proxyAsAssigner.Literal(() => _name(NS.COLD, groupId))),\n});\n/**\n * Creates a proxy to a VariableNamesIndex object that makes sure that\n * all valid entries are provided with a default value on the fly\n * when they are first accessed.\n */\nconst proxyAsVariableNamesAssigner = ({ input: context, variableNamesIndex, }) => proxyAsAssigner(_VARIABLE_NAMES_ASSIGNER_SPEC, variableNamesIndex, context);\nconst createVariableNamesIndex = (precompilationInput) => proxyAsAssigner.ensureValue({}, _VARIABLE_NAMES_ASSIGNER_SPEC, precompilationInput);\n// ---------------------------- PrecompiledCode ---------------------------- //\nconst _PRECOMPILED_CODE_ASSIGNER_SPEC = proxyAsAssigner.Interface({\n    graph: proxyAsAssigner.Literal((_, path) => ({\n        fullTraversal: [],\n        hotDspGroup: {\n            traversal: [],\n            outNodesIds: [],\n        },\n        coldDspGroups: proxyAsProtectedIndex({}, path),\n    })),\n    nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => proxyAsAssigner.Literal(() => ({\n        nodeImplementation: getNodeImplementation(nodeImplementations, nodeType),\n        stateClass: null,\n        core: null,\n    })), (_, path) => proxyAsProtectedIndex({}, path)),\n    nodes: proxyAsAssigner.Index((nodeId, { graph }) => proxyAsAssigner.Literal(() => ({\n        nodeType: getNode(graph, nodeId).type,\n        messageReceivers: {},\n        messageSenders: {},\n        signalOuts: {},\n        signalIns: {},\n        initialization: ast ``,\n        dsp: {\n            loop: ast ``,\n            inlets: {},\n        },\n        state: null,\n    })), (_, path) => proxyAsProtectedIndex({}, path)),\n    dependencies: proxyAsAssigner.Literal(() => ({\n        imports: [],\n        exports: [],\n        ast: Sequence([]),\n    })),\n    io: proxyAsAssigner.Interface({\n        messageReceivers: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\n        messageSenders: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\n    }),\n});\n/**\n * Creates a proxy to a PrecompiledCode object that makes sure that\n * all valid entries are provided with a default value on the fly\n * when they are first accessed.\n */\nconst proxyAsPrecompiledCodeAssigner = ({ input: context, precompiledCode, }) => proxyAsAssigner(_PRECOMPILED_CODE_ASSIGNER_SPEC, precompiledCode, context);\nconst createPrecompiledCode = (precompilationInput) => proxyAsAssigner.ensureValue({}, _PRECOMPILED_CODE_ASSIGNER_SPEC, precompilationInput);\n// ---------------------------- MISC ---------------------------- //\nconst _name = (...parts) => parts.map(assertValidNamePart).join('_');\nconst assertValidNamePart = (namePart) => {\n    const isInvalid = !VALID_NAME_PART_REGEXP.exec(namePart);\n    if (isInvalid) {\n        throw new Error(`Invalid variable name for code generation \"${namePart}\"`);\n    }\n    return namePart;\n};\nconst VALID_NAME_PART_REGEXP = /^[a-zA-Z0-9_]+$/;\n\nexport { assertValidNamePart, createPrecompiledCode, createVariableNamesIndex, proxyAsPrecompiledCodeAssigner, proxyAsVariableNamesAssigner };\n","import { Sequence, ConstVar, Class, Var, Func } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'sked';\nconst sked = {\n    namespace: NAMESPACE,\n    code: ({ ns: sked }, _, { target }) => {\n        const content = [];\n        if (target === 'assemblyscript') {\n            content.push(`\n                type ${sked.Callback} = (event: ${sked.Event}) => void\n                type ${sked.Id} = Int\n                type ${sked.Mode} = Int\n                type ${sked.Event} = string\n            `);\n        }\n        // prettier-ignore\n        return Sequence([\n            ...content,\n            /**\n             * Skeduler id that will never be used.\n             * Can be used as a \"no id\", or \"null\" value.\n             */\n            ConstVar(sked.Id, sked.ID_NULL, `-1`),\n            ConstVar(sked.Id, sked._ID_COUNTER_INIT, `1`),\n            ConstVar(`Int`, sked._MODE_WAIT, `0`),\n            ConstVar(`Int`, sked._MODE_SUBSCRIBE, `1`),\n            // =========================== SKED API\n            Class(sked._Request, [\n                Var(sked.Id, `id`),\n                Var(sked.Mode, `mode`),\n                Var(sked.Callback, `callback`),\n            ]),\n            Class(sked.Skeduler, [\n                Var(`Map<${sked.Event}, Array<${sked.Id}>>`, `events`),\n                Var(`Map<${sked.Id}, ${sked._Request}>`, `requests`),\n                Var(`boolean`, `isLoggingEvents`),\n                Var(`Set<${sked.Event}>`, `eventLog`),\n                Var(sked.Id, `idCounter`),\n            ]),\n            /** Creates a new Skeduler. */\n            Func(sked.create, [\n                Var(`boolean`, `isLoggingEvents`)\n            ], sked.Skeduler) `\n                return {\n                    eventLog: new Set(),\n                    events: new Map(),\n                    requests: new Map(),\n                    idCounter: ${sked._ID_COUNTER_INIT},\n                    isLoggingEvents,\n                }\n            `,\n            /**\n             * Asks the skeduler to wait for an event to occur and trigger a callback.\n             * If the event has already occurred, the callback is triggered instantly\n             * when calling the function.\n             * Once triggered, the callback is forgotten.\n             * @returns an id allowing to cancel the callback with {@link ${sked.cancel}}\n             */\n            Func(sked.wait, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Event, `event`),\n                Var(sked.Callback, `callback`),\n            ], sked.Id) `\n                if (skeduler.isLoggingEvents === false) {\n                    throw new Error(\"Please activate skeduler's isLoggingEvents\")\n                }\n\n                if (skeduler.eventLog.has(event)) {\n                    callback(event)\n                    return ${sked.ID_NULL}\n                } else {\n                    return ${sked._createRequest}(skeduler, event, callback, ${sked._MODE_WAIT})\n                }\n            `,\n            /**\n             * Asks the skeduler to wait for an event to occur and trigger a callback.\n             * If the event has already occurred, the callback is NOT triggered immediatelly.\n             * Once triggered, the callback is forgotten.\n             * @returns an id allowing to cancel the callback with {@link sked.cancel}\n             */\n            Func(sked.waitFuture, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Event, `event`),\n                Var(sked.Callback, `callback`),\n            ], sked.Id) `\n                return ${sked._createRequest}(skeduler, event, callback, ${sked._MODE_WAIT})\n            `,\n            /**\n             * Asks the skeduler to trigger a callback everytime an event occurs\n             * @returns an id allowing to cancel the callback with {@link sked.cancel}\n             */\n            Func(sked.subscribe, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Event, `event`),\n                Var(sked.Callback, `callback`),\n            ], sked.Id) `\n                return ${sked._createRequest}(skeduler, event, callback, ${sked._MODE_SUBSCRIBE})\n            `,\n            /** Notifies the skeduler that an event has just occurred. */\n            Func(sked.emit, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Event, `event`)\n            ], 'void') `\n                if (skeduler.isLoggingEvents === true) {\n                    skeduler.eventLog.add(event)\n                }\n                if (skeduler.events.has(event)) {\n                    ${ConstVar(`Array<${sked.Id}>`, `skedIds`, `skeduler.events.get(event)`)}\n                    ${ConstVar(`Array<${sked.Id}>`, `skedIdsStaying`, `[]`)}\n                    for (${Var(`Int`, `i`, `0`)}; i < skedIds.length; i++) {\n                        if (skeduler.requests.has(skedIds[i])) {\n                            ${ConstVar(sked._Request, `request`, `skeduler.requests.get(skedIds[i])`)}\n                            request.callback(event)\n                            if (request.mode === ${sked._MODE_WAIT}) {\n                                skeduler.requests.delete(request.id)\n                            } else {\n                                skedIdsStaying.push(request.id)\n                            }\n                        }\n                    }\n                    skeduler.events.set(event, skedIdsStaying)\n                }\n            `,\n            /** Cancels a callback */\n            Func(sked.cancel, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Id, `id`),\n            ], 'void') `\n                skeduler.requests.delete(id)\n            `,\n            // =========================== PRIVATE\n            Func(sked._createRequest, [\n                Var(sked.Skeduler, `skeduler`),\n                Var(sked.Event, `event`),\n                Var(sked.Callback, `callback`),\n                Var(sked.Mode, `mode`),\n            ], sked.Id) `\n                ${ConstVar(sked.Id, `id`, `${sked._nextId}(skeduler)`)}\n                ${ConstVar(sked._Request, `request`, `{\n                    id, \n                    mode, \n                    callback,\n                }`)}\n                skeduler.requests.set(id, request)\n                if (!skeduler.events.has(event)) {\n                    skeduler.events.set(event, [id])    \n                } else {\n                    skeduler.events.get(event).push(id)\n                }\n                return id\n            `,\n            Func(sked._nextId, [\n                Var(sked.Skeduler, `skeduler`)\n            ], sked.Id) `\n                return skeduler.idCounter++\n            `,\n        ]);\n    },\n};\n\nexport { sked };\n","import { Sequence, ConstVar, Func, Var } from '../../ast/declare.js';\nimport { sked } from '../sked/sked.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'commons';\nconst commonsArrays = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: commons }, { sked }, settings) => Sequence([\n        ConstVar('Map<string, FloatArray>', commons._ARRAYS, 'new Map()'),\n        ConstVar(sked.Skeduler, commons._ARRAYS_SKEDULER, `${sked.create}(false)`),\n        /** Gets an named array, throwing an error if the array doesn't exist. */\n        Func(commons.getArray, [\n            Var(`string`, `arrayName`)\n        ], 'FloatArray') `\n            if (!${commons._ARRAYS}.has(arrayName)) {\n                throw new Error('Unknown array ' + arrayName)\n            }\n            return ${commons._ARRAYS}.get(arrayName)\n        `,\n        Func(commons.hasArray, [\n            Var(`string`, `arrayName`)\n        ], 'boolean') `\n            return ${commons._ARRAYS}.has(arrayName)\n        `,\n        Func(commons.setArray, [\n            Var(`string`, `arrayName`),\n            Var(`FloatArray`, `array`),\n        ], 'void') `\n            ${commons._ARRAYS}.set(arrayName, array)\n            ${sked.emit}(${commons._ARRAYS_SKEDULER}, arrayName)\n        `,\n        /**\n         * @param callback Called immediately if the array exists, and subsequently, everytime\n         * the array is set again.\n         * @returns An id that can be used to cancel the subscription.\n         */\n        Func(commons.subscribeArrayChanges, [\n            Var(`string`, `arrayName`),\n            Var(sked.Callback, `callback`),\n        ], sked.Id) `\n            const id = ${sked.subscribe}(${commons._ARRAYS_SKEDULER}, arrayName, callback)\n            if (${commons._ARRAYS}.has(arrayName)) {\n                callback(arrayName)\n            }\n            return id\n        `,\n        /**\n         * @param id The id received when subscribing.\n         */\n        Func(commons.cancelArrayChangesSubscription, [\n            Var(sked.Id, `id`)\n        ], 'void') `\n            ${sked.cancel}(${commons._ARRAYS_SKEDULER}, id)\n        `,\n        // Embed arrays passed at engine creation directly in the code.\n        // This enables the engine to come with some preloaded samples / data.\n        Object.entries(settings.arrays).map(([arrayName, array]) => Sequence([\n            `${commons.setArray}(\"${arrayName}\", createFloatArray(${array.length}))`,\n            `${commons.getArray}(\"${arrayName}\").set(${JSON.stringify(Array.from(array))})`,\n        ]))\n    ]),\n    exports: ({ ns: commons }) => [commons.getArray, commons.setArray],\n    dependencies: [sked],\n};\nconst commonsWaitFrame = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: commons }, { sked }) => Sequence([\n        ConstVar(sked.Skeduler, commons._FRAME_SKEDULER, `${sked.create}(false)`),\n        Func(commons._emitFrame, [\n            Var(`Int`, `frame`)\n        ], 'void') `\n            ${sked.emit}(${commons._FRAME_SKEDULER}, frame.toString())\n        `,\n        /**\n         * Schedules a callback to be called at the given frame.\n         * If the frame already occurred, or is the current frame, the callback won't be executed.\n         */\n        Func(commons.waitFrame, [\n            Var(`Int`, `frame`),\n            Var(sked.Callback, `callback`),\n        ], sked.Id) `\n            return ${sked.waitFuture}(${commons._FRAME_SKEDULER}, frame.toString(), callback)\n        `,\n        /**\n         * Cancels waiting for a frame to occur.\n         */\n        Func(commons.cancelWaitFrame, [\n            Var(sked.Id, `id`)\n        ], 'void') `\n            ${sked.cancel}(${commons._FRAME_SKEDULER}, id)\n        `,\n    ]),\n    dependencies: [sked],\n};\n\nexport { commonsArrays, commonsWaitFrame };\n","import { Func, Var, Sequence } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'core';\nconst core = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: core }, _, { target, audio: { bitDepth } }) => {\n        const Int = 'i32';\n        const Float = bitDepth === 32 ? 'f32' : 'f64';\n        const FloatArray = bitDepth === 32 ? 'Float32Array' : 'Float64Array';\n        const getFloat = bitDepth === 32 ? 'getFloat32' : 'getFloat64';\n        const setFloat = bitDepth === 32 ? 'setFloat32' : 'setFloat64';\n        const declareFuncs = {\n            toInt: Func(core.toInt, [Var(`Float`, `v`)], `Int`),\n            toFloat: Func(core.toFloat, [Var(`Int`, `v`)], `Float`),\n            createFloatArray: Func(core.createFloatArray, [Var(`Int`, `length`)], `FloatArray`),\n            setFloatDataView: Func(core.setFloatDataView, [\n                Var(`DataView`, `dataView`),\n                Var(`Int`, `position`),\n                Var(`Float`, `value`),\n            ], 'void'),\n            getFloatDataView: Func(core.getFloatDataView, [\n                Var(`DataView`, `dataView`),\n                Var(`Int`, `position`),\n            ], 'Float')\n        };\n        const shared = [\n            Var(`Int`, core.IT_FRAME, `0`),\n            Var(`Int`, core.FRAME, `0`),\n            Var(`Int`, core.BLOCK_SIZE, `0`),\n            Var(`Float`, core.SAMPLE_RATE, `0`),\n            Var(`Float`, core.NULL_SIGNAL, `0`),\n            Var(`FloatArray`, core.INPUT, `createFloatArray(0)`),\n            Var(`FloatArray`, core.OUTPUT, `createFloatArray(0)`),\n        ];\n        if (target === 'assemblyscript') {\n            return Sequence([\n                `\n                type FloatArray = ${FloatArray}\n                type Float = ${Float}\n                type Int = ${Int}\n                `,\n                declareFuncs.toInt `\n                    return ${Int}(v)\n                `,\n                declareFuncs.toFloat `\n                    return ${Float}(v)\n                `,\n                declareFuncs.createFloatArray `\n                    return new ${FloatArray}(length)\n                `,\n                declareFuncs.setFloatDataView `\n                    dataView.${setFloat}(position, value)\n                `,\n                declareFuncs.getFloatDataView `\n                    return dataView.${getFloat}(position)\n                `,\n                // =========================== EXPORTED API\n                Func(core.x_createListOfArrays, [], 'FloatArray[]') `\n                    const arrays: FloatArray[] = []\n                    return arrays\n                `,\n                Func(core.x_pushToListOfArrays, [\n                    Var(`FloatArray[]`, `arrays`),\n                    Var(`FloatArray`, `array`)\n                ], 'void') `\n                    arrays.push(array)\n                `,\n                Func(core.x_getListOfArraysLength, [\n                    Var(`FloatArray[]`, `arrays`)\n                ], 'Int') `\n                    return arrays.length\n                `,\n                Func(core.x_getListOfArraysElem, [\n                    Var(`FloatArray[]`, `arrays`),\n                    Var(`Int`, `index`)\n                ], 'FloatArray') `\n                    return arrays[index]\n                `,\n                Func(core.x_getInput, [], 'FloatArray') `\n                    return ${core.INPUT}\n                `,\n                Func(core.x_getOutput, [], 'FloatArray') `\n                    return ${core.OUTPUT}\n                `,\n                ...shared,\n            ]);\n        }\n        else if (target === 'javascript') {\n            return Sequence([\n                `\n                const i32 = (v) => v\n                const f32 = i32\n                const f64 = i32\n                `,\n                declareFuncs.toInt `\n                    return v\n                `,\n                declareFuncs.toFloat `\n                    return v\n                `,\n                declareFuncs.createFloatArray `\n                    return new ${FloatArray}(length)\n                `,\n                declareFuncs.setFloatDataView `\n                    dataView.${setFloat}(position, value)\n                `,\n                declareFuncs.getFloatDataView `\n                    return dataView.${getFloat}(position)\n                `,\n                ...shared,\n            ]);\n        }\n        else {\n            throw new Error(`Unexpected target: ${target}`);\n        }\n    },\n    exports: ({ ns: core }, _, { target }) => target === 'assemblyscript'\n        ? [\n            core.x_createListOfArrays,\n            core.x_pushToListOfArrays,\n            core.x_getListOfArraysLength,\n            core.x_getListOfArraysElem,\n            core.x_getInput,\n            core.x_getOutput,\n            core.createFloatArray,\n        ]\n        : [],\n};\n\nexport { core };\n","import { Func, Var, Sequence, ConstVar, Class } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'msg';\nconst msg = {\n    namespace: NAMESPACE,\n    code: ({ ns: msg }, _, { target }) => {\n        // prettier-ignore\n        const declareFuncs = {\n            create: Func(msg.create, [Var(msg.Template, `template`)], msg.Message),\n            writeStringToken: Func(msg.writeStringToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n                Var(`string`, `value`),\n            ], 'void'),\n            writeFloatToken: Func(msg.writeFloatToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n                Var(msg._FloatToken, `value`),\n            ], 'void'),\n            readStringToken: Func(msg.readStringToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n            ], 'string'),\n            readFloatToken: Func(msg.readFloatToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n            ], msg._FloatToken),\n            getLength: Func(msg.getLength, [\n                Var(msg.Message, `message`)\n            ], 'Int'),\n            getTokenType: Func(msg.getTokenType, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n            ], 'Int'),\n            isStringToken: Func(msg.isStringToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n            ], 'boolean'),\n            isFloatToken: Func(msg.isFloatToken, [\n                Var(msg.Message, `message`),\n                Var(`Int`, `tokenIndex`),\n            ], 'boolean'),\n            isMatching: Func(msg.isMatching, [\n                Var(msg.Message, `message`),\n                Var(`Array<${msg._HeaderEntry}>`, `tokenTypes`),\n            ], 'boolean'),\n            floats: Func(msg.floats, [\n                Var(`Array<Float>`, `values`),\n            ], msg.Message),\n            strings: Func(msg.strings, [\n                Var(`Array<string>`, `values`),\n            ], msg.Message),\n            display: Func(msg.display, [\n                Var(msg.Message, `message`),\n            ], 'string')\n        };\n        const shared = [\n            Func(msg.VOID_MESSAGE_RECEIVER, [Var(msg.Message, `m`)], `void`) ``,\n            Var(msg.Message, msg.EMPTY_MESSAGE, `${msg.create}([])`),\n        ];\n        // Enforce names exist in namespace even if not using AssemblyScript.\n        msg.Template;\n        msg.Handler;\n        if (target === 'assemblyscript') {\n            // prettier-ignore\n            return Sequence([\n                `\n                type ${msg.Template} = Array<Int>\n                \n                type ${msg._FloatToken} = Float\n                type ${msg._CharToken} = Int\n\n                type ${msg._HeaderEntry} = Int\n\n                type ${msg.Handler} = (m: ${msg.Message}) => void\n                `,\n                ConstVar(msg._HeaderEntry, msg.FLOAT_TOKEN, `0`),\n                ConstVar(msg._HeaderEntry, msg.STRING_TOKEN, `1`),\n                // =========================== MSG API\n                declareFuncs.create `\n                    let i: Int = 0\n                    let byteCount: Int = 0\n                    let tokenTypes: Array<${msg._HeaderEntry}> = []\n                    let tokenPositions: Array<${msg._HeaderEntry}> = []\n\n                    i = 0\n                    while (i < template.length) {\n                        switch(template[i]) {\n                            case ${msg.FLOAT_TOKEN}:\n                                byteCount += sizeof<${msg._FloatToken}>()\n                                tokenTypes.push(${msg.FLOAT_TOKEN})\n                                tokenPositions.push(byteCount)\n                                i += 1\n                                break\n                            case ${msg.STRING_TOKEN}:\n                                byteCount += sizeof<${msg._CharToken}>() * template[i + 1]\n                                tokenTypes.push(${msg.STRING_TOKEN})\n                                tokenPositions.push(byteCount)\n                                i += 2\n                                break\n                            default:\n                                throw new Error(\"unknown token type : \" + template[i].toString())\n                        }\n                    }\n\n                    const tokenCount = tokenTypes.length\n                    const headerByteCount = ${msg._computeHeaderLength}(tokenCount) \n                        * sizeof<${msg._HeaderEntry}>()\n                    byteCount += headerByteCount\n\n                    const buffer = new ArrayBuffer(byteCount)\n                    const dataView = new DataView(buffer)\n                    let writePosition: Int = 0\n                    \n                    dataView.setInt32(writePosition, tokenCount)\n                    writePosition += sizeof<${msg._HeaderEntry}>()\n\n                    for (i = 0; i < tokenCount; i++) {\n                        dataView.setInt32(writePosition, tokenTypes[i])\n                        writePosition += sizeof<${msg._HeaderEntry}>()\n                    }\n\n                    dataView.setInt32(writePosition, headerByteCount)\n                    writePosition += sizeof<${msg._HeaderEntry}>()\n                    for (i = 0; i < tokenCount; i++) {\n                        dataView.setInt32(writePosition, headerByteCount + tokenPositions[i])\n                        writePosition += sizeof<${msg._HeaderEntry}>()\n                    }\n\n                    const header = ${msg._unpackHeader}(dataView, tokenCount)\n                    return {\n                        dataView,\n                        tokenCount,\n                        header,\n                        tokenTypes: ${msg._unpackTokenTypes}(header),\n                        tokenPositions: ${msg._unpackTokenPositions}(header),\n                    }\n                `,\n                declareFuncs.writeStringToken `\n                    const startPosition = message.tokenPositions[tokenIndex]\n                    const endPosition = message.tokenPositions[tokenIndex + 1]\n                    const expectedStringLength: Int = (endPosition - startPosition) / sizeof<${msg._CharToken}>()\n                    if (value.length !== expectedStringLength) {\n                        throw new Error('Invalid string size, specified ' + expectedStringLength.toString() + ', received ' + value.length.toString())\n                    }\n\n                    for (let i = 0; i < value.length; i++) {\n                        message.dataView.setInt32(\n                            startPosition + i * sizeof<${msg._CharToken}>(), \n                            value.codePointAt(i)\n                        )\n                    }\n                `,\n                declareFuncs.writeFloatToken `\n                    setFloatDataView(message.dataView, message.tokenPositions[tokenIndex], value)\n                `,\n                declareFuncs.readStringToken `\n                    const startPosition = message.tokenPositions[tokenIndex]\n                    const endPosition = message.tokenPositions[tokenIndex + 1]\n                    const stringLength: Int = (endPosition - startPosition) / sizeof<${msg._CharToken}>()\n                    let value: string = ''\n                    for (let i = 0; i < stringLength; i++) {\n                        value += String.fromCodePoint(message.dataView.getInt32(startPosition + sizeof<${msg._CharToken}>() * i))\n                    }\n                    return value\n                `,\n                declareFuncs.readFloatToken `\n                    return getFloatDataView(message.dataView, message.tokenPositions[tokenIndex])\n                `,\n                declareFuncs.getLength `\n                    return message.tokenTypes.length\n                `,\n                declareFuncs.getTokenType `\n                    return message.tokenTypes[tokenIndex]\n                `,\n                declareFuncs.isStringToken `\n                    return ${msg.getTokenType}(message, tokenIndex) === ${msg.STRING_TOKEN}\n                `,\n                declareFuncs.isFloatToken `\n                    return ${msg.getTokenType}(message, tokenIndex) === ${msg.FLOAT_TOKEN}\n                `,\n                declareFuncs.isMatching `\n                    if (message.tokenTypes.length !== tokenTypes.length) {\n                        return false\n                    }\n                    for (let i: Int = 0; i < tokenTypes.length; i++) {\n                        if (message.tokenTypes[i] !== tokenTypes[i]) {\n                            return false\n                        }\n                    }\n                    return true\n                `,\n                declareFuncs.floats `\n                    const message: ${msg.Message} = ${msg.create}(\n                        values.map<${msg._HeaderEntry}>(v => ${msg.FLOAT_TOKEN}))\n                    for (let i: Int = 0; i < values.length; i++) {\n                        ${msg.writeFloatToken}(message, i, values[i])\n                    }\n                    return message\n                `,\n                declareFuncs.strings `\n                    const template: ${msg.Template} = []\n                    for (let i: Int = 0; i < values.length; i++) {\n                        template.push(${msg.STRING_TOKEN})\n                        template.push(values[i].length)\n                    }\n                    const message: ${msg.Message} = ${msg.create}(template)\n                    for (let i: Int = 0; i < values.length; i++) {\n                        ${msg.writeStringToken}(message, i, values[i])\n                    }\n                    return message\n                `,\n                declareFuncs.display `\n                    let displayArray: Array<string> = []\n                    for (let i: Int = 0; i < ${msg.getLength}(message); i++) {\n                        if (${msg.isFloatToken}(message, i)) {\n                            displayArray.push(${msg.readFloatToken}(message, i).toString())\n                        } else {\n                            displayArray.push('\"' + ${msg.readStringToken}(message, i) + '\"')\n                        }\n                    }\n                    return '[' + displayArray.join(', ') + ']'\n                `,\n                Class(msg.Message, [\n                    Var(`DataView`, `dataView`),\n                    Var(msg._Header, `header`),\n                    Var(msg._HeaderEntry, `tokenCount`),\n                    Var(msg._Header, `tokenTypes`),\n                    Var(msg._Header, `tokenPositions`),\n                ]),\n                // =========================== EXPORTED API\n                Func(msg.x_create, [\n                    Var(`Int32Array`, `templateTypedArray`)\n                ], msg.Message) `\n                    const template: ${msg.Template} = new Array<Int>(templateTypedArray.length)\n                    for (let i: Int = 0; i < templateTypedArray.length; i++) {\n                        template[i] = templateTypedArray[i]\n                    }\n                    return ${msg.create}(template)\n                `,\n                Func(msg.x_getTokenTypes, [\n                    Var(msg.Message, `message`)\n                ], msg._Header) `\n                    return message.tokenTypes\n                `,\n                Func(msg.x_createTemplate, [\n                    Var(`i32`, `length`)\n                ], 'Int32Array') `\n                    return new Int32Array(length)\n                `,\n                // =========================== PRIVATE\n                // Message header : [\n                //      <Token count>, \n                //      <Token 1 type>,  ..., <Token N type>, \n                //      <Token 1 start>, ..., <Token N start>, <Token N end>\n                //      ... DATA ...\n                // ]\n                `type ${msg._Header} = Int32Array`,\n                Func(msg._computeHeaderLength, [\n                    Var(`Int`, `tokenCount`)\n                ], 'Int') `\n                    return 1 + tokenCount * 2 + 1\n                `,\n                Func(msg._unpackHeader, [\n                    Var(`DataView`, `messageDataView`),\n                    Var(msg._HeaderEntry, `tokenCount`),\n                ], msg._Header) `\n                    const headerLength = ${msg._computeHeaderLength}(tokenCount)\n                    // TODO : why is this \\`wrap\\` not working ?\n                    // return Int32Array.wrap(messageDataView.buffer, 0, headerLength)\n                    const messageHeader = new Int32Array(headerLength)\n                    for (let i = 0; i < headerLength; i++) {\n                        messageHeader[i] = messageDataView.getInt32(sizeof<${msg._HeaderEntry}>() * i)\n                    }\n                    return messageHeader\n                `,\n                Func(msg._unpackTokenTypes, [\n                    Var(msg._Header, `header`),\n                ], msg._Header) `\n                    return header.slice(1, 1 + header[0])\n                `,\n                Func(msg._unpackTokenPositions, [\n                    Var(msg._Header, `header`),\n                ], msg._Header) `\n                    return header.slice(1 + header[0])\n                `,\n                ...shared,\n            ]);\n        }\n        else if (target === 'javascript') {\n            // prettier-ignore\n            return Sequence([\n                ConstVar(`string`, msg.FLOAT_TOKEN, `\"number\"`),\n                ConstVar(`string`, msg.STRING_TOKEN, `\"string\"`),\n                declareFuncs.create `\n                    const m = []\n                    let i = 0\n                    while (i < template.length) {\n                        if (template[i] === ${msg.STRING_TOKEN}) {\n                            m.push('')\n                            i += 2\n                        } else if (template[i] === ${msg.FLOAT_TOKEN}) {\n                            m.push(0)\n                            i += 1\n                        }\n                    }\n                    return m\n                `,\n                declareFuncs.getLength `\n                    return message.length\n                `,\n                declareFuncs.getTokenType `\n                    return typeof message[tokenIndex]\n                `,\n                declareFuncs.isStringToken `\n                    return ${msg.getTokenType}(message, tokenIndex) === 'string'\n                `,\n                declareFuncs.isFloatToken `\n                    return ${msg.getTokenType}(message, tokenIndex) === 'number'\n                `,\n                declareFuncs.isMatching `\n                    return (message.length === tokenTypes.length) \n                        && message.every((v, i) => ${msg.getTokenType}(message, i) === tokenTypes[i])\n                `,\n                declareFuncs.writeFloatToken `\n                    message[tokenIndex] = value\n                `,\n                declareFuncs.writeStringToken `\n                    message[tokenIndex] = value\n                `,\n                declareFuncs.readFloatToken `\n                    return message[tokenIndex]\n                `,\n                declareFuncs.readStringToken `\n                    return message[tokenIndex]\n                `,\n                declareFuncs.floats `\n                    return values\n                `,\n                declareFuncs.strings `\n                    return values\n                `,\n                declareFuncs.display `\n                    return '[' + message\n                        .map(t => typeof t === 'string' ? '\"' + t + '\"' : t.toString())\n                        .join(', ') + ']'\n                `,\n                ...shared,\n            ]);\n        }\n        else {\n            throw new Error(`Unexpected target: ${target}`);\n        }\n    },\n    exports: ({ ns: msg }, _, { target }) => target === 'assemblyscript'\n        ? [\n            msg.x_create,\n            msg.x_getTokenTypes,\n            msg.x_createTemplate,\n            msg.writeStringToken,\n            msg.writeFloatToken,\n            msg.readStringToken,\n            msg.readFloatToken,\n            msg.FLOAT_TOKEN,\n            msg.STRING_TOKEN,\n        ]\n        : [],\n};\n\nexport { msg };\n","import { toNodes } from '../../dsp-graph/traversers.js';\nimport { Sequence } from '../../ast/declare.js';\nimport { commonsArrays, commonsWaitFrame } from '../../stdlib/commons/commons.js';\nimport { core } from '../../stdlib/core/core.js';\nimport { msg } from '../../stdlib/msg/msg.js';\nimport { proxyAsReadOnlyIndex } from '../proxies.js';\n\nvar precompileDependencies = (precompilation, minimalDependencies) => {\n    const { settings, variableNamesAssigner, precompiledCodeAssigner } = precompilation;\n    const dependencies = flattenDependencies([\n        ...minimalDependencies,\n        ..._collectDependenciesFromGraph(precompilation),\n    ]);\n    const globals = proxyAsReadOnlyIndex(precompilation.variableNamesIndex.globals);\n    // Flatten and de-duplicate all the module's dependencies\n    precompiledCodeAssigner.dependencies.ast = instantiateAndDedupeDependencies(dependencies, variableNamesAssigner, globals, settings);\n    // Collect and attach imports / exports info\n    precompiledCodeAssigner.dependencies.exports = collectAndDedupeExports(dependencies, variableNamesAssigner, globals, settings);\n    precompiledCodeAssigner.dependencies.imports = collectAndDedupeImports(dependencies, variableNamesAssigner, globals, settings);\n};\nconst instantiateAndDedupeDependencies = (dependencies, variableNamesAssigner, globals, settings) => {\n    return Sequence(dependencies\n        .map((globalDefinitions) => globalDefinitions.code(_getLocalContext(variableNamesAssigner, globalDefinitions), globals, settings))\n        .reduce((astElements, astElement) => astElements.every((otherElement) => !_deepEqual(otherElement, astElement))\n        ? [...astElements, astElement]\n        : astElements, []));\n};\nconst engineMinimalDependencies = () => [\n    core,\n    commonsArrays,\n    commonsWaitFrame,\n    msg,\n];\nconst collectAndDedupeExports = (dependencies, variableNamesAssigner, globals, settings) => dependencies.reduce((exports, globalDefinitions) => globalDefinitions.exports\n    ? [\n        ...exports,\n        ...globalDefinitions\n            .exports(_getLocalContext(variableNamesAssigner, globalDefinitions), globals, settings)\n            .filter((xprt) => exports.every((otherExport) => xprt !== otherExport)),\n    ]\n    : exports, []);\nconst collectAndDedupeImports = (dependencies, variableNamesAssigner, globals, settings) => dependencies.reduce((imports, globalDefinitions) => globalDefinitions.imports\n    ? [\n        ...imports,\n        ...globalDefinitions\n            .imports(_getLocalContext(variableNamesAssigner, globalDefinitions), globals, settings)\n            .filter((imprt) => imports.every((otherImport) => imprt.name !== otherImport.name)),\n    ]\n    : imports, []);\nconst flattenDependencies = (dependencies) => dependencies.flatMap((globalDefinitions) => {\n    if (globalDefinitions.dependencies) {\n        return [\n            ...flattenDependencies(globalDefinitions.dependencies),\n            globalDefinitions,\n        ];\n    }\n    else {\n        return [globalDefinitions];\n    }\n});\nconst _collectDependenciesFromGraph = ({ graph, precompiledCodeAssigner, }) => {\n    return toNodes(graph, precompiledCodeAssigner.graph.fullTraversal)\n        .reduce((definitions, node) => {\n        const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n        const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n        return [\n            ...definitions,\n            ...(precompiledNodeImplementation.nodeImplementation\n                .dependencies || []),\n        ];\n    }, []);\n};\nconst _deepEqual = (ast1, ast2) => \n// This works but this flawed cause {a: 1, b: 2} and {b: 2, a: 1}\n// would compare to false.\nJSON.stringify(ast1) === JSON.stringify(ast2);\nconst _getLocalContext = (variableNamesAssigner, globalDefinitions) => ({\n    ns: _getAssignerNamespace(variableNamesAssigner, globalDefinitions),\n});\nconst _getAssignerNamespace = (variableNamesAssigner, globalDefinitions) => variableNamesAssigner.globals[globalDefinitions.namespace];\n\nexport { collectAndDedupeExports, collectAndDedupeImports, precompileDependencies as default, engineMinimalDependencies, flattenDependencies, instantiateAndDedupeDependencies };\n","/**\n * Helper to assert that two given AST functions have the same signature.\n */\nconst assertFuncSignatureEqual = (actual, expected) => {\n    if (typeof actual !== 'object' || actual.astType !== 'Func') {\n        throw new Error(`Expected an ast Func, got : ${actual}`);\n    }\n    else if (actual.args.length !== expected.args.length ||\n        actual.args.some((arg, i) => {\n            const expectedArg = expected.args[i];\n            return !expectedArg || arg.type !== expectedArg.type;\n        }) ||\n        actual.returnType !== expected.returnType) {\n        throw new Error(`Func should be have signature ${_printFuncSignature(expected)}` +\n            ` got instead ${_printFuncSignature(actual)}`);\n    }\n    return actual;\n};\nconst _printFuncSignature = (func) => `(${func.args.map((arg) => `${arg.name}: ${arg.type}`).join(', ')}) => ${func.returnType}`;\n\nexport { assertFuncSignatureEqual };\n","import { assertFuncSignatureEqual } from '../../ast/ast-helpers.js';\nimport { AnonFunc, Var, ast } from '../../ast/declare.js';\nimport render from '../render/index.js';\nimport { mapArray } from '../../functional-helpers.js';\nimport { getNode, getSources, getOutlet } from '../../dsp-graph/getters.js';\nimport { getMacros } from '../compile-helpers.js';\nimport { proxyAsReadOnlyIndexWithDollarKeys, proxyAsReadOnlyIndex } from '../proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst precompileState = ({ settings, variableNamesAssigner, precompiledCodeAssigner, }, node) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    if (precompiledNodeImplementation.nodeImplementation.state) {\n        const { ns, globals } = _getContext(node.id, precompiledNode, variableNamesAssigner);\n        const astClass = precompiledNodeImplementation.nodeImplementation.state({\n            ns,\n            node,\n        }, globals, settings);\n        // Add state iniialization to the node.\n        precompiledNode.state = {\n            name: variableNamesAssigner.nodes[node.id].state,\n            initialization: astClass.members.reduce((stateInitialization, astVar) => ({\n                ...stateInitialization,\n                [astVar.name]: astVar.value,\n            }), {}),\n        };\n    }\n};\n/**\n * This needs to be in a separate function as `precompileMessageInlet`, because we need\n * all portlet variable names defined before we can precompile message receivers.\n */\nconst precompileMessageReceivers = ({ settings, variableNamesAssigner, precompiledCodeAssigner, }, node) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    const { state, snds, ns, globals } = _getContext(node.id, precompiledNode, variableNamesAssigner);\n    const messageReceivers = proxyAsReadOnlyIndexWithDollarKeys(precompiledNodeImplementation.nodeImplementation.messageReceivers\n        ? precompiledNodeImplementation.nodeImplementation.messageReceivers({\n            ns,\n            state,\n            snds,\n            node,\n        }, globals, settings)\n        : {}, node.id, 'messageReceivers');\n    Object.keys(precompiledNode.messageReceivers).forEach((inletId) => {\n        const implementedFunc = messageReceivers[inletId];\n        assertFuncSignatureEqual(implementedFunc, AnonFunc([Var(globals.msg.Message, `m`)], `void`) ``);\n        const targetFunc = precompiledNode.messageReceivers[inletId];\n        // We can't override values in the namespace, so we need to copy\n        // the function's properties one by one.\n        targetFunc.name =\n            variableNamesAssigner.nodes[node.id].messageReceivers[inletId];\n        targetFunc.args = implementedFunc.args;\n        targetFunc.body = implementedFunc.body;\n        targetFunc.returnType = implementedFunc.returnType;\n    });\n};\nconst precompileInitialization = ({ settings, variableNamesAssigner, precompiledCodeAssigner, }, node) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    const { state, snds, ns, globals } = _getContext(node.id, precompiledNode, variableNamesAssigner);\n    precompiledNode.initialization = precompiledNodeImplementation\n        .nodeImplementation.initialization\n        ? precompiledNodeImplementation.nodeImplementation.initialization({\n            ns,\n            state,\n            snds,\n            node,\n        }, globals, settings)\n        : ast ``;\n};\nconst precompileDsp = ({ settings, variableNamesAssigner, precompiledCodeAssigner, }, node) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n    const { outs, ins, snds, state, ns, globals } = _getContext(node.id, precompiledNode, variableNamesAssigner);\n    if (!precompiledNodeImplementation.nodeImplementation.dsp) {\n        throw new Error(`No dsp to generate for node ${node.type}:${node.id}`);\n    }\n    const compiledDsp = precompiledNodeImplementation.nodeImplementation.dsp({\n        ns,\n        node,\n        state,\n        ins,\n        outs,\n        snds,\n    }, globals, settings);\n    // Nodes that come here might have inlinable dsp, but still can't\n    // be inlined because, for example, they have 2 sinks.\n    if (precompiledNodeImplementation.nodeImplementation.flags &&\n        precompiledNodeImplementation.nodeImplementation.flags.isDspInline) {\n        if ('loop' in compiledDsp) {\n            throw new Error(`Invalid dsp definition for inlinable node ${node.type}:${node.id}`);\n        }\n        const outletId = Object.keys(node.outlets)[0];\n        precompiledNode.dsp.loop = ast `${variableNamesAssigner.nodes[node.id]\n            .signalOuts[outletId]} = ${compiledDsp}`;\n    }\n    else if ('loop' in compiledDsp) {\n        precompiledNode.dsp.loop = compiledDsp.loop;\n        Object.entries(compiledDsp.inlets).forEach(([inletId, precompiledDspForInlet]) => {\n            precompiledNode.dsp.inlets[inletId] = precompiledDspForInlet;\n        });\n    }\n    else {\n        precompiledNode.dsp.loop = compiledDsp;\n    }\n};\n/**\n * Inlines a dsp group of inlinable nodes into a single string.\n * That string is then injected as signal input to the sink of our dsp group.\n * e.g. :\n *\n * ```\n *          [  n1  ]      <-  inlinable dsp group\n *               \\          /\n *    [  n2  ]  [  n3  ]  <-\n *      \\        /\n *       \\      /\n *        \\    /\n *       [  n4  ]  <- out node for the dsp group\n *           |\n *       [  n5  ]  <- non-inlinable node, sink of the group\n *\n * ```\n */\nconst precompileInlineDsp = ({ graph, settings, variableNamesAssigner, precompiledCodeAssigner, }, dspGroup) => {\n    const inlinedNodes = dspGroup.traversal.reduce((inlinedNodes, nodeId) => {\n        const precompiledNode = precompiledCodeAssigner.nodes[nodeId];\n        const precompiledNodeImplementation = precompiledCodeAssigner.nodeImplementations[precompiledNode.nodeType];\n        const { ins, outs, snds, state, ns, globals } = _getContext(nodeId, precompiledNode, variableNamesAssigner);\n        const node = getNode(graph, nodeId);\n        const inlinedInputs = mapArray(\n        // Select signal inlets with sources\n        Object.values(node.inlets)\n            .map((inlet) => [inlet, getSources(node, inlet.id)])\n            .filter(([inlet, sources]) => inlet.type === 'signal' &&\n            sources.length > 0 &&\n            // We filter out sources that are not inlinable.\n            // These sources will just be represented by their outlet's\n            // variable name.\n            dspGroup.traversal.includes(sources[0].nodeId)), \n        // Build map of inlined inputs\n        ([inlet, sources]) => {\n            // Because it's a signal connection, we have only one source per inlet\n            const source = sources[0];\n            if (!(source.nodeId in inlinedNodes)) {\n                throw new Error(`Unexpected error : inlining failed, missing inlined source ${source.nodeId}`);\n            }\n            return [inlet.id, inlinedNodes[source.nodeId]];\n        });\n        if (!precompiledNodeImplementation.nodeImplementation.dsp) {\n            throw new Error(`No dsp to generate for node ${node.type}:${node.id}`);\n        }\n        const compiledDsp = precompiledNodeImplementation.nodeImplementation.dsp({\n            ns,\n            state,\n            ins: proxyAsReadOnlyIndexWithDollarKeys({\n                ...ins,\n                ...inlinedInputs,\n            }, nodeId, 'ins'),\n            outs,\n            snds,\n            node,\n        }, globals, settings);\n        if (!('astType' in compiledDsp)) {\n            throw new Error(`Inlined dsp can only be an AstSequence`);\n        }\n        return {\n            ...inlinedNodes,\n            [nodeId]: '(' + render(getMacros(settings.target), compiledDsp) + ')',\n        };\n    }, {});\n    const groupSinkNode = _getInlinableGroupSinkNode(graph, dspGroup);\n    precompiledCodeAssigner.nodes[groupSinkNode.nodeId].signalIns[groupSinkNode.portletId] = inlinedNodes[dspGroup.outNodesIds[0]];\n};\nconst _getContext = (nodeId, precompiledNode, variableNamesAssigner) => ({\n    globals: proxyAsReadOnlyIndex(variableNamesAssigner.globals),\n    ns: proxyAsReadOnlyIndex(variableNamesAssigner.nodeImplementations[precompiledNode.nodeType]),\n    state: precompiledNode.state ? precompiledNode.state.name : '',\n    ins: proxyAsReadOnlyIndexWithDollarKeys(precompiledNode.signalIns, nodeId, 'ins'),\n    outs: proxyAsReadOnlyIndexWithDollarKeys(precompiledNode.signalOuts, nodeId, 'outs'),\n    snds: proxyAsReadOnlyIndexWithDollarKeys(Object.entries(precompiledNode.messageSenders).reduce((snds, [outletId, { messageSenderName }]) => ({\n        ...snds,\n        [outletId]: messageSenderName,\n    }), {}), nodeId, 'snds'),\n    rcvs: proxyAsReadOnlyIndexWithDollarKeys(Object.entries(precompiledNode.messageReceivers).reduce((rcvs, [inletId, astFunc]) => ({\n        ...rcvs,\n        [inletId]: astFunc.name,\n    }), {}), nodeId, 'rcvs'),\n});\nconst _getInlinableGroupSinkNode = (graph, dspGroup) => {\n    const groupOutNode = getNode(graph, dspGroup.outNodesIds[0]);\n    return Object.entries(groupOutNode.sinks).find(([outletId]) => {\n        const outlet = getOutlet(groupOutNode, outletId);\n        return outlet.type === 'signal';\n    })[1][0];\n};\n\nexport { precompileDsp, precompileInitialization, precompileInlineDsp, precompileMessageReceivers, precompileState };\n","import { Func, Var } from '../../ast/declare.js';\nimport { getSinks, getSources } from '../../dsp-graph/getters.js';\nimport { isNodeInsideGroup } from './dsp-groups.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst precompileSignalOutlet = (precompilation, node, outletId) => {\n    const { variableNamesAssigner, precompiledCodeAssigner } = precompilation;\n    const outletSinks = getSinks(node, outletId);\n    // Signal inlets can receive input from ONLY ONE signal.\n    // Therefore, we substitute inlet variable directly with\n    // previous node's outs. e.g. instead of :\n    //\n    //      NODE2_IN = NODE1_OUT\n    //      NODE2_OUT = NODE2_IN * 2\n    //\n    // we will have :\n    //\n    //      NODE2_OUT = NODE1_OUT * 2\n    //\n    const signalOutName = variableNamesAssigner.nodes[node.id].signalOuts[outletId];\n    precompiledCodeAssigner.nodes[node.id].signalOuts[outletId] = signalOutName;\n    outletSinks.forEach(({ portletId: inletId, nodeId: sinkNodeId }) => {\n        precompiledCodeAssigner.nodes[sinkNodeId].signalIns[inletId] =\n            signalOutName;\n    });\n};\nconst precompileSignalInletWithNoSource = ({ variableNamesAssigner, precompiledCodeAssigner }, node, inletId) => {\n    precompiledCodeAssigner.nodes[node.id].signalIns[inletId] =\n        variableNamesAssigner.globals.core.NULL_SIGNAL;\n};\nconst precompileMessageOutlet = ({ variableNamesAssigner, precompiledCodeAssigner }, sourceNode, outletId) => {\n    const outletSinks = getSinks(sourceNode, outletId);\n    const precompiledNode = precompiledCodeAssigner.nodes[sourceNode.id];\n    const sinkFunctionNames = [\n        ...outletSinks.map(({ nodeId: sinkNodeId, portletId: inletId }) => variableNamesAssigner.nodes[sinkNodeId].messageReceivers[inletId]),\n        ...outletSinks.reduce((coldDspFunctionNames, sink) => {\n            const groupsContainingSink = Object.entries(precompiledCodeAssigner.graph.coldDspGroups)\n                .filter(([_, { dspGroup }]) => isNodeInsideGroup(dspGroup, sink.nodeId))\n                .map(([groupId]) => groupId);\n            const functionNames = groupsContainingSink.map((groupId) => variableNamesAssigner.coldDspGroups[groupId]);\n            return [...coldDspFunctionNames, ...functionNames];\n        }, []),\n    ];\n    // If there are several functions to call, we then need to generate\n    // a message sender function to call all these functions, e.g. :\n    //\n    //      const NODE1_SND = (m) => {\n    //          NODE3_RCV(m)\n    //          NODE2_RCV(m)\n    //      }\n    //\n    if (sinkFunctionNames.length > 1) {\n        precompiledNode.messageSenders[outletId] = {\n            messageSenderName: variableNamesAssigner.nodes[sourceNode.id].messageSenders[outletId],\n            sinkFunctionNames,\n        };\n    }\n    // For a message outlet that sends to a single function,\n    // its SND can be directly replaced by that function, instead\n    // of creating a dedicated message sender.\n    // e.g. instead of (which is useful if several sinks) :\n    //\n    //      const NODE1_SND = (m) => {\n    //          NODE2_RCV(m)\n    //      }\n    //      // ...\n    //      NODE1_SND(m)\n    //\n    // we can directly substitute NODE1_SND by NODE2_RCV :\n    //\n    //      NODE2_RCV(m)\n    //\n    else if (sinkFunctionNames.length === 1) {\n        precompiledNode.messageSenders[outletId] = {\n            messageSenderName: sinkFunctionNames[0],\n            sinkFunctionNames: [],\n        };\n    }\n    // If no function to call, we assign the node SND\n    // a function that does nothing\n    else {\n        precompiledNode.messageSenders[outletId] = {\n            messageSenderName: variableNamesAssigner.globals.msg.VOID_MESSAGE_RECEIVER,\n            sinkFunctionNames: [],\n        };\n    }\n};\nconst precompileMessageInlet = ({ variableNamesAssigner, precompiledCodeAssigner }, node, inletId) => {\n    const precompiledNode = precompiledCodeAssigner.nodes[node.id];\n    const globals = variableNamesAssigner.globals;\n    if (getSources(node, inletId).length >= 1) {\n        const messageReceiverName = variableNamesAssigner.nodes[node.id].messageReceivers[inletId];\n        // Add a placeholder message receiver that should be substituted when\n        // precompiling message receivers.\n        precompiledNode.messageReceivers[inletId] = Func(messageReceiverName, [Var(globals.msg.Message, `m`)], 'void') `throw new Error(\"This placeholder should have been replaced during precompilation\")`;\n    }\n};\n\nexport { precompileMessageInlet, precompileMessageOutlet, precompileSignalInletWithNoSource, precompileSignalOutlet };\n","const STATE_CLASS_NAME = 'State';\nconst precompileStateClass = ({ graph, settings, variableNamesReadOnly, variableNamesAssigner, precompiledCodeAssigner, }, nodeType) => {\n    const precompiledImplementation = precompiledCodeAssigner.nodeImplementations[nodeType];\n    if (precompiledImplementation.nodeImplementation.state) {\n        const sampleNode = Object.values(graph).find((node) => node.type === nodeType);\n        if (!sampleNode) {\n            throw new Error(`No node of type \"${nodeType}\" exists in the graph.`);\n        }\n        // Ensure the class name exists in the namespace.\n        _getNamespace(nodeType, variableNamesAssigner)[STATE_CLASS_NAME];\n        const astClass = precompiledImplementation.nodeImplementation.state({\n            ns: _getNamespace(nodeType, variableNamesReadOnly),\n            node: sampleNode,\n        }, variableNamesReadOnly.globals, settings);\n        precompiledImplementation.stateClass = {\n            ...astClass,\n            // Reset member values since they are irrelevant for the state class declaration.\n            members: astClass.members.map((member) => ({\n                ...member,\n                value: undefined,\n            })),\n        };\n    }\n};\nconst precompileCore = ({ settings, variableNamesReadOnly, variableNamesAssigner, precompiledCodeAssigner, }, nodeType) => {\n    const precompiledImplementation = precompiledCodeAssigner.nodeImplementations[nodeType];\n    const nodeImplementation = precompiledImplementation.nodeImplementation;\n    if (nodeImplementation.core) {\n        precompiledImplementation.core = nodeImplementation.core({\n            ns: _getNamespace(nodeType, variableNamesAssigner),\n        }, variableNamesReadOnly.globals, settings);\n    }\n};\nconst _getNamespace = (nodeType, variableNamesIndex) => variableNamesIndex.nodeImplementations[nodeType];\n\nexport { STATE_CLASS_NAME, precompileCore, precompileStateClass };\n","import { getNode, getSources, getSinks, getOutlet, getInlet } from './getters.js';\nimport { endpointsEqual } from './graph-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst addNode = (graph, node) => {\n    if (!graph[node.id]) {\n        graph[node.id] = node;\n    }\n    else {\n        throw new Error(`Node \"${node.id}\" already exists`);\n    }\n    return graph[node.id];\n};\nconst connect = (graph, source, sink) => {\n    const sinkNode = getNode(graph, sink.nodeId);\n    const sourceNode = getNode(graph, source.nodeId);\n    const otherSources = getSources(sinkNode, sink.portletId);\n    const otherSinks = getSinks(sourceNode, source.portletId);\n    const outlet = getOutlet(sourceNode, source.portletId);\n    const inlet = getInlet(sinkNode, sink.portletId);\n    // Avoid duplicate connections : we check only on sinks,\n    // because we assume that connections are always consistent on both sides.\n    if (otherSinks.some((otherSink) => endpointsEqual(sink, otherSink))) {\n        return;\n    }\n    // Check that connection is valid\n    if (!outlet) {\n        throw new Error(`Undefined outlet ${source.nodeId}:${source.portletId}`);\n    }\n    if (!inlet) {\n        throw new Error(`Undefined inlet ${sink.nodeId}:${sink.portletId}`);\n    }\n    if (outlet.type !== inlet.type) {\n        throw new Error(`Incompatible portlets types ${source.nodeId} | ${source.portletId} (${outlet.type}) -> ${sink.nodeId} | ${sink.portletId} (${inlet.type})`);\n    }\n    if (inlet.type === 'signal' && otherSources.length) {\n        throw new Error(`Signal inlets can have only one connection`);\n    }\n    _ensureConnectionEndpointArray(sinkNode.sources, sink.portletId).push(source);\n    _ensureConnectionEndpointArray(sourceNode.sinks, source.portletId).push(sink);\n};\n/** Remove all existing connections from `sourceNodeId` to `sinkNodeId`. */\nconst disconnectNodes = (graph, sourceNodeId, sinkNodeId) => {\n    const sourceNode = getNode(graph, sourceNodeId);\n    const sinkNode = getNode(graph, sinkNodeId);\n    Object.entries(sinkNode.sources).forEach(([inletId, sources]) => (sinkNode.sources[inletId] = sources.filter((source) => source.nodeId !== sourceNodeId)));\n    Object.entries(sourceNode.sinks).forEach(([outletId, sinks]) => (sourceNode.sinks[outletId] = sinks.filter((sink) => sink.nodeId !== sinkNodeId)));\n};\n/** Delete node from the graph, also cleaning all the connections from and to other nodes. */\nconst deleteNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (!node) {\n        return;\n    }\n    // `slice(0)` because array might change during iteration\n    Object.values(node.sources).forEach((sources) => sources\n        .slice(0)\n        .forEach((source) => disconnectNodes(graph, source.nodeId, nodeId)));\n    Object.values(node.sinks).forEach((sinks) => sinks\n        .slice(0)\n        .forEach((sink) => disconnectNodes(graph, nodeId, sink.nodeId)));\n    delete graph[nodeId];\n};\nconst _ensureConnectionEndpointArray = (portletMap, portletId) => (portletMap[portletId] = portletMap[portletId] || []);\n\nexport { addNode, connect, deleteNode, disconnectNodes };\n","import { AnonFunc, Var } from '../../ast/declare.js';\nimport { addNode, connect } from '../../dsp-graph/mutators.js';\nimport { nodeDefaults } from '../../dsp-graph/graph-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst MESSAGE_RECEIVER_NODE_TYPE = '_messageReceiver';\n// See `/render/templates.ioMessageReceivers` to see how this works.\nconst messageReceiverNodeImplementation = {};\nconst MESSAGE_SENDER_NODE_TYPE = '_messageSender';\nconst messageSenderNodeImplementation = {\n    messageReceivers: ({ node: { args } }, { msg }) => ({\n        // prettier-ignore\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n                ${args.messageSenderName}(m)\n                return\n            `,\n    }),\n};\nconst addNodeImplementationsForMessageIo = (nodeImplementations) => {\n    if (nodeImplementations[MESSAGE_RECEIVER_NODE_TYPE]) {\n        throw new Error(`Reserved node type '${MESSAGE_RECEIVER_NODE_TYPE}' already exists. Please use a different name.`);\n    }\n    if (nodeImplementations[MESSAGE_SENDER_NODE_TYPE]) {\n        throw new Error(`Reserved node type '${MESSAGE_SENDER_NODE_TYPE}' already exists. Please use a different name.`);\n    }\n    nodeImplementations[MESSAGE_RECEIVER_NODE_TYPE] =\n        messageReceiverNodeImplementation;\n    nodeImplementations[MESSAGE_SENDER_NODE_TYPE] =\n        messageSenderNodeImplementation;\n};\nconst precompileIoMessageReceiver = ({ precompiledCode, graph, variableNamesAssigner, precompiledCodeAssigner, }, specNodeId, specInletId) => {\n    const nodeId = _getNodeId(graph, 'messageReceiver', specNodeId, specInletId);\n    const messageReceiverNode = {\n        ...nodeDefaults(nodeId, MESSAGE_RECEIVER_NODE_TYPE),\n        // To force the node to be included in the traversal\n        isPushingMessages: true,\n        outlets: {\n            '0': { id: '0', type: 'message' },\n        },\n    };\n    addNode(graph, messageReceiverNode);\n    connect(graph, { nodeId, portletId: '0' }, { nodeId: specNodeId, portletId: specInletId });\n    precompiledCodeAssigner.io.messageReceivers[specNodeId][specInletId] = {\n        functionName: variableNamesAssigner.io.messageReceivers[specNodeId][specInletId],\n        // When a message is received from outside of the engine, we proxy it by\n        // calling our dummy node's messageSender function on outlet 0, so\n        // the message is injected in the graph as a normal message would.\n        getSinkFunctionName: () => precompiledCode.nodes[nodeId].messageSenders['0']\n            .messageSenderName,\n    };\n};\nconst precompileIoMessageSender = ({ graph, variableNamesAssigner, precompiledCodeAssigner }, specNodeId, specOutletId) => {\n    const nodeId = _getNodeId(graph, 'messageSender', specNodeId, specOutletId);\n    const messageSenderName = variableNamesAssigner.io.messageSenders[specNodeId][specOutletId];\n    const messageSenderNode = {\n        ...nodeDefaults(nodeId, MESSAGE_SENDER_NODE_TYPE),\n        args: {\n            messageSenderName,\n        },\n        inlets: {\n            '0': { id: '0', type: 'message' },\n        },\n    };\n    addNode(graph, messageSenderNode);\n    connect(graph, { nodeId: specNodeId, portletId: specOutletId }, { nodeId, portletId: '0' });\n    precompiledCodeAssigner.io.messageSenders[specNodeId][specOutletId] = {\n        functionName: messageSenderName,\n    };\n};\n// TODO : move to node id assignment function todo-node-ids\nconst _getNodeId = (graph, ns, specNodeId, specPortletId) => {\n    const nodeId = `n_io${ns === 'messageReceiver' ? 'Rcv' : 'Snd'}_${specNodeId}_${specPortletId}`;\n    if (graph[nodeId]) {\n        throw new Error(`Node id ${nodeId} already exists in graph`);\n    }\n    return nodeId;\n};\n\nexport { addNodeImplementationsForMessageIo, precompileIoMessageReceiver, precompileIoMessageSender };\n","import { trimGraph, toNodes } from '../../dsp-graph/traversers.js';\nimport { getSources } from '../../dsp-graph/getters.js';\nimport { createPrecompiledCode, createVariableNamesIndex, proxyAsVariableNamesAssigner, proxyAsPrecompiledCodeAssigner } from './proxies.js';\nimport { buildFullGraphTraversal, getNodeImplementationsUsedInGraph, buildGraphTraversalSignal, getGraphSignalSinks } from '../compile-helpers.js';\nimport precompileDependencies, { engineMinimalDependencies } from './dependencies.js';\nimport { precompileState, precompileInlineDsp, precompileDsp, precompileInitialization, precompileMessageReceivers } from './nodes.js';\nimport { precompileSignalInletWithNoSource, precompileMessageInlet, precompileMessageOutlet, precompileSignalOutlet } from './portlet.js';\nimport { buildColdDspGroups, buildHotDspGroup, buildInlinableDspGroups, removeNodesFromTraversal, precompileColdDspGroup } from './dsp-groups.js';\nimport { precompileCore, precompileStateClass } from './node-implementations.js';\nimport { addNodeImplementationsForMessageIo, precompileIoMessageReceiver, precompileIoMessageSender } from './io.js';\nimport { proxyAsReadOnlyIndex } from '../proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar precompile = (precompilationInput) => {\n    const precompilation = initializePrecompilation(precompilationInput);\n    // -------------------- MESSAGE IOs ------------------ //\n    // In this section we will modify the graph, by adding nodes\n    // for io messages. Therefore this is the very first thing that needs\n    // to be done, so that these nodes are handled by the rest of the precompilation.\n    addNodeImplementationsForMessageIo(precompilation.nodeImplementations);\n    Object.entries(precompilationInput.settings.io.messageReceivers).forEach(([specNodeId, spec]) => {\n        spec.portletIds.forEach((specInletId) => {\n            precompileIoMessageReceiver(precompilation, specNodeId, specInletId);\n        });\n    });\n    Object.entries(precompilationInput.settings.io.messageSenders).forEach(([specNodeId, spec]) => {\n        spec.portletIds.forEach((specInletId) => {\n            precompileIoMessageSender(precompilation, specNodeId, specInletId);\n        });\n    });\n    // Remove unused nodes\n    precompilation.graph = trimGraph(precompilation.graph, buildFullGraphTraversal(precompilation.graph));\n    // Remove unused node implementations\n    precompilation.nodeImplementations = getNodeImplementationsUsedInGraph(precompilation.graph, precompilation.nodeImplementations);\n    precompilation.precompiledCode.graph.fullTraversal =\n        buildFullGraphTraversal(precompilation.graph);\n    const nodes = toNodes(precompilation.graph, precompilation.precompiledCode.graph.fullTraversal);\n    // ------------------------ DEPENDENCIES ------------------------ //\n    precompileDependencies(precompilation, engineMinimalDependencies());\n    // -------------------- NODE IMPLEMENTATIONS & STATES ------------------ //\n    Object.keys(precompilation.nodeImplementations).forEach((nodeType) => {\n        // Run first because we might use some members declared here\n        // in the state initialization.\n        precompileCore(precompilation, nodeType);\n        precompileStateClass(precompilation, nodeType);\n    });\n    nodes.forEach((node) => {\n        precompileState(precompilation, node);\n    });\n    // ------------------------ DSP GROUPS ------------------------ //\n    // These are groups of nodes that are mostly used for optimizing\n    // the dsp loop :\n    //  - inlining dsp calculation when this can be done, to avoid copying\n    //      between variables if not needed\n    //  - taking out of the loop dsp (aka hot dsp) calculations that don't\n    //      need to be recomputed at every tick (aka cold dsp)\n    const rootDspGroup = {\n        traversal: buildGraphTraversalSignal(precompilation.graph),\n        outNodesIds: getGraphSignalSinks(precompilation.graph).map((node) => node.id),\n    };\n    const coldDspGroups = buildColdDspGroups(precompilation, rootDspGroup);\n    const hotDspGroup = buildHotDspGroup(precompilation, rootDspGroup, coldDspGroups);\n    const hotAndColdDspGroups = [hotDspGroup, ...coldDspGroups];\n    const inlinableDspGroups = hotAndColdDspGroups.flatMap((parentDspGroup) => {\n        const inlinableDspGroups = buildInlinableDspGroups(precompilation, parentDspGroup);\n        // Nodes that will be inlined shouldnt be in the traversal for\n        // their parent dsp group.\n        parentDspGroup.traversal = removeNodesFromTraversal(parentDspGroup.traversal, inlinableDspGroups.flatMap((dspGroup) => dspGroup.traversal));\n        return inlinableDspGroups;\n    });\n    precompilation.precompiledCode.graph.hotDspGroup = hotDspGroup;\n    coldDspGroups.forEach((dspGroup, index) => {\n        precompileColdDspGroup(precompilation, dspGroup, `${index}`);\n    });\n    // ------------------------ PORTLETS ------------------------ //\n    // Go through the nodes and precompile inlets.\n    nodes.forEach((node) => {\n        Object.values(node.inlets).forEach((inlet) => {\n            if (inlet.type === 'signal') {\n                if (getSources(node, inlet.id).length === 0) {\n                    precompileSignalInletWithNoSource(precompilation, node, inlet.id);\n                }\n            }\n            else if (inlet.type === 'message') {\n                precompileMessageInlet(precompilation, node, inlet.id);\n            }\n        });\n    });\n    // Go through the nodes and precompile message outlets.\n    //\n    // For example if a node has only one sink there is no need\n    // to copy values between outlet and sink's inlet. Instead we can\n    // collapse these two variables into one.\n    //\n    // We need to compile outlets after inlets because they reference\n    // message receivers.\n    nodes.forEach((node) => {\n        Object.values(node.outlets)\n            .filter((outlet) => outlet.type === 'message')\n            .forEach((outlet) => {\n            precompileMessageOutlet(precompilation, node, outlet.id);\n        });\n    });\n    // Go through all dsp groups and precompile signal outlets for nodes that\n    // are not inlined (inlinable nodes should have been previously removed\n    // from these dsp groups).\n    hotAndColdDspGroups.forEach((dspGroup) => {\n        toNodes(precompilation.graph, dspGroup.traversal)\n            .forEach((node) => {\n            Object.values(node.outlets).forEach((outlet) => {\n                precompileSignalOutlet(precompilation, node, outlet.id);\n            });\n        });\n    });\n    // ------------------------ NODE ------------------------ //\n    inlinableDspGroups.forEach((dspGroup) => {\n        precompileInlineDsp(precompilation, dspGroup);\n    });\n    hotAndColdDspGroups.forEach((dspGroup) => {\n        toNodes(precompilation.graph, dspGroup.traversal)\n            .forEach((node) => {\n            precompileDsp(precompilation, node);\n        });\n    });\n    // This must come after we have assigned all node variables.\n    nodes.forEach((node) => {\n        precompileInitialization(precompilation, node);\n        precompileMessageReceivers(precompilation, node);\n    });\n    return precompilation;\n};\nconst initializePrecompilation = (precompilationRawInput) => {\n    const precompilationInput = {\n        graph: { ...precompilationRawInput.graph },\n        nodeImplementations: { ...precompilationRawInput.nodeImplementations },\n        settings: precompilationRawInput.settings,\n    };\n    const precompiledCode = createPrecompiledCode(precompilationInput);\n    const variableNamesIndex = createVariableNamesIndex(precompilationInput);\n    return {\n        ...precompilationInput,\n        precompiledCode,\n        variableNamesIndex,\n        variableNamesAssigner: proxyAsVariableNamesAssigner({\n            variableNamesIndex,\n            input: precompilationInput,\n        }),\n        variableNamesReadOnly: proxyAsReadOnlyIndex(variableNamesIndex),\n        precompiledCodeAssigner: proxyAsPrecompiledCodeAssigner({\n            precompiledCode,\n            input: precompilationInput,\n        }),\n    };\n};\n\nexport { precompile as default, initializePrecompilation };\n","/** Asserts user provided settings are valid (or throws error) and sets default values. */\nconst validateSettings = (compilationSettings, target) => {\n    const arrays = compilationSettings.arrays || {};\n    const io = {\n        messageReceivers: (compilationSettings.io || {}).messageReceivers || {},\n        messageSenders: (compilationSettings.io || {}).messageSenders || {},\n    };\n    const debug = compilationSettings.debug || false;\n    const audio = compilationSettings.audio || {\n        channelCount: { in: 2, out: 2 },\n        bitDepth: 64,\n    };\n    if (![32, 64].includes(audio.bitDepth)) {\n        throw new InvalidSettingsError(`\"bitDepth\" can be only 32 or 64`);\n    }\n    return {\n        audio,\n        arrays,\n        io,\n        debug,\n        target,\n    };\n};\nclass InvalidSettingsError extends Error {\n}\n\nexport { validateSettings };\n","import renderToJavascript from '../engine-javascript/compile/render.js';\nimport renderToAssemblyscript from '../engine-assemblyscript/compile/render.js';\nimport precompile from './precompile/index.js';\nimport { validateSettings } from './settings.js';\nimport { proxyAsReadOnlyIndex } from './proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar index = (graph, nodeImplementations, target, compilationSettings) => {\n    const settings = validateSettings(compilationSettings, target);\n    const { precompiledCode, variableNamesIndex } = precompile({\n        graph,\n        nodeImplementations,\n        settings,\n    });\n    let code;\n    const renderInput = {\n        precompiledCode,\n        settings,\n        variableNamesReadOnly: proxyAsReadOnlyIndex(variableNamesIndex),\n    };\n    if (target === 'javascript') {\n        code = renderToJavascript(renderInput);\n    }\n    else if (target === 'assemblyscript') {\n        code = renderToAssemblyscript(renderInput);\n    }\n    else {\n        throw new Error(`Invalid target ${target}`);\n    }\n    return {\n        status: 0,\n        code,\n    };\n};\n\nexport { index as default };\n","var WEBPD_RUNTIME_CODE = \"var WebPdRuntime = (function (exports) {\\n  'use strict';\\n\\n  var WEB_PD_WORKLET_PROCESSOR_CODE = \\\"/*\\\\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\\\n *\\\\n * This file is part of WebPd\\\\n * (see https://github.com/sebpiq/WebPd).\\\\n *\\\\n * This program is free software: you can redistribute it and/or modify\\\\n * it under the terms of the GNU Lesser General Public License as published by\\\\n * the Free Software Foundation, either version 3 of the License, or\\\\n * (at your option) any later version.\\\\n *\\\\n * This program is distributed in the hope that it will be useful,\\\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\\\n * GNU Lesser General Public License for more details.\\\\n *\\\\n * You should have received a copy of the GNU Lesser General Public License\\\\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\\\\n */\\\\nconst FS_CALLBACK_NAMES = [\\\\n    'onReadSoundFile',\\\\n    'onOpenSoundReadStream',\\\\n    'onWriteSoundFile',\\\\n    'onOpenSoundWriteStream',\\\\n    'onSoundStreamData',\\\\n    'onCloseSoundStream',\\\\n];\\\\nclass WasmWorkletProcessor extends AudioWorkletProcessor {\\\\n    constructor() {\\\\n        super();\\\\n        this.port.onmessage = this.onMessage.bind(this);\\\\n        this.settings = {\\\\n            blockSize: null,\\\\n            sampleRate,\\\\n        };\\\\n        this.dspConfigured = false;\\\\n        this.engine = null;\\\\n    }\\\\n    process(inputs, outputs) {\\\\n        const output = outputs[0];\\\\n        const input = inputs[0];\\\\n        if (!this.dspConfigured) {\\\\n            if (!this.engine) {\\\\n                return true;\\\\n            }\\\\n            this.settings.blockSize = output[0].length;\\\\n            this.engine.initialize(this.settings.sampleRate, this.settings.blockSize);\\\\n            this.dspConfigured = true;\\\\n        }\\\\n        this.engine.dspLoop(input, output);\\\\n        return true;\\\\n    }\\\\n    onMessage(messageEvent) {\\\\n        const message = messageEvent.data;\\\\n        switch (message.type) {\\\\n            case 'code:WASM':\\\\n                this.setWasm(message.payload.wasmBuffer);\\\\n                break;\\\\n            case 'code:JS':\\\\n                this.setJsCode(message.payload.jsCode);\\\\n                break;\\\\n            case 'io:messageReceiver':\\\\n                this.engine.io.messageReceivers[message.payload.nodeId][message.payload.portletId](message.payload.message);\\\\n                break;\\\\n            case 'fs':\\\\n                const returned = this.engine.globals.fs[message.payload.functionName].apply(null, message.payload.arguments);\\\\n                this.port.postMessage({\\\\n                    type: 'fs',\\\\n                    payload: {\\\\n                        functionName: message.payload.functionName + '_return',\\\\n                        operationId: message.payload.arguments[0],\\\\n                        returned,\\\\n                    },\\\\n                });\\\\n                break;\\\\n            case 'destroy':\\\\n                this.destroy();\\\\n                break;\\\\n            default:\\\\n                new Error(`unknown message type ${message.type}`);\\\\n        }\\\\n    }\\\\n    // TODO : control for channelCount of wasmModule\\\\n    setWasm(wasmBuffer) {\\\\n        return AssemblyScriptWasmBindings.createEngine(wasmBuffer).then((engine) => this.setEngine(engine));\\\\n    }\\\\n    setJsCode(code) {\\\\n        const engine = JavaScriptBindings.createEngine(code);\\\\n        this.setEngine(engine);\\\\n    }\\\\n    setEngine(engine) {\\\\n        if (engine.globals.fs) {\\\\n            FS_CALLBACK_NAMES.forEach((functionName) => {\\\\n                engine.globals.fs[functionName] = (...args) => {\\\\n                    // We don't use transferables, because that would imply reallocating each time new array in the engine.\\\\n                    this.port.postMessage({\\\\n                        type: 'fs',\\\\n                        payload: {\\\\n                            functionName,\\\\n                            arguments: args,\\\\n                        },\\\\n                    });\\\\n                };\\\\n            });\\\\n        }\\\\n        this.engine = engine;\\\\n        this.dspConfigured = false;\\\\n    }\\\\n    destroy() {\\\\n        this.process = () => false;\\\\n    }\\\\n}\\\\nregisterProcessor('webpd-node', WasmWorkletProcessor);\\\\n\\\";\\n\\n  var ASSEMBLY_SCRIPT_WASM_BINDINGS_CODE = \\\"var AssemblyScriptWasmBindings = (function (exports) {\\\\n    'use strict';\\\\n\\\\n    const _proxyGetHandlerThrowIfKeyUnknown = (target, key, path) => {\\\\n        if (!(key in target)) {\\\\n            if ([\\\\n                'toJSON',\\\\n                'Symbol(Symbol.toStringTag)',\\\\n                'constructor',\\\\n                '$typeof',\\\\n                '$$typeof',\\\\n                '@@__IMMUTABLE_ITERABLE__@@',\\\\n                '@@__IMMUTABLE_RECORD__@@',\\\\n                'then',\\\\n            ].includes(key)) {\\\\n                return true;\\\\n            }\\\\n            throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \\\\\\\"${String(key)}\\\\\\\"`);\\\\n        }\\\\n        return false;\\\\n    };\\\\n\\\\n    const getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\\\\n    const proxyAsModuleWithBindings = (rawModule, bindings) => new Proxy({}, {\\\\n        get: (_, k) => {\\\\n            if (bindings.hasOwnProperty(k)) {\\\\n                const key = String(k);\\\\n                const bindingSpec = bindings[key];\\\\n                switch (bindingSpec.type) {\\\\n                    case 'raw':\\\\n                        if (k in rawModule) {\\\\n                            return rawModule[key];\\\\n                        }\\\\n                        else {\\\\n                            throw new Error(`Key ${String(key)} doesn't exist in raw module`);\\\\n                        }\\\\n                    case 'proxy':\\\\n                    case 'callback':\\\\n                        return bindingSpec.value;\\\\n                }\\\\n            }\\\\n            else {\\\\n                return undefined;\\\\n            }\\\\n        },\\\\n        has: function (_, k) {\\\\n            return k in bindings;\\\\n        },\\\\n        set: (_, k, newValue) => {\\\\n            if (bindings.hasOwnProperty(String(k))) {\\\\n                const key = String(k);\\\\n                const bindingSpec = bindings[key];\\\\n                if (bindingSpec.type === 'callback') {\\\\n                    bindingSpec.value = newValue;\\\\n                }\\\\n                else {\\\\n                    throw new Error(`Binding key ${String(key)} is read-only`);\\\\n                }\\\\n            }\\\\n            else {\\\\n                throw new Error(`Key ${String(k)} is not defined in bindings`);\\\\n            }\\\\n            return true;\\\\n        },\\\\n    });\\\\n    const proxyWithEngineNameMapping = (rawModule, variableNamesIndex) => proxyWithNameMapping(rawModule, {\\\\n        globals: variableNamesIndex.globals,\\\\n        io: variableNamesIndex.io,\\\\n    });\\\\n    const proxyWithNameMapping = (rawModule, variableNamesIndex) => {\\\\n        if (typeof variableNamesIndex === 'string') {\\\\n            return rawModule[variableNamesIndex];\\\\n        }\\\\n        else if (typeof variableNamesIndex === 'object') {\\\\n            return new Proxy(rawModule, {\\\\n                get: (_, k) => {\\\\n                    const key = String(k);\\\\n                    if (key in rawModule) {\\\\n                        return Reflect.get(rawModule, key);\\\\n                    }\\\\n                    else if (key in variableNamesIndex) {\\\\n                        const nextVariableNames = variableNamesIndex[key];\\\\n                        return proxyWithNameMapping(rawModule, nextVariableNames);\\\\n                    }\\\\n                    else if (_proxyGetHandlerThrowIfKeyUnknown(rawModule, key)) {\\\\n                        return undefined;\\\\n                    }\\\\n                },\\\\n                has: function (_, k) {\\\\n                    return k in rawModule || k in variableNamesIndex;\\\\n                },\\\\n                set: (_, k, value) => {\\\\n                    const key = String(k);\\\\n                    if (key in variableNamesIndex) {\\\\n                        const variableName = variableNamesIndex[key];\\\\n                        if (typeof variableName !== 'string') {\\\\n                            throw new Error(`Failed to set value for key ${String(k)}: variable name is not a string`);\\\\n                        }\\\\n                        return Reflect.set(rawModule, variableName, value);\\\\n                    }\\\\n                    else {\\\\n                        throw new Error(`Key ${String(k)} is not defined in raw module`);\\\\n                    }\\\\n                },\\\\n            });\\\\n        }\\\\n        else {\\\\n            throw new Error(`Invalid name mapping`);\\\\n        }\\\\n    };\\\\n\\\\n    const liftString = (rawModule, pointer) => {\\\\n        if (!pointer) {\\\\n            throw new Error('Cannot lift a null pointer');\\\\n        }\\\\n        pointer = pointer >>> 0;\\\\n        const end = (pointer +\\\\n            new Uint32Array(rawModule.memory.buffer)[(pointer - 4) >>> 2]) >>>\\\\n            1;\\\\n        const memoryU16 = new Uint16Array(rawModule.memory.buffer);\\\\n        let start = pointer >>> 1;\\\\n        let string = '';\\\\n        while (end - start > 1024) {\\\\n            string += String.fromCharCode(...memoryU16.subarray(start, (start += 1024)));\\\\n        }\\\\n        return string + String.fromCharCode(...memoryU16.subarray(start, end));\\\\n    };\\\\n    const lowerString = (rawModule, value) => {\\\\n        if (value == null) {\\\\n            throw new Error('Cannot lower a null string');\\\\n        }\\\\n        const length = value.length, pointer = rawModule.__new(length << 1, 1) >>> 0, memoryU16 = new Uint16Array(rawModule.memory.buffer);\\\\n        for (let i = 0; i < length; ++i)\\\\n            memoryU16[(pointer >>> 1) + i] = value.charCodeAt(i);\\\\n        return pointer;\\\\n    };\\\\n    const readTypedArray = (rawModule, constructor, pointer) => {\\\\n        if (!pointer) {\\\\n            throw new Error('Cannot lift a null pointer');\\\\n        }\\\\n        const memoryU32 = new Uint32Array(rawModule.memory.buffer);\\\\n        return new constructor(rawModule.memory.buffer, memoryU32[(pointer + 4) >>> 2], memoryU32[(pointer + 8) >>> 2] / constructor.BYTES_PER_ELEMENT);\\\\n    };\\\\n    const lowerFloatArray = (rawModule, bitDepth, data) => {\\\\n        const arrayType = getFloatArrayType(bitDepth);\\\\n        const arrayPointer = rawModule.globals.core.createFloatArray(data.length);\\\\n        const array = readTypedArray(rawModule, arrayType, arrayPointer);\\\\n        array.set(data);\\\\n        return { array, arrayPointer };\\\\n    };\\\\n    const lowerListOfFloatArrays = (rawModule, bitDepth, data) => {\\\\n        const arraysPointer = rawModule.globals.core.x_createListOfArrays();\\\\n        data.forEach((array) => {\\\\n            const { arrayPointer } = lowerFloatArray(rawModule, bitDepth, array);\\\\n            rawModule.globals.core.x_pushToListOfArrays(arraysPointer, arrayPointer);\\\\n        });\\\\n        return arraysPointer;\\\\n    };\\\\n    const readListOfFloatArrays = (rawModule, bitDepth, listOfArraysPointer) => {\\\\n        const listLength = rawModule.globals.core.x_getListOfArraysLength(listOfArraysPointer);\\\\n        const arrays = [];\\\\n        const arrayType = getFloatArrayType(bitDepth);\\\\n        for (let i = 0; i < listLength; i++) {\\\\n            const arrayPointer = rawModule.globals.core.x_getListOfArraysElem(listOfArraysPointer, i);\\\\n            arrays.push(readTypedArray(rawModule, arrayType, arrayPointer));\\\\n        }\\\\n        return arrays;\\\\n    };\\\\n\\\\n    const instantiateWasmModule = async (wasmBuffer, wasmImports = {}) => {\\\\n        const instanceAndModule = await WebAssembly.instantiate(wasmBuffer, {\\\\n            env: {\\\\n                abort: (messagePointer, _, lineNumber, columnNumber) => {\\\\n                    const message = liftString(wasmExports, messagePointer);\\\\n                    lineNumber = lineNumber;\\\\n                    columnNumber = columnNumber;\\\\n                    (() => {\\\\n                        throw Error(`${message} at ${lineNumber}:${columnNumber}`);\\\\n                    })();\\\\n                },\\\\n                seed: () => {\\\\n                    return (() => {\\\\n                        return Date.now() * Math.random();\\\\n                    })();\\\\n                },\\\\n                'console.log': (textPointer) => {\\\\n                    console.log(liftString(wasmExports, textPointer));\\\\n                },\\\\n            },\\\\n            ...wasmImports,\\\\n        });\\\\n        const wasmExports = instanceAndModule.instance\\\\n            .exports;\\\\n        return instanceAndModule.instance;\\\\n    };\\\\n\\\\n    const updateWasmInOuts = ({ refs, cache, }) => {\\\\n        cache.wasmOutput = readTypedArray(refs.rawModule, cache.arrayType, refs.rawModule.globals.core.x_getOutput());\\\\n        cache.wasmInput = readTypedArray(refs.rawModule, cache.arrayType, refs.rawModule.globals.core.x_getInput());\\\\n    };\\\\n    const createEngineLifecycleBindings = (engineContext) => {\\\\n        const { refs, cache, metadata } = engineContext;\\\\n        return {\\\\n            initialize: {\\\\n                type: 'proxy',\\\\n                value: (sampleRate, blockSize) => {\\\\n                    metadata.settings.audio.blockSize = blockSize;\\\\n                    metadata.settings.audio.sampleRate = sampleRate;\\\\n                    cache.blockSize = blockSize;\\\\n                    refs.rawModule.initialize(sampleRate, blockSize);\\\\n                    updateWasmInOuts(engineContext);\\\\n                },\\\\n            },\\\\n            dspLoop: {\\\\n                type: 'proxy',\\\\n                value: (input, output) => {\\\\n                    for (let channel = 0; channel < input.length; channel++) {\\\\n                        cache.wasmInput.set(input[channel], channel * cache.blockSize);\\\\n                    }\\\\n                    updateWasmInOuts(engineContext);\\\\n                    refs.rawModule.dspLoop();\\\\n                    updateWasmInOuts(engineContext);\\\\n                    for (let channel = 0; channel < output.length; channel++) {\\\\n                        output[channel].set(cache.wasmOutput.subarray(cache.blockSize * channel, cache.blockSize * (channel + 1)));\\\\n                    }\\\\n                },\\\\n            },\\\\n        };\\\\n    };\\\\n\\\\n    const createCommonsBindings = (engineContext) => {\\\\n        const { refs, cache } = engineContext;\\\\n        return {\\\\n            getArray: {\\\\n                type: 'proxy',\\\\n                value: (arrayName) => {\\\\n                    const arrayNamePointer = lowerString(refs.rawModule, arrayName);\\\\n                    const arrayPointer = refs.rawModule.globals.commons.getArray(arrayNamePointer);\\\\n                    return readTypedArray(refs.rawModule, cache.arrayType, arrayPointer);\\\\n                },\\\\n            },\\\\n            setArray: {\\\\n                type: 'proxy',\\\\n                value: (arrayName, array) => {\\\\n                    const stringPointer = lowerString(refs.rawModule, arrayName);\\\\n                    const { arrayPointer } = lowerFloatArray(refs.rawModule, cache.bitDepth, array);\\\\n                    refs.rawModule.globals.commons.setArray(stringPointer, arrayPointer);\\\\n                    updateWasmInOuts(engineContext);\\\\n                },\\\\n            },\\\\n        };\\\\n    };\\\\n\\\\n    const readMetadata = async (wasmBuffer) => {\\\\n        const inputImports = {};\\\\n        const wasmModule = WebAssembly.Module.imports(new WebAssembly.Module(wasmBuffer));\\\\n        wasmModule\\\\n            .filter((imprt) => imprt.module === 'input' && imprt.kind === 'function')\\\\n            .forEach((imprt) => (inputImports[imprt.name] = () => undefined));\\\\n        const wasmInstance = await instantiateWasmModule(wasmBuffer, {\\\\n            input: inputImports,\\\\n        });\\\\n        const rawModule = wasmInstance.exports;\\\\n        const stringPointer = rawModule.metadata.valueOf();\\\\n        const metadataJSON = liftString(rawModule, stringPointer);\\\\n        return JSON.parse(metadataJSON);\\\\n    };\\\\n\\\\n    const mapArray = (src, func) => {\\\\n        const dest = {};\\\\n        src.forEach((srcValue, i) => {\\\\n            const [key, destValue] = func(srcValue, i);\\\\n            dest[key] = destValue;\\\\n        });\\\\n        return dest;\\\\n    };\\\\n\\\\n    const liftMessage = (rawModule, messagePointer) => {\\\\n        const messageTokenTypesPointer = rawModule.globals.msg.x_getTokenTypes(messagePointer);\\\\n        const messageTokenTypes = readTypedArray(rawModule, Int32Array, messageTokenTypesPointer);\\\\n        const message = [];\\\\n        messageTokenTypes.forEach((tokenType, tokenIndex) => {\\\\n            if (tokenType === rawModule.globals.msg.FLOAT_TOKEN.valueOf()) {\\\\n                message.push(rawModule.globals.msg.readFloatToken(messagePointer, tokenIndex));\\\\n            }\\\\n            else if (tokenType === rawModule.globals.msg.STRING_TOKEN.valueOf()) {\\\\n                const stringPointer = rawModule.globals.msg.readStringToken(messagePointer, tokenIndex);\\\\n                message.push(liftString(rawModule, stringPointer));\\\\n            }\\\\n        });\\\\n        return message;\\\\n    };\\\\n    const lowerMessage = (rawModule, message) => {\\\\n        const template = message.reduce((template, value) => {\\\\n            if (typeof value === 'number') {\\\\n                template.push(rawModule.globals.msg.FLOAT_TOKEN.valueOf());\\\\n            }\\\\n            else if (typeof value === 'string') {\\\\n                template.push(rawModule.globals.msg.STRING_TOKEN.valueOf());\\\\n                template.push(value.length);\\\\n            }\\\\n            else {\\\\n                throw new Error(`invalid message value ${value}`);\\\\n            }\\\\n            return template;\\\\n        }, []);\\\\n        const templateArrayPointer = rawModule.globals.msg.x_createTemplate(template.length);\\\\n        const loweredTemplateArray = readTypedArray(rawModule, Int32Array, templateArrayPointer);\\\\n        loweredTemplateArray.set(template);\\\\n        const messagePointer = rawModule.globals.msg.x_create(templateArrayPointer);\\\\n        message.forEach((value, index) => {\\\\n            if (typeof value === 'number') {\\\\n                rawModule.globals.msg.writeFloatToken(messagePointer, index, value);\\\\n            }\\\\n            else if (typeof value === 'string') {\\\\n                const stringPointer = lowerString(rawModule, value);\\\\n                rawModule.globals.msg.writeStringToken(messagePointer, index, stringPointer);\\\\n            }\\\\n        });\\\\n        return messagePointer;\\\\n    };\\\\n\\\\n    const createIoMessageReceiversBindings = ({ metadata, refs, }) => Object.entries(metadata.settings.io.messageReceivers).reduce((bindings, [nodeId, spec]) => ({\\\\n        ...bindings,\\\\n        [nodeId]: {\\\\n            type: 'proxy',\\\\n            value: mapArray(spec.portletIds, (inletId) => [\\\\n                inletId,\\\\n                (message) => {\\\\n                    const messagePointer = lowerMessage(refs.rawModule, message);\\\\n                    refs.rawModule.io.messageReceivers[nodeId][inletId](messagePointer);\\\\n                },\\\\n            ]),\\\\n        },\\\\n    }), {});\\\\n    const createIoMessageSendersBindings = ({ metadata, }) => Object.entries(metadata.settings.io.messageSenders).reduce((bindings, [nodeId, spec]) => ({\\\\n        ...bindings,\\\\n        [nodeId]: {\\\\n            type: 'proxy',\\\\n            value: mapArray(spec.portletIds, (outletId) => [\\\\n                outletId,\\\\n                (_) => undefined,\\\\n            ]),\\\\n        },\\\\n    }), {});\\\\n    const ioMsgSendersImports = ({ metadata, refs, }) => {\\\\n        const wasmImports = {};\\\\n        const { variableNamesIndex } = metadata.compilation;\\\\n        Object.entries(metadata.settings.io.messageSenders).forEach(([nodeId, spec]) => {\\\\n            spec.portletIds.forEach((outletId) => {\\\\n                const listenerName = variableNamesIndex.io.messageSenders[nodeId][outletId];\\\\n                wasmImports[listenerName] = (messagePointer) => {\\\\n                    const message = liftMessage(refs.rawModule, messagePointer);\\\\n                    refs.engine.io.messageSenders[nodeId][outletId](message);\\\\n                };\\\\n            });\\\\n        });\\\\n        return wasmImports;\\\\n    };\\\\n\\\\n    const createFsBindings = (engineContext) => {\\\\n        const { refs, cache, metadata } = engineContext;\\\\n        const fsExportedNames = metadata.compilation.variableNamesIndex.globals.fs;\\\\n        return {\\\\n            sendReadSoundFileResponse: {\\\\n                type: 'proxy',\\\\n                value: 'x_onReadSoundFileResponse' in fsExportedNames\\\\n                    ? (operationId, status, sound) => {\\\\n                        let soundPointer = 0;\\\\n                        if (sound) {\\\\n                            soundPointer = lowerListOfFloatArrays(refs.rawModule, cache.bitDepth, sound);\\\\n                        }\\\\n                        refs.rawModule.globals.fs.x_onReadSoundFileResponse(operationId, status, soundPointer);\\\\n                        updateWasmInOuts(engineContext);\\\\n                    }\\\\n                    : undefined,\\\\n            },\\\\n            sendWriteSoundFileResponse: {\\\\n                type: 'proxy',\\\\n                value: 'x_onWriteSoundFileResponse' in fsExportedNames\\\\n                    ? refs.rawModule.globals.fs.x_onWriteSoundFileResponse\\\\n                    : undefined,\\\\n            },\\\\n            sendSoundStreamData: {\\\\n                type: 'proxy',\\\\n                value: 'x_onSoundStreamData' in fsExportedNames\\\\n                    ? (operationId, sound) => {\\\\n                        const soundPointer = lowerListOfFloatArrays(refs.rawModule, cache.bitDepth, sound);\\\\n                        const writtenFrameCount = refs.rawModule.globals.fs.x_onSoundStreamData(operationId, soundPointer);\\\\n                        updateWasmInOuts(engineContext);\\\\n                        return writtenFrameCount;\\\\n                    }\\\\n                    : undefined,\\\\n            },\\\\n            closeSoundStream: {\\\\n                type: 'proxy',\\\\n                value: 'x_onCloseSoundStream' in fsExportedNames\\\\n                    ? refs.rawModule.globals.fs.x_onCloseSoundStream\\\\n                    : undefined,\\\\n            },\\\\n            onReadSoundFile: { type: 'callback', value: () => undefined },\\\\n            onWriteSoundFile: { type: 'callback', value: () => undefined },\\\\n            onOpenSoundReadStream: { type: 'callback', value: () => undefined },\\\\n            onOpenSoundWriteStream: { type: 'callback', value: () => undefined },\\\\n            onSoundStreamData: { type: 'callback', value: () => undefined },\\\\n            onCloseSoundStream: { type: 'callback', value: () => undefined },\\\\n        };\\\\n    };\\\\n    const createFsImports = (engineContext) => {\\\\n        const wasmImports = {};\\\\n        const { cache, metadata, refs } = engineContext;\\\\n        const exportedNames = metadata.compilation.variableNamesIndex.globals;\\\\n        if ('fs' in exportedNames) {\\\\n            const nameMapping = proxyWithNameMapping(wasmImports, exportedNames.fs);\\\\n            if ('i_readSoundFile' in exportedNames.fs) {\\\\n                nameMapping.i_readSoundFile = (operationId, urlPointer, infoPointer) => {\\\\n                    const url = liftString(refs.rawModule, urlPointer);\\\\n                    const info = liftMessage(refs.rawModule, infoPointer);\\\\n                    refs.engine.globals.fs.onReadSoundFile(operationId, url, info);\\\\n                };\\\\n            }\\\\n            if ('i_writeSoundFile' in exportedNames.fs) {\\\\n                nameMapping.i_writeSoundFile = (operationId, soundPointer, urlPointer, infoPointer) => {\\\\n                    const sound = readListOfFloatArrays(refs.rawModule, cache.bitDepth, soundPointer);\\\\n                    const url = liftString(refs.rawModule, urlPointer);\\\\n                    const info = liftMessage(refs.rawModule, infoPointer);\\\\n                    refs.engine.globals.fs.onWriteSoundFile(operationId, sound, url, info);\\\\n                };\\\\n            }\\\\n            if ('i_openSoundReadStream' in exportedNames.fs) {\\\\n                nameMapping.i_openSoundReadStream = (operationId, urlPointer, infoPointer) => {\\\\n                    const url = liftString(refs.rawModule, urlPointer);\\\\n                    const info = liftMessage(refs.rawModule, infoPointer);\\\\n                    updateWasmInOuts(engineContext);\\\\n                    refs.engine.globals.fs.onOpenSoundReadStream(operationId, url, info);\\\\n                };\\\\n            }\\\\n            if ('i_openSoundWriteStream' in exportedNames.fs) {\\\\n                nameMapping.i_openSoundWriteStream = (operationId, urlPointer, infoPointer) => {\\\\n                    const url = liftString(refs.rawModule, urlPointer);\\\\n                    const info = liftMessage(refs.rawModule, infoPointer);\\\\n                    refs.engine.globals.fs.onOpenSoundWriteStream(operationId, url, info);\\\\n                };\\\\n            }\\\\n            if ('i_sendSoundStreamData' in exportedNames.fs) {\\\\n                nameMapping.i_sendSoundStreamData = (operationId, blockPointer) => {\\\\n                    const block = readListOfFloatArrays(refs.rawModule, cache.bitDepth, blockPointer);\\\\n                    refs.engine.globals.fs.onSoundStreamData(operationId, block);\\\\n                };\\\\n            }\\\\n            if ('i_closeSoundStream' in exportedNames.fs) {\\\\n                nameMapping.i_closeSoundStream = (...args) => refs.engine.globals.fs.onCloseSoundStream(...args);\\\\n            }\\\\n        }\\\\n        return wasmImports;\\\\n    };\\\\n\\\\n    const createEngine = async (wasmBuffer, additionalBindings) => {\\\\n        const metadata = await readMetadata(wasmBuffer);\\\\n        const bitDepth = metadata.settings.audio.bitDepth;\\\\n        const arrayType = getFloatArrayType(bitDepth);\\\\n        const engineContext = {\\\\n            refs: {},\\\\n            metadata: metadata,\\\\n            cache: {\\\\n                wasmOutput: new arrayType(0),\\\\n                wasmInput: new arrayType(0),\\\\n                arrayType,\\\\n                bitDepth,\\\\n                blockSize: 0,\\\\n            },\\\\n        };\\\\n        const wasmImports = {\\\\n            ...createFsImports(engineContext),\\\\n            ...ioMsgSendersImports(engineContext),\\\\n        };\\\\n        const wasmInstance = await instantiateWasmModule(wasmBuffer, {\\\\n            input: wasmImports,\\\\n        });\\\\n        engineContext.refs.rawModule = proxyWithEngineNameMapping(wasmInstance.exports, metadata.compilation.variableNamesIndex);\\\\n        const engineBindings = createEngineBindings(engineContext);\\\\n        const engine = proxyAsModuleWithBindings(engineContext.refs.rawModule, {\\\\n            ...engineBindings,\\\\n            ...(additionalBindings || {}),\\\\n        });\\\\n        engineContext.refs.engine = engine;\\\\n        return engine;\\\\n    };\\\\n    const createEngineBindings = (engineContext) => {\\\\n        const { metadata, refs } = engineContext;\\\\n        const exportedNames = metadata.compilation.variableNamesIndex.globals;\\\\n        const io = {\\\\n            messageReceivers: proxyAsModuleWithBindings(refs.rawModule, createIoMessageReceiversBindings(engineContext)),\\\\n            messageSenders: proxyAsModuleWithBindings(refs.rawModule, createIoMessageSendersBindings(engineContext)),\\\\n        };\\\\n        const globalsBindings = {\\\\n            commons: {\\\\n                type: 'proxy',\\\\n                value: proxyAsModuleWithBindings(refs.rawModule, createCommonsBindings(engineContext)),\\\\n            },\\\\n        };\\\\n        if ('fs' in exportedNames) {\\\\n            const fs = proxyAsModuleWithBindings(refs.rawModule, createFsBindings(engineContext));\\\\n            globalsBindings.fs = { type: 'proxy', value: fs };\\\\n        }\\\\n        return {\\\\n            ...createEngineLifecycleBindings(engineContext),\\\\n            metadata: { type: 'proxy', value: metadata },\\\\n            globals: {\\\\n                type: 'proxy',\\\\n                value: proxyAsModuleWithBindings(refs.rawModule, globalsBindings),\\\\n            },\\\\n            io: { type: 'proxy', value: io },\\\\n        };\\\\n    };\\\\n\\\\n    exports.createEngine = createEngine;\\\\n    exports.createEngineBindings = createEngineBindings;\\\\n\\\\n    return exports;\\\\n\\\\n})({});\\\\n\\\";\\n\\n  var JAVA_SCRIPT_BINDINGS_CODE = \\\"var JavaScriptBindings = (function (exports) {\\\\n    'use strict';\\\\n\\\\n    const _proxyGetHandlerThrowIfKeyUnknown = (target, key, path) => {\\\\n        if (!(key in target)) {\\\\n            if ([\\\\n                'toJSON',\\\\n                'Symbol(Symbol.toStringTag)',\\\\n                'constructor',\\\\n                '$typeof',\\\\n                '$$typeof',\\\\n                '@@__IMMUTABLE_ITERABLE__@@',\\\\n                '@@__IMMUTABLE_RECORD__@@',\\\\n                'then',\\\\n            ].includes(key)) {\\\\n                return true;\\\\n            }\\\\n            throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \\\\\\\"${String(key)}\\\\\\\"`);\\\\n        }\\\\n        return false;\\\\n    };\\\\n\\\\n    const getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\\\\n    const proxyAsModuleWithBindings = (rawModule, bindings) => new Proxy({}, {\\\\n        get: (_, k) => {\\\\n            if (bindings.hasOwnProperty(k)) {\\\\n                const key = String(k);\\\\n                const bindingSpec = bindings[key];\\\\n                switch (bindingSpec.type) {\\\\n                    case 'raw':\\\\n                        if (k in rawModule) {\\\\n                            return rawModule[key];\\\\n                        }\\\\n                        else {\\\\n                            throw new Error(`Key ${String(key)} doesn't exist in raw module`);\\\\n                        }\\\\n                    case 'proxy':\\\\n                    case 'callback':\\\\n                        return bindingSpec.value;\\\\n                }\\\\n            }\\\\n            else {\\\\n                return undefined;\\\\n            }\\\\n        },\\\\n        has: function (_, k) {\\\\n            return k in bindings;\\\\n        },\\\\n        set: (_, k, newValue) => {\\\\n            if (bindings.hasOwnProperty(String(k))) {\\\\n                const key = String(k);\\\\n                const bindingSpec = bindings[key];\\\\n                if (bindingSpec.type === 'callback') {\\\\n                    bindingSpec.value = newValue;\\\\n                }\\\\n                else {\\\\n                    throw new Error(`Binding key ${String(key)} is read-only`);\\\\n                }\\\\n            }\\\\n            else {\\\\n                throw new Error(`Key ${String(k)} is not defined in bindings`);\\\\n            }\\\\n            return true;\\\\n        },\\\\n    });\\\\n    const proxyWithEngineNameMapping = (rawModule, variableNamesIndex) => proxyWithNameMapping(rawModule, {\\\\n        globals: variableNamesIndex.globals,\\\\n        io: variableNamesIndex.io,\\\\n    });\\\\n    const proxyWithNameMapping = (rawModule, variableNamesIndex) => {\\\\n        if (typeof variableNamesIndex === 'string') {\\\\n            return rawModule[variableNamesIndex];\\\\n        }\\\\n        else if (typeof variableNamesIndex === 'object') {\\\\n            return new Proxy(rawModule, {\\\\n                get: (_, k) => {\\\\n                    const key = String(k);\\\\n                    if (key in rawModule) {\\\\n                        return Reflect.get(rawModule, key);\\\\n                    }\\\\n                    else if (key in variableNamesIndex) {\\\\n                        const nextVariableNames = variableNamesIndex[key];\\\\n                        return proxyWithNameMapping(rawModule, nextVariableNames);\\\\n                    }\\\\n                    else if (_proxyGetHandlerThrowIfKeyUnknown(rawModule, key)) {\\\\n                        return undefined;\\\\n                    }\\\\n                },\\\\n                has: function (_, k) {\\\\n                    return k in rawModule || k in variableNamesIndex;\\\\n                },\\\\n                set: (_, k, value) => {\\\\n                    const key = String(k);\\\\n                    if (key in variableNamesIndex) {\\\\n                        const variableName = variableNamesIndex[key];\\\\n                        if (typeof variableName !== 'string') {\\\\n                            throw new Error(`Failed to set value for key ${String(k)}: variable name is not a string`);\\\\n                        }\\\\n                        return Reflect.set(rawModule, variableName, value);\\\\n                    }\\\\n                    else {\\\\n                        throw new Error(`Key ${String(k)} is not defined in raw module`);\\\\n                    }\\\\n                },\\\\n            });\\\\n        }\\\\n        else {\\\\n            throw new Error(`Invalid name mapping`);\\\\n        }\\\\n    };\\\\n\\\\n    const createFsModule = (rawModule) => {\\\\n        const fsExportedNames = rawModule.metadata.compilation.variableNamesIndex.globals.fs;\\\\n        const fs = proxyAsModuleWithBindings(rawModule, {\\\\n            onReadSoundFile: { type: 'callback', value: () => undefined },\\\\n            onWriteSoundFile: { type: 'callback', value: () => undefined },\\\\n            onOpenSoundReadStream: { type: 'callback', value: () => undefined },\\\\n            onOpenSoundWriteStream: { type: 'callback', value: () => undefined },\\\\n            onSoundStreamData: { type: 'callback', value: () => undefined },\\\\n            onCloseSoundStream: { type: 'callback', value: () => undefined },\\\\n            sendReadSoundFileResponse: {\\\\n                type: 'proxy',\\\\n                value: 'x_onReadSoundFileResponse' in fsExportedNames\\\\n                    ? rawModule.globals.fs.x_onReadSoundFileResponse\\\\n                    : undefined,\\\\n            },\\\\n            sendWriteSoundFileResponse: {\\\\n                type: 'proxy',\\\\n                value: 'x_onWriteSoundFileResponse' in fsExportedNames\\\\n                    ? rawModule.globals.fs.x_onWriteSoundFileResponse\\\\n                    : undefined,\\\\n            },\\\\n            sendSoundStreamData: {\\\\n                type: 'proxy',\\\\n                value: 'x_onSoundStreamData' in fsExportedNames\\\\n                    ? rawModule.globals.fs.x_onSoundStreamData\\\\n                    : undefined,\\\\n            },\\\\n            closeSoundStream: {\\\\n                type: 'proxy',\\\\n                value: 'x_onCloseSoundStream' in fsExportedNames\\\\n                    ? rawModule.globals.fs.x_onCloseSoundStream\\\\n                    : undefined,\\\\n            },\\\\n        });\\\\n        if ('i_openSoundWriteStream' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_openSoundWriteStream = (...args) => fs.onOpenSoundWriteStream(...args);\\\\n        }\\\\n        if ('i_sendSoundStreamData' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_sendSoundStreamData = (...args) => fs.onSoundStreamData(...args);\\\\n        }\\\\n        if ('i_openSoundReadStream' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_openSoundReadStream = (...args) => fs.onOpenSoundReadStream(...args);\\\\n        }\\\\n        if ('i_closeSoundStream' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_closeSoundStream = (...args) => fs.onCloseSoundStream(...args);\\\\n        }\\\\n        if ('i_writeSoundFile' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_writeSoundFile = (...args) => fs.onWriteSoundFile(...args);\\\\n        }\\\\n        if ('i_readSoundFile' in fsExportedNames) {\\\\n            rawModule.globals.fs.i_readSoundFile = (...args) => fs.onReadSoundFile(...args);\\\\n        }\\\\n        return fs;\\\\n    };\\\\n\\\\n    const createCommonsModule = (rawModule, metadata) => {\\\\n        const floatArrayType = getFloatArrayType(metadata.settings.audio.bitDepth);\\\\n        return proxyAsModuleWithBindings(rawModule, {\\\\n            getArray: {\\\\n                type: 'proxy',\\\\n                value: (arrayName) => rawModule.globals.commons.getArray(arrayName),\\\\n            },\\\\n            setArray: {\\\\n                type: 'proxy',\\\\n                value: (arrayName, array) => rawModule.globals.commons.setArray(arrayName, new floatArrayType(array)),\\\\n            },\\\\n        });\\\\n    };\\\\n\\\\n    const compileRawModule = (code) => new Function(`\\\\n        ${code}\\\\n        return exports\\\\n    `)();\\\\n    const createEngineBindings = (rawModule) => {\\\\n        const exportedNames = rawModule.metadata.compilation.variableNamesIndex.globals;\\\\n        const globalsBindings = {\\\\n            commons: {\\\\n                type: 'proxy',\\\\n                value: createCommonsModule(rawModule, rawModule.metadata),\\\\n            },\\\\n        };\\\\n        if ('fs' in exportedNames) {\\\\n            globalsBindings.fs = { type: 'proxy', value: createFsModule(rawModule) };\\\\n        }\\\\n        return {\\\\n            metadata: { type: 'raw' },\\\\n            initialize: { type: 'raw' },\\\\n            dspLoop: { type: 'raw' },\\\\n            io: { type: 'raw' },\\\\n            globals: {\\\\n                type: 'proxy',\\\\n                value: proxyAsModuleWithBindings(rawModule, globalsBindings),\\\\n            },\\\\n        };\\\\n    };\\\\n    const createEngine = (code, additionalBindings) => {\\\\n        const rawModule = compileRawModule(code);\\\\n        const rawModuleWithNameMapping = proxyWithEngineNameMapping(rawModule, rawModule.metadata.compilation.variableNamesIndex);\\\\n        return proxyAsModuleWithBindings(rawModule, {\\\\n            ...createEngineBindings(rawModuleWithNameMapping),\\\\n            ...(additionalBindings || {}),\\\\n        });\\\\n    };\\\\n\\\\n    exports.compileRawModule = compileRawModule;\\\\n    exports.createEngine = createEngine;\\\\n    exports.createEngineBindings = createEngineBindings;\\\\n\\\\n    return exports;\\\\n\\\\n})({});\\\\n\\\";\\n\\n  var fetchRetry$1 = function (fetch, defaults) {\\n    defaults = defaults || {};\\n    if (typeof fetch !== 'function') {\\n      throw new ArgumentError('fetch must be a function');\\n    }\\n\\n    if (typeof defaults !== 'object') {\\n      throw new ArgumentError('defaults must be an object');\\n    }\\n\\n    if (defaults.retries !== undefined && !isPositiveInteger(defaults.retries)) {\\n      throw new ArgumentError('retries must be a positive integer');\\n    }\\n\\n    if (defaults.retryDelay !== undefined && !isPositiveInteger(defaults.retryDelay) && typeof defaults.retryDelay !== 'function') {\\n      throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\\n    }\\n\\n    if (defaults.retryOn !== undefined && !Array.isArray(defaults.retryOn) && typeof defaults.retryOn !== 'function') {\\n      throw new ArgumentError('retryOn property expects an array or function');\\n    }\\n\\n    var baseDefaults = {\\n      retries: 3,\\n      retryDelay: 1000,\\n      retryOn: [],\\n    };\\n\\n    defaults = Object.assign(baseDefaults, defaults);\\n\\n    return function fetchRetry(input, init) {\\n      var retries = defaults.retries;\\n      var retryDelay = defaults.retryDelay;\\n      var retryOn = defaults.retryOn;\\n\\n      if (init && init.retries !== undefined) {\\n        if (isPositiveInteger(init.retries)) {\\n          retries = init.retries;\\n        } else {\\n          throw new ArgumentError('retries must be a positive integer');\\n        }\\n      }\\n\\n      if (init && init.retryDelay !== undefined) {\\n        if (isPositiveInteger(init.retryDelay) || (typeof init.retryDelay === 'function')) {\\n          retryDelay = init.retryDelay;\\n        } else {\\n          throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\\n        }\\n      }\\n\\n      if (init && init.retryOn) {\\n        if (Array.isArray(init.retryOn) || (typeof init.retryOn === 'function')) {\\n          retryOn = init.retryOn;\\n        } else {\\n          throw new ArgumentError('retryOn property expects an array or function');\\n        }\\n      }\\n\\n      // eslint-disable-next-line no-undef\\n      return new Promise(function (resolve, reject) {\\n        var wrappedFetch = function (attempt) {\\n          // As of node 18, this is no longer needed since node comes with native support for fetch:\\n          /* istanbul ignore next */\\n          var _input =\\n            typeof Request !== 'undefined' && input instanceof Request\\n              ? input.clone()\\n              : input;\\n          fetch(_input, init)\\n            .then(function (response) {\\n              if (Array.isArray(retryOn) && retryOn.indexOf(response.status) === -1) {\\n                resolve(response);\\n              } else if (typeof retryOn === 'function') {\\n                try {\\n                  // eslint-disable-next-line no-undef\\n                  return Promise.resolve(retryOn(attempt, null, response))\\n                    .then(function (retryOnResponse) {\\n                      if(retryOnResponse) {\\n                        retry(attempt, null, response);\\n                      } else {\\n                        resolve(response);\\n                      }\\n                    }).catch(reject);\\n                } catch (error) {\\n                  reject(error);\\n                }\\n              } else {\\n                if (attempt < retries) {\\n                  retry(attempt, null, response);\\n                } else {\\n                  resolve(response);\\n                }\\n              }\\n            })\\n            .catch(function (error) {\\n              if (typeof retryOn === 'function') {\\n                try {\\n                  // eslint-disable-next-line no-undef\\n                  Promise.resolve(retryOn(attempt, error, null))\\n                    .then(function (retryOnResponse) {\\n                      if(retryOnResponse) {\\n                        retry(attempt, error, null);\\n                      } else {\\n                        reject(error);\\n                      }\\n                    })\\n                    .catch(function(error) {\\n                      reject(error);\\n                    });\\n                } catch(error) {\\n                  reject(error);\\n                }\\n              } else if (attempt < retries) {\\n                retry(attempt, error, null);\\n              } else {\\n                reject(error);\\n              }\\n            });\\n        };\\n\\n        function retry(attempt, error, response) {\\n          var delay = (typeof retryDelay === 'function') ?\\n            retryDelay(attempt, error, response) : retryDelay;\\n          setTimeout(function () {\\n            wrappedFetch(++attempt);\\n          }, delay);\\n        }\\n\\n        wrappedFetch(0);\\n      });\\n    };\\n  };\\n\\n  function isPositiveInteger(value) {\\n    return Number.isInteger(value) && value >= 0;\\n  }\\n\\n  function ArgumentError(message) {\\n    this.name = 'ArgumentError';\\n    this.message = message;\\n  }\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const fetchRetry = fetchRetry$1(fetch);\\n  /**\\n   * Note : the audio worklet feature is available only in secure context.\\n   * This function will fail when used in insecure context (non-https, etc ...)\\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioWorklet\\n   */\\n  const addModule = async (context, processorCode) => {\\n      const blob = new Blob([processorCode], { type: 'text/javascript' });\\n      const workletProcessorUrl = URL.createObjectURL(blob);\\n      return context.audioWorklet.addModule(workletProcessorUrl);\\n  };\\n  // TODO : testing\\n  const fetchFile = async (url) => {\\n      let response;\\n      try {\\n          response = await fetchRetry(url, { retries: 3 });\\n      }\\n      catch (err) {\\n          throw new FileError(response.status, err.toString());\\n      }\\n      if (!response.ok) {\\n          const responseText = await response.text();\\n          throw new FileError(response.status, responseText);\\n      }\\n      return response.arrayBuffer();\\n  };\\n  const audioBufferToArray = (audioBuffer) => {\\n      const sound = [];\\n      for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\\n          sound.push(audioBuffer.getChannelData(channel));\\n      }\\n      return sound;\\n  };\\n  // TODO : testing\\n  const fixSoundChannelCount = (sound, targetChannelCount) => {\\n      if (sound.length === 0) {\\n          throw new Error(`Received empty sound`);\\n      }\\n      const floatArrayType = sound[0].constructor;\\n      const frameCount = sound[0].length;\\n      const fixedSound = sound.slice(0, targetChannelCount);\\n      while (sound.length < targetChannelCount) {\\n          fixedSound.push(new floatArrayType(frameCount));\\n      }\\n      return fixedSound;\\n  };\\n  const resolveRelativeUrl = (rootUrl, relativeUrl) => {\\n      return new URL(relativeUrl, rootUrl).href;\\n  };\\n  class FileError extends Error {\\n      constructor(status, msg) {\\n          super(`Error ${status} : ${msg}`);\\n      }\\n  }\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  // TODO : manage transferables\\n  class WebPdWorkletNode extends AudioWorkletNode {\\n      constructor(context) {\\n          super(context, 'webpd-node', {\\n              numberOfOutputs: 1,\\n              outputChannelCount: [2],\\n          });\\n      }\\n      destroy() {\\n          this.port.postMessage({\\n              type: 'destroy',\\n              payload: {},\\n          });\\n      }\\n  }\\n  // Concatenate WorkletProcessor code with the Wasm bindings it needs\\n  const WEBPD_WORKLET_PROCESSOR_CODE = ASSEMBLY_SCRIPT_WASM_BINDINGS_CODE +\\n      ';\\\\n' +\\n      JAVA_SCRIPT_BINDINGS_CODE +\\n      ';\\\\n' +\\n      WEB_PD_WORKLET_PROCESSOR_CODE;\\n  const registerWebPdWorkletNode = (context) => {\\n      return addModule(context, WEBPD_WORKLET_PROCESSOR_CODE);\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const FILES = {};\\n  const STREAMS = {};\\n  class FakeStream {\\n      constructor(url, sound) {\\n          this.url = url;\\n          this.sound = sound;\\n          this.frameCount = sound[0].length;\\n          this.readPosition = 0;\\n      }\\n  }\\n  const read = async (url) => {\\n      if (FILES[url]) {\\n          return FILES[url];\\n      }\\n      const arrayBuffer = await fetchFile(url);\\n      return {\\n          type: 'binary',\\n          data: arrayBuffer,\\n      };\\n  };\\n  // TODO : testing\\n  const readSound = async (url, context) => {\\n      let fakeFile = FILES[url] || (await read(url));\\n      switch (fakeFile.type) {\\n          case 'binary':\\n              const audioBuffer = await context.decodeAudioData(fakeFile.data);\\n              return audioBufferToArray(audioBuffer);\\n          case 'sound':\\n              // We copy the data here o it can be manipulated freely by the host.\\n              // e.g. if the buffer is sent as transferrable to the node we don't want the original to be transferred.\\n              return fakeFile.data.map((array) => array.slice());\\n      }\\n  };\\n  const writeSound = async (sound, url) => {\\n      FILES[url] = {\\n          type: 'sound',\\n          data: sound,\\n      };\\n  };\\n  const readStreamSound = async (operationId, url, channelCount, context) => {\\n      const sound = await readSound(url, context);\\n      STREAMS[operationId] = new FakeStream(url, fixSoundChannelCount(sound, channelCount));\\n      return STREAMS[operationId];\\n  };\\n  const writeStreamSound = async (operationId, url, channelCount) => {\\n      const emptySound = [];\\n      for (let channel = 0; channel < channelCount; channel++) {\\n          emptySound.push(new Float32Array(0));\\n      }\\n      STREAMS[operationId] = new FakeStream(url, emptySound);\\n      FILES[url] = {\\n          type: 'sound',\\n          data: emptySound,\\n      };\\n      return STREAMS[operationId];\\n  };\\n  const getStream = (operationId) => {\\n      return STREAMS[operationId];\\n  };\\n  const killStream = (operationId) => {\\n      console.log('KILL STREAM', operationId);\\n      delete STREAMS[operationId];\\n  };\\n  const pullBlock = (stream, frameCount) => {\\n      const block = stream.sound.map((array) => array.slice(stream.readPosition, stream.readPosition + frameCount));\\n      stream.readPosition += frameCount;\\n      return block;\\n  };\\n  const pushBlock = (stream, block) => {\\n      stream.sound = stream.sound.map((channelData, channel) => {\\n          const concatenated = new Float32Array(channelData.length + block[channel].length);\\n          concatenated.set(channelData);\\n          concatenated.set(block[channel], channelData.length);\\n          return concatenated;\\n      });\\n      stream.frameCount = stream.sound[0].length;\\n      FILES[stream.url].data = stream.sound;\\n  };\\n  var fakeFs = {\\n      writeSound,\\n      readSound,\\n      readStreamSound,\\n      writeStreamSound,\\n      pullBlock,\\n      pushBlock,\\n  };\\n\\n  var closeSoundStream = async (_, payload, __) => {\\n      if (payload.functionName === 'onCloseSoundStream') {\\n          killStream(payload.arguments[0]);\\n      }\\n  };\\n\\n  const _addPath$1 = (parent, key, _path) => {\\n      const path = _ensurePath$1(_path);\\n      return {\\n          keys: [...path.keys, key],\\n          parents: [...path.parents, parent],\\n      };\\n  };\\n  const _ensurePath$1 = (path) => path || {\\n      keys: [],\\n      parents: [],\\n  };\\n  const _proxySetHandlerReadOnly$1 = () => {\\n      throw new Error('This Proxy is read-only.');\\n  };\\n  const _proxyGetHandlerThrowIfKeyUnknown$1 = (target, key, path) => {\\n      if (!(key in target)) {\\n          // Whitelist some fields that are undefined but accessed at\\n          // some point or another by our code.\\n          // TODO : find a better way to do this.\\n          if ([\\n              'toJSON',\\n              'Symbol(Symbol.toStringTag)',\\n              'constructor',\\n              '$typeof',\\n              '$$typeof',\\n              '@@__IMMUTABLE_ITERABLE__@@',\\n              '@@__IMMUTABLE_RECORD__@@',\\n              'then',\\n          ].includes(key)) {\\n              return true;\\n          }\\n          throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \\\"${String(key)}\\\"`);\\n      }\\n      return false;\\n  };\\n  const proxyAsAssigner$1 = (spec, _obj, context, _path) => {\\n      const path = _path || { keys: [], parents: [] };\\n      const obj = proxyAsAssigner$1.ensureValue(_obj, spec, context, path);\\n      // If `_path` is provided, assign the new value to the parent object.\\n      if (_path) {\\n          const parent = _path.parents[_path.parents.length - 1];\\n          const key = _path.keys[_path.keys.length - 1];\\n          // The only case where we want to overwrite the existing value\\n          // is when it was a `null` assigned by `LiteralDefaultNull`, and\\n          // we want to set the real value instead.\\n          if (!(key in parent) || 'LiteralDefaultNull' in spec) {\\n              parent[key] = obj;\\n          }\\n      }\\n      // If the object is a Literal, end of the recursion.\\n      if ('Literal' in spec || 'LiteralDefaultNull' in spec) {\\n          return obj;\\n      }\\n      return new Proxy(obj, {\\n          get: (_, k) => {\\n              const key = String(k);\\n              let nextSpec;\\n              if ('Index' in spec) {\\n                  nextSpec = spec.Index(key, context, path);\\n              }\\n              else if ('Interface' in spec) {\\n                  if (!(key in spec.Interface)) {\\n                      throw new Error(`Interface has no entry \\\"${String(key)}\\\"`);\\n                  }\\n                  nextSpec = spec.Interface[key];\\n              }\\n              else {\\n                  throw new Error('no builder');\\n              }\\n              return proxyAsAssigner$1(nextSpec, \\n              // We use this form here instead of `obj[key]` specifically\\n              // to allow Assign to play well with `ProtectedIndex`, which\\n              // would raise an error if trying to access an undefined key.\\n              key in obj ? obj[key] : undefined, context, _addPath$1(obj, key, path));\\n          },\\n          set: _proxySetHandlerReadOnly$1,\\n      });\\n  };\\n  proxyAsAssigner$1.ensureValue = (_obj, spec, context, _path, _recursionPath) => {\\n      if ('Index' in spec) {\\n          return (_obj || spec.indexConstructor(context, _ensurePath$1(_path)));\\n      }\\n      else if ('Interface' in spec) {\\n          const obj = (_obj || {});\\n          Object.entries(spec.Interface).forEach(([key, nextSpec]) => {\\n              obj[key] = proxyAsAssigner$1.ensureValue(obj[key], nextSpec, context, _addPath$1(obj, key, _path), _addPath$1(obj, key, _recursionPath));\\n          });\\n          return obj;\\n      }\\n      else if ('Literal' in spec) {\\n          return (_obj || spec.Literal(context, _ensurePath$1(_path)));\\n      }\\n      else if ('LiteralDefaultNull' in spec) {\\n          if (!_recursionPath) {\\n              return (_obj ||\\n                  spec.LiteralDefaultNull(context, _ensurePath$1(_path)));\\n          }\\n          else {\\n              return (_obj || null);\\n          }\\n      }\\n      else {\\n          throw new Error('Invalid Assigner');\\n      }\\n  };\\n  proxyAsAssigner$1.Interface = (a) => ({ Interface: a });\\n  proxyAsAssigner$1.Index = (f, indexConstructor) => ({\\n      Index: f,\\n      indexConstructor: indexConstructor || (() => ({})),\\n  });\\n  proxyAsAssigner$1.Literal = (f) => ({\\n      Literal: f,\\n  });\\n  proxyAsAssigner$1.LiteralDefaultNull = (f) => ({ LiteralDefaultNull: f });\\n  // ---------------------------- proxyAsProtectedIndex ---------------------------- //\\n  /**\\n   * Helper to declare namespace objects enforcing stricter access rules.\\n   * Specifically, it forbids :\\n   * - reading an unknown property.\\n   * - trying to overwrite an existing property.\\n   */\\n  const proxyAsProtectedIndex$1 = (namespace, path) => {\\n      return new Proxy(namespace, {\\n          get: (target, k) => {\\n              const key = String(k);\\n              if (_proxyGetHandlerThrowIfKeyUnknown$1(target, key, path)) {\\n                  return undefined;\\n              }\\n              return target[key];\\n          },\\n          set: (target, k, newValue) => {\\n              const key = _trimDollarKey$1(String(k));\\n              if (target.hasOwnProperty(key)) {\\n                  throw new Error(`Key \\\"${String(key)}\\\" is protected and cannot be overwritten.`);\\n              }\\n              else {\\n                  target[key] = newValue;\\n              }\\n              return newValue;\\n          },\\n      });\\n  };\\n  const _trimDollarKey$1 = (key) => {\\n      const match = /\\\\$(.*)/.exec(key);\\n      if (!match) {\\n          return key;\\n      }\\n      else {\\n          return match[1];\\n      }\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const getNode$1 = (graph, nodeId) => {\\n      const node = graph[nodeId];\\n      if (node) {\\n          return node;\\n      }\\n      throw new Error(`Node \\\"${nodeId}\\\" not found in graph`);\\n  };\\n\\n  /** Helper to get node implementation or throw an error if not implemented. */\\n  const getNodeImplementation$1 = (nodeImplementations, nodeType) => {\\n      const nodeImplementation = nodeImplementations[nodeType];\\n      if (!nodeImplementation) {\\n          throw new Error(`node [${nodeType}] is not implemented`);\\n      }\\n      return {\\n          dependencies: [],\\n          ...nodeImplementation,\\n      };\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  /** Generate an integer series from 0 to `count` (non-inclusive). */\\n  const countTo$1 = (count) => {\\n      const results = [];\\n      for (let i = 0; i < count; i++) {\\n          results.push(i);\\n      }\\n      return results;\\n  };\\n\\n  const Sequence$1 = (content) => ({\\n      astType: 'Sequence',\\n      content: _processRawContent$1(_intersperse$1(content, countTo$1(content.length - 1).map(() => '\\\\n'))),\\n  });\\n  const ast$1 = (strings, ...content) => _preventToString$1({\\n      astType: 'Sequence',\\n      content: _processRawContent$1(_intersperse$1(strings, content)),\\n  });\\n  const _processRawContent$1 = (content) => {\\n      // 1. Flatten arrays and AstSequence, filter out nulls, and convert numbers to strings\\n      // Basically converts input to an Array<AstContent>.\\n      const flattenedAndFiltered = content.flatMap((element) => {\\n          if (typeof element === 'string') {\\n              return [element];\\n          }\\n          else if (typeof element === 'number') {\\n              return [element.toString()];\\n          }\\n          else {\\n              if (element === null) {\\n                  return [];\\n              }\\n              else if (Array.isArray(element)) {\\n                  return _processRawContent$1(_intersperse$1(element, countTo$1(element.length - 1).map(() => '\\\\n')));\\n              }\\n              else if (typeof element === 'object' &&\\n                  element.astType === 'Sequence') {\\n                  return element.content;\\n              }\\n              else {\\n                  return [element];\\n              }\\n          }\\n      });\\n      // 2. Combine adjacent strings\\n      const [combinedContent, remainingString] = flattenedAndFiltered.reduce(([combinedContent, currentString], element) => {\\n          if (typeof element === 'string') {\\n              return [combinedContent, currentString + element];\\n          }\\n          else {\\n              if (currentString.length) {\\n                  return [[...combinedContent, currentString, element], ''];\\n              }\\n              else {\\n                  return [[...combinedContent, element], ''];\\n              }\\n          }\\n      }, [[], '']);\\n      if (remainingString.length) {\\n          combinedContent.push(remainingString);\\n      }\\n      return combinedContent;\\n  };\\n  /**\\n   * Intersperse content from array1 with content from array2.\\n   * `array1.length` must be equal to `array2.length + 1`.\\n   */\\n  const _intersperse$1 = (array1, array2) => {\\n      if (array1.length === 0) {\\n          return [];\\n      }\\n      return array1.slice(1).reduce((combinedContent, element, i) => {\\n          return combinedContent.concat([array2[i], element]);\\n      }, [array1[0]]);\\n  };\\n  /**\\n   * Prevents AST elements from being rendered as a string, as this is\\n   * most likely an error due to unproper use of `ast`.\\n   * Deacivated. Activate for debugging by uncommenting the line below.\\n   */\\n  const _preventToString$1 = (element) => ({\\n      ...element,\\n      // Uncomment this to activate\\n      // toString: () => { throw new Error(`Rendering element ${elemennt.astType} as string is probably an error`) }\\n  });\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  // ---------------------------- VariableNamesIndex ---------------------------- //\\n  const NS$1 = {\\n      GLOBALS: 'G',\\n      NODES: 'N',\\n      NODE_TYPES: 'NT',\\n      IO: 'IO',\\n      COLD: 'COLD',\\n  };\\n  proxyAsAssigner$1.Interface({\\n      nodes: proxyAsAssigner$1.Index((nodeId) => proxyAsAssigner$1.Interface({\\n          signalOuts: proxyAsAssigner$1.Index((portletId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.NODES, nodeId, 'outs', portletId))),\\n          messageSenders: proxyAsAssigner$1.Index((portletId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.NODES, nodeId, 'snds', portletId))),\\n          messageReceivers: proxyAsAssigner$1.Index((portletId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.NODES, nodeId, 'rcvs', portletId))),\\n          state: proxyAsAssigner$1.LiteralDefaultNull(() => _name$1(NS$1.NODES, nodeId, 'state')),\\n      })),\\n      nodeImplementations: proxyAsAssigner$1.Index((nodeType, { nodeImplementations }) => {\\n          const nodeImplementation = getNodeImplementation$1(nodeImplementations, nodeType);\\n          const nodeTypePrefix = (nodeImplementation.flags\\n              ? nodeImplementation.flags.alphaName\\n              : null) || nodeType;\\n          return proxyAsAssigner$1.Index((name) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.NODE_TYPES, nodeTypePrefix, name)));\\n      }),\\n      globals: proxyAsAssigner$1.Index((ns) => proxyAsAssigner$1.Index((name) => {\\n          if (['fs'].includes(ns)) {\\n              return proxyAsAssigner$1.Literal(() => _name$1(NS$1.GLOBALS, ns, name));\\n              // We don't prefix stdlib core module, because these are super\\n              // basic functions that are always included in the global scope.\\n          }\\n          else if (ns === 'core') {\\n              return proxyAsAssigner$1.Literal(() => name);\\n          }\\n          else {\\n              return proxyAsAssigner$1.Literal(() => _name$1(NS$1.GLOBALS, ns, name));\\n          }\\n      })),\\n      io: proxyAsAssigner$1.Interface({\\n          messageReceivers: proxyAsAssigner$1.Index((nodeId) => proxyAsAssigner$1.Index((inletId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.IO, 'rcv', nodeId, inletId)))),\\n          messageSenders: proxyAsAssigner$1.Index((nodeId) => proxyAsAssigner$1.Index((outletId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.IO, 'snd', nodeId, outletId)))),\\n      }),\\n      coldDspGroups: proxyAsAssigner$1.Index((groupId) => proxyAsAssigner$1.Literal(() => _name$1(NS$1.COLD, groupId))),\\n  });\\n  // ---------------------------- PrecompiledCode ---------------------------- //\\n  proxyAsAssigner$1.Interface({\\n      graph: proxyAsAssigner$1.Literal((_, path) => ({\\n          fullTraversal: [],\\n          hotDspGroup: {\\n              traversal: [],\\n              outNodesIds: [],\\n          },\\n          coldDspGroups: proxyAsProtectedIndex$1({}, path),\\n      })),\\n      nodeImplementations: proxyAsAssigner$1.Index((nodeType, { nodeImplementations }) => proxyAsAssigner$1.Literal(() => ({\\n          nodeImplementation: getNodeImplementation$1(nodeImplementations, nodeType),\\n          stateClass: null,\\n          core: null,\\n      })), (_, path) => proxyAsProtectedIndex$1({}, path)),\\n      nodes: proxyAsAssigner$1.Index((nodeId, { graph }) => proxyAsAssigner$1.Literal(() => ({\\n          nodeType: getNode$1(graph, nodeId).type,\\n          messageReceivers: {},\\n          messageSenders: {},\\n          signalOuts: {},\\n          signalIns: {},\\n          initialization: ast$1 ``,\\n          dsp: {\\n              loop: ast$1 ``,\\n              inlets: {},\\n          },\\n          state: null,\\n      })), (_, path) => proxyAsProtectedIndex$1({}, path)),\\n      dependencies: proxyAsAssigner$1.Literal(() => ({\\n          imports: [],\\n          exports: [],\\n          ast: Sequence$1([]),\\n      })),\\n      io: proxyAsAssigner$1.Interface({\\n          messageReceivers: proxyAsAssigner$1.Index((_) => proxyAsAssigner$1.Literal((_, path) => proxyAsProtectedIndex$1({}, path)), (_, path) => proxyAsProtectedIndex$1({}, path)),\\n          messageSenders: proxyAsAssigner$1.Index((_) => proxyAsAssigner$1.Literal((_, path) => proxyAsProtectedIndex$1({}, path)), (_, path) => proxyAsProtectedIndex$1({}, path)),\\n      }),\\n  });\\n  // ---------------------------- MISC ---------------------------- //\\n  const _name$1 = (...parts) => parts.map(assertValidNamePart$1).join('_');\\n  const assertValidNamePart$1 = (namePart) => {\\n      const isInvalid = !VALID_NAME_PART_REGEXP$1.exec(namePart);\\n      if (isInvalid) {\\n          throw new Error(`Invalid variable name for code generation \\\"${namePart}\\\"`);\\n      }\\n      return namePart;\\n  };\\n  const VALID_NAME_PART_REGEXP$1 = /^[a-zA-Z0-9_]+$/;\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const FS_OPERATION_SUCCESS = 0;\\n  const FS_OPERATION_FAILURE = 1;\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  var readSoundFile = async (node, payload, settings) => {\\n      if (payload.functionName === 'onReadSoundFile') {\\n          const [operationId, url, [channelCount]] = payload.arguments;\\n          const absoluteUrl = resolveRelativeUrl(settings.rootUrl, url);\\n          let operationStatus = FS_OPERATION_SUCCESS;\\n          let sound = null;\\n          try {\\n              sound = await fakeFs.readSound(absoluteUrl, node.context);\\n          }\\n          catch (err) {\\n              operationStatus = FS_OPERATION_FAILURE;\\n              console.error(err);\\n          }\\n          if (sound) {\\n              sound = fixSoundChannelCount(sound, channelCount);\\n          }\\n          node.port.postMessage({\\n              type: 'fs',\\n              payload: {\\n                  functionName: 'sendReadSoundFileResponse',\\n                  arguments: [operationId, operationStatus, sound],\\n              },\\n          }, \\n          // Add as transferables to avoid copies between threads\\n          sound.map((array) => array.buffer));\\n      }\\n      else if (payload.functionName === 'sendReadSoundFileResponse_return') ;\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const BUFFER_HIGH = 10 * 44100;\\n  const BUFFER_LOW = BUFFER_HIGH / 2;\\n  var readSoundStream = async (node, payload, settings) => {\\n      if (payload.functionName === 'onOpenSoundReadStream') {\\n          const [operationId, url, [channelCount]] = payload.arguments;\\n          try {\\n              const absoluteUrl = resolveRelativeUrl(settings.rootUrl, url);\\n              await fakeFs.readStreamSound(operationId, absoluteUrl, channelCount, node.context);\\n          }\\n          catch (err) {\\n              console.error(err);\\n              node.port.postMessage({\\n                  type: 'fs',\\n                  payload: {\\n                      functionName: 'closeSoundStream',\\n                      arguments: [operationId, FS_OPERATION_FAILURE],\\n                  },\\n              });\\n              return;\\n          }\\n          streamLoop(node, operationId, 0);\\n      }\\n      else if (payload.functionName === 'sendSoundStreamData_return') {\\n          const stream = getStream(payload.operationId);\\n          if (!stream) {\\n              throw new Error(`unknown stream ${payload.operationId}`);\\n          }\\n          streamLoop(node, payload.operationId, payload.returned);\\n      }\\n      else if (payload.functionName === 'closeSoundStream_return') {\\n          const stream = getStream(payload.operationId);\\n          if (stream) {\\n              killStream(payload.operationId);\\n          }\\n      }\\n  };\\n  const streamLoop = (node, operationId, framesAvailableInEngine) => {\\n      const sampleRate = node.context.sampleRate;\\n      const secondsToThreshold = Math.max(framesAvailableInEngine - BUFFER_LOW, 10) / sampleRate;\\n      const framesToSend = BUFFER_HIGH -\\n          (framesAvailableInEngine - secondsToThreshold * sampleRate);\\n      setTimeout(() => {\\n          const stream = getStream(operationId);\\n          if (!stream) {\\n              console.log(`stream ${operationId} was maybe closed`);\\n              return;\\n          }\\n          if (stream.readPosition < stream.frameCount) {\\n              const block = pullBlock(stream, framesToSend);\\n              node.port.postMessage({\\n                  type: 'fs',\\n                  payload: {\\n                      functionName: 'sendSoundStreamData',\\n                      arguments: [operationId, block],\\n                  },\\n              }, \\n              // Add as transferables to avoid copies between threads\\n              block.map((array) => array.buffer));\\n          }\\n          else {\\n              node.port.postMessage({\\n                  type: 'fs',\\n                  payload: {\\n                      functionName: 'closeSoundStream',\\n                      arguments: [operationId, FS_OPERATION_SUCCESS],\\n                  },\\n              });\\n          }\\n      }, secondsToThreshold * 1000);\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  var writeSoundFile = async (node, payload, settings) => {\\n      if (payload.functionName === 'onWriteSoundFile') {\\n          const [operationId, sound, url, [channelCount]] = payload.arguments;\\n          const fixedSound = fixSoundChannelCount(sound, channelCount);\\n          const absoluteUrl = resolveRelativeUrl(settings.rootUrl, url);\\n          await fakeFs.writeSound(fixedSound, absoluteUrl);\\n          let operationStatus = FS_OPERATION_SUCCESS;\\n          node.port.postMessage({\\n              type: 'fs',\\n              payload: {\\n                  functionName: 'sendWriteSoundFileResponse',\\n                  arguments: [operationId, operationStatus],\\n              },\\n          });\\n      }\\n      else if (payload.functionName === 'sendWriteSoundFileResponse_return') ;\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  var writeSoundStream = async (_, payload, settings) => {\\n      if (payload.functionName === 'onOpenSoundWriteStream') {\\n          const [operationId, url, [channelCount]] = payload.arguments;\\n          const absoluteUrl = resolveRelativeUrl(settings.rootUrl, url);\\n          await fakeFs.writeStreamSound(operationId, absoluteUrl, channelCount);\\n      }\\n      else if (payload.functionName === 'onSoundStreamData') {\\n          const [operationId, sound] = payload.arguments;\\n          const stream = getStream(operationId);\\n          if (!stream) {\\n              throw new Error(`unknown stream ${operationId}`);\\n          }\\n          pushBlock(stream, sound);\\n      }\\n      else if (payload.functionName === 'closeSoundStream_return') {\\n          const stream = getStream(payload.operationId);\\n          if (stream) {\\n              killStream(payload.operationId);\\n          }\\n      }\\n  };\\n\\n  var index = async (node, messageEvent, settings) => {\\n      const message = messageEvent.data;\\n      const { payload } = message;\\n      if (message.type !== 'fs') {\\n          throw new Error(`Unknown message type from node ${message.type}`);\\n      }\\n      if (payload.functionName === 'onReadSoundFile' ||\\n          payload.functionName === 'sendReadSoundFileResponse_return') {\\n          readSoundFile(node, payload, settings);\\n      }\\n      else if (payload.functionName === 'onOpenSoundReadStream' ||\\n          payload.functionName === 'sendSoundStreamData_return') {\\n          readSoundStream(node, payload, settings);\\n      }\\n      else if (payload.functionName === 'onWriteSoundFile' ||\\n          payload.functionName === 'sendWriteSoundFileResponse_return') {\\n          writeSoundFile(node, payload, settings);\\n      }\\n      else if (payload.functionName === 'onOpenSoundWriteStream' ||\\n          payload.functionName === 'onSoundStreamData') {\\n          writeSoundStream(node, payload, settings);\\n      }\\n      else if (payload.functionName === 'closeSoundStream_return') {\\n          writeSoundStream(node, payload, settings);\\n          readSoundStream(node, payload, settings);\\n      }\\n      else if (payload.functionName === 'onCloseSoundStream') {\\n          closeSoundStream(node, payload);\\n      }\\n      else {\\n          throw new Error(`Unknown callback ${payload.functionName}`);\\n      }\\n  };\\n\\n  var initialize = (...args) => {\\n      return registerWebPdWorkletNode(...args);\\n  };\\n\\n  const urlDirName = (url) => {\\n      if (isExternalUrl(url)) {\\n          return new URL('.', url).href;\\n      }\\n      else {\\n          return new URL('.', new URL(url, document.URL).href).href;\\n      }\\n  };\\n  const isExternalUrl = (urlString) => {\\n      try {\\n          const url = new URL(urlString);\\n          if (url.origin !== new URL(document.URL, document.baseURI).origin) {\\n              return true;\\n          }\\n      }\\n      catch (_e) {\\n          new URL(urlString, document.baseURI);\\n      }\\n      return false;\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  /** Generate an integer series from 0 to `count` (non-inclusive). */\\n  const countTo = (count) => {\\n      const results = [];\\n      for (let i = 0; i < count; i++) {\\n          results.push(i);\\n      }\\n      return results;\\n  };\\n\\n  const Sequence = (content) => ({\\n      astType: 'Sequence',\\n      content: _processRawContent(_intersperse(content, countTo(content.length - 1).map(() => '\\\\n'))),\\n  });\\n  const ast = (strings, ...content) => _preventToString({\\n      astType: 'Sequence',\\n      content: _processRawContent(_intersperse(strings, content)),\\n  });\\n  const _processRawContent = (content) => {\\n      // 1. Flatten arrays and AstSequence, filter out nulls, and convert numbers to strings\\n      // Basically converts input to an Array<AstContent>.\\n      const flattenedAndFiltered = content.flatMap((element) => {\\n          if (typeof element === 'string') {\\n              return [element];\\n          }\\n          else if (typeof element === 'number') {\\n              return [element.toString()];\\n          }\\n          else {\\n              if (element === null) {\\n                  return [];\\n              }\\n              else if (Array.isArray(element)) {\\n                  return _processRawContent(_intersperse(element, countTo(element.length - 1).map(() => '\\\\n')));\\n              }\\n              else if (typeof element === 'object' &&\\n                  element.astType === 'Sequence') {\\n                  return element.content;\\n              }\\n              else {\\n                  return [element];\\n              }\\n          }\\n      });\\n      // 2. Combine adjacent strings\\n      const [combinedContent, remainingString] = flattenedAndFiltered.reduce(([combinedContent, currentString], element) => {\\n          if (typeof element === 'string') {\\n              return [combinedContent, currentString + element];\\n          }\\n          else {\\n              if (currentString.length) {\\n                  return [[...combinedContent, currentString, element], ''];\\n              }\\n              else {\\n                  return [[...combinedContent, element], ''];\\n              }\\n          }\\n      }, [[], '']);\\n      if (remainingString.length) {\\n          combinedContent.push(remainingString);\\n      }\\n      return combinedContent;\\n  };\\n  /**\\n   * Intersperse content from array1 with content from array2.\\n   * `array1.length` must be equal to `array2.length + 1`.\\n   */\\n  const _intersperse = (array1, array2) => {\\n      if (array1.length === 0) {\\n          return [];\\n      }\\n      return array1.slice(1).reduce((combinedContent, element, i) => {\\n          return combinedContent.concat([array2[i], element]);\\n      }, [array1[0]]);\\n  };\\n  /**\\n   * Prevents AST elements from being rendered as a string, as this is\\n   * most likely an error due to unproper use of `ast`.\\n   * Deacivated. Activate for debugging by uncommenting the line below.\\n   */\\n  const _preventToString = (element) => ({\\n      ...element,\\n      // Uncomment this to activate\\n      // toString: () => { throw new Error(`Rendering element ${elemennt.astType} as string is probably an error`) }\\n  });\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  const getNode = (graph, nodeId) => {\\n      const node = graph[nodeId];\\n      if (node) {\\n          return node;\\n      }\\n      throw new Error(`Node \\\"${nodeId}\\\" not found in graph`);\\n  };\\n\\n  /** Helper to get node implementation or throw an error if not implemented. */\\n  const getNodeImplementation = (nodeImplementations, nodeType) => {\\n      const nodeImplementation = nodeImplementations[nodeType];\\n      if (!nodeImplementation) {\\n          throw new Error(`node [${nodeType}] is not implemented`);\\n      }\\n      return {\\n          dependencies: [],\\n          ...nodeImplementation,\\n      };\\n  };\\n\\n  const _addPath = (parent, key, _path) => {\\n      const path = _ensurePath(_path);\\n      return {\\n          keys: [...path.keys, key],\\n          parents: [...path.parents, parent],\\n      };\\n  };\\n  const _ensurePath = (path) => path || {\\n      keys: [],\\n      parents: [],\\n  };\\n  const _proxySetHandlerReadOnly = () => {\\n      throw new Error('This Proxy is read-only.');\\n  };\\n  const _proxyGetHandlerThrowIfKeyUnknown = (target, key, path) => {\\n      if (!(key in target)) {\\n          // Whitelist some fields that are undefined but accessed at\\n          // some point or another by our code.\\n          // TODO : find a better way to do this.\\n          if ([\\n              'toJSON',\\n              'Symbol(Symbol.toStringTag)',\\n              'constructor',\\n              '$typeof',\\n              '$$typeof',\\n              '@@__IMMUTABLE_ITERABLE__@@',\\n              '@@__IMMUTABLE_RECORD__@@',\\n              'then',\\n          ].includes(key)) {\\n              return true;\\n          }\\n          throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \\\"${String(key)}\\\"`);\\n      }\\n      return false;\\n  };\\n  const proxyAsAssigner = (spec, _obj, context, _path) => {\\n      const path = _path || { keys: [], parents: [] };\\n      const obj = proxyAsAssigner.ensureValue(_obj, spec, context, path);\\n      // If `_path` is provided, assign the new value to the parent object.\\n      if (_path) {\\n          const parent = _path.parents[_path.parents.length - 1];\\n          const key = _path.keys[_path.keys.length - 1];\\n          // The only case where we want to overwrite the existing value\\n          // is when it was a `null` assigned by `LiteralDefaultNull`, and\\n          // we want to set the real value instead.\\n          if (!(key in parent) || 'LiteralDefaultNull' in spec) {\\n              parent[key] = obj;\\n          }\\n      }\\n      // If the object is a Literal, end of the recursion.\\n      if ('Literal' in spec || 'LiteralDefaultNull' in spec) {\\n          return obj;\\n      }\\n      return new Proxy(obj, {\\n          get: (_, k) => {\\n              const key = String(k);\\n              let nextSpec;\\n              if ('Index' in spec) {\\n                  nextSpec = spec.Index(key, context, path);\\n              }\\n              else if ('Interface' in spec) {\\n                  if (!(key in spec.Interface)) {\\n                      throw new Error(`Interface has no entry \\\"${String(key)}\\\"`);\\n                  }\\n                  nextSpec = spec.Interface[key];\\n              }\\n              else {\\n                  throw new Error('no builder');\\n              }\\n              return proxyAsAssigner(nextSpec, \\n              // We use this form here instead of `obj[key]` specifically\\n              // to allow Assign to play well with `ProtectedIndex`, which\\n              // would raise an error if trying to access an undefined key.\\n              key in obj ? obj[key] : undefined, context, _addPath(obj, key, path));\\n          },\\n          set: _proxySetHandlerReadOnly,\\n      });\\n  };\\n  proxyAsAssigner.ensureValue = (_obj, spec, context, _path, _recursionPath) => {\\n      if ('Index' in spec) {\\n          return (_obj || spec.indexConstructor(context, _ensurePath(_path)));\\n      }\\n      else if ('Interface' in spec) {\\n          const obj = (_obj || {});\\n          Object.entries(spec.Interface).forEach(([key, nextSpec]) => {\\n              obj[key] = proxyAsAssigner.ensureValue(obj[key], nextSpec, context, _addPath(obj, key, _path), _addPath(obj, key, _recursionPath));\\n          });\\n          return obj;\\n      }\\n      else if ('Literal' in spec) {\\n          return (_obj || spec.Literal(context, _ensurePath(_path)));\\n      }\\n      else if ('LiteralDefaultNull' in spec) {\\n          if (!_recursionPath) {\\n              return (_obj ||\\n                  spec.LiteralDefaultNull(context, _ensurePath(_path)));\\n          }\\n          else {\\n              return (_obj || null);\\n          }\\n      }\\n      else {\\n          throw new Error('Invalid Assigner');\\n      }\\n  };\\n  proxyAsAssigner.Interface = (a) => ({ Interface: a });\\n  proxyAsAssigner.Index = (f, indexConstructor) => ({\\n      Index: f,\\n      indexConstructor: indexConstructor || (() => ({})),\\n  });\\n  proxyAsAssigner.Literal = (f) => ({\\n      Literal: f,\\n  });\\n  proxyAsAssigner.LiteralDefaultNull = (f) => ({ LiteralDefaultNull: f });\\n  // ---------------------------- proxyAsProtectedIndex ---------------------------- //\\n  /**\\n   * Helper to declare namespace objects enforcing stricter access rules.\\n   * Specifically, it forbids :\\n   * - reading an unknown property.\\n   * - trying to overwrite an existing property.\\n   */\\n  const proxyAsProtectedIndex = (namespace, path) => {\\n      return new Proxy(namespace, {\\n          get: (target, k) => {\\n              const key = String(k);\\n              if (_proxyGetHandlerThrowIfKeyUnknown(target, key, path)) {\\n                  return undefined;\\n              }\\n              return target[key];\\n          },\\n          set: (target, k, newValue) => {\\n              const key = _trimDollarKey(String(k));\\n              if (target.hasOwnProperty(key)) {\\n                  throw new Error(`Key \\\"${String(key)}\\\" is protected and cannot be overwritten.`);\\n              }\\n              else {\\n                  target[key] = newValue;\\n              }\\n              return newValue;\\n          },\\n      });\\n  };\\n  const _trimDollarKey = (key) => {\\n      const match = /\\\\$(.*)/.exec(key);\\n      if (!match) {\\n          return key;\\n      }\\n      else {\\n          return match[1];\\n      }\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  // ---------------------------- VariableNamesIndex ---------------------------- //\\n  const NS = {\\n      GLOBALS: 'G',\\n      NODES: 'N',\\n      NODE_TYPES: 'NT',\\n      IO: 'IO',\\n      COLD: 'COLD',\\n  };\\n  proxyAsAssigner.Interface({\\n      nodes: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Interface({\\n          signalOuts: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'outs', portletId))),\\n          messageSenders: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'snds', portletId))),\\n          messageReceivers: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'rcvs', portletId))),\\n          state: proxyAsAssigner.LiteralDefaultNull(() => _name(NS.NODES, nodeId, 'state')),\\n      })),\\n      nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => {\\n          const nodeImplementation = getNodeImplementation(nodeImplementations, nodeType);\\n          const nodeTypePrefix = (nodeImplementation.flags\\n              ? nodeImplementation.flags.alphaName\\n              : null) || nodeType;\\n          return proxyAsAssigner.Index((name) => proxyAsAssigner.Literal(() => _name(NS.NODE_TYPES, nodeTypePrefix, name)));\\n      }),\\n      globals: proxyAsAssigner.Index((ns) => proxyAsAssigner.Index((name) => {\\n          if (['fs'].includes(ns)) {\\n              return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\\n              // We don't prefix stdlib core module, because these are super\\n              // basic functions that are always included in the global scope.\\n          }\\n          else if (ns === 'core') {\\n              return proxyAsAssigner.Literal(() => name);\\n          }\\n          else {\\n              return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\\n          }\\n      })),\\n      io: proxyAsAssigner.Interface({\\n          messageReceivers: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((inletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'rcv', nodeId, inletId)))),\\n          messageSenders: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((outletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'snd', nodeId, outletId)))),\\n      }),\\n      coldDspGroups: proxyAsAssigner.Index((groupId) => proxyAsAssigner.Literal(() => _name(NS.COLD, groupId))),\\n  });\\n  // ---------------------------- PrecompiledCode ---------------------------- //\\n  proxyAsAssigner.Interface({\\n      graph: proxyAsAssigner.Literal((_, path) => ({\\n          fullTraversal: [],\\n          hotDspGroup: {\\n              traversal: [],\\n              outNodesIds: [],\\n          },\\n          coldDspGroups: proxyAsProtectedIndex({}, path),\\n      })),\\n      nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => proxyAsAssigner.Literal(() => ({\\n          nodeImplementation: getNodeImplementation(nodeImplementations, nodeType),\\n          stateClass: null,\\n          core: null,\\n      })), (_, path) => proxyAsProtectedIndex({}, path)),\\n      nodes: proxyAsAssigner.Index((nodeId, { graph }) => proxyAsAssigner.Literal(() => ({\\n          nodeType: getNode(graph, nodeId).type,\\n          messageReceivers: {},\\n          messageSenders: {},\\n          signalOuts: {},\\n          signalIns: {},\\n          initialization: ast ``,\\n          dsp: {\\n              loop: ast ``,\\n              inlets: {},\\n          },\\n          state: null,\\n      })), (_, path) => proxyAsProtectedIndex({}, path)),\\n      dependencies: proxyAsAssigner.Literal(() => ({\\n          imports: [],\\n          exports: [],\\n          ast: Sequence([]),\\n      })),\\n      io: proxyAsAssigner.Interface({\\n          messageReceivers: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\\n          messageSenders: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\\n      }),\\n  });\\n  // ---------------------------- MISC ---------------------------- //\\n  const _name = (...parts) => parts.map(assertValidNamePart).join('_');\\n  const assertValidNamePart = (namePart) => {\\n      const isInvalid = !VALID_NAME_PART_REGEXP.exec(namePart);\\n      if (isInvalid) {\\n          throw new Error(`Invalid variable name for code generation \\\"${namePart}\\\"`);\\n      }\\n      return namePart;\\n  };\\n  const VALID_NAME_PART_REGEXP = /^[a-zA-Z0-9_]+$/;\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  // NOTE : not necessarily the most logical place to put this function, but we need it here\\n  // cause it's imported by the bindings.\\n  const getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\\n  const proxyAsModuleWithBindings = (rawModule, bindings) => \\n  // Use empty object on proxy cause proxy cannot redefine access of member of its target,\\n  // which causes issues for example for WebAssembly exports.\\n  // See : https://stackoverflow.com/questions/75148897/get-on-proxy-property-items-is-a-read-only-and-non-configurable-data-proper\\n  new Proxy({}, {\\n      get: (_, k) => {\\n          if (bindings.hasOwnProperty(k)) {\\n              const key = String(k);\\n              const bindingSpec = bindings[key];\\n              switch (bindingSpec.type) {\\n                  case 'raw':\\n                      // Cannot use hasOwnProperty here cause not defined in wasm exports object\\n                      if (k in rawModule) {\\n                          return rawModule[key];\\n                      }\\n                      else {\\n                          throw new Error(`Key ${String(key)} doesn't exist in raw module`);\\n                      }\\n                  case 'proxy':\\n                  case 'callback':\\n                      return bindingSpec.value;\\n              }\\n              // We need to return undefined here for compatibility with various APIs\\n              // which inspect object's attributes.\\n          }\\n          else {\\n              return undefined;\\n          }\\n      },\\n      has: function (_, k) {\\n          return k in bindings;\\n      },\\n      set: (_, k, newValue) => {\\n          if (bindings.hasOwnProperty(String(k))) {\\n              const key = String(k);\\n              const bindingSpec = bindings[key];\\n              if (bindingSpec.type === 'callback') {\\n                  bindingSpec.value = newValue;\\n              }\\n              else {\\n                  throw new Error(`Binding key ${String(key)} is read-only`);\\n              }\\n          }\\n          else {\\n              throw new Error(`Key ${String(k)} is not defined in bindings`);\\n          }\\n          return true;\\n      },\\n  });\\n  /**\\n   * Reverse-maps exported variable names from `rawModule` according to the mapping defined\\n   * in `variableNamesIndex`.\\n   *\\n   * For example with :\\n   *\\n   * ```\\n   * const variableNamesIndex = {\\n   *     globals: {\\n   *         // ...\\n   *         fs: {\\n   *             // ...\\n   *             readFile: 'g_fs_readFile'\\n   *         },\\n   *     }\\n   * }\\n   * ```\\n   *\\n   * The function `g_fs_readFile` (if it is exported properly by the raw module), will then\\n   * be available on the returned object at path `.globals.fs.readFile`.\\n   */\\n  const proxyWithEngineNameMapping = (rawModule, variableNamesIndex) => proxyWithNameMapping(rawModule, {\\n      globals: variableNamesIndex.globals,\\n      io: variableNamesIndex.io,\\n  });\\n  const proxyWithNameMapping = (rawModule, variableNamesIndex) => {\\n      if (typeof variableNamesIndex === 'string') {\\n          return rawModule[variableNamesIndex];\\n      }\\n      else if (typeof variableNamesIndex === 'object') {\\n          return new Proxy(rawModule, {\\n              get: (_, k) => {\\n                  const key = String(k);\\n                  if (key in rawModule) {\\n                      return Reflect.get(rawModule, key);\\n                  }\\n                  else if (key in variableNamesIndex) {\\n                      const nextVariableNames = variableNamesIndex[key];\\n                      return proxyWithNameMapping(rawModule, nextVariableNames);\\n                  }\\n                  else if (_proxyGetHandlerThrowIfKeyUnknown(rawModule, key)) {\\n                      return undefined;\\n                  }\\n              },\\n              has: function (_, k) {\\n                  return k in rawModule || k in variableNamesIndex;\\n              },\\n              set: (_, k, value) => {\\n                  const key = String(k);\\n                  if (key in variableNamesIndex) {\\n                      const variableName = variableNamesIndex[key];\\n                      if (typeof variableName !== 'string') {\\n                          throw new Error(`Failed to set value for key ${String(k)}: variable name is not a string`);\\n                      }\\n                      return Reflect.set(rawModule, variableName, value);\\n                  }\\n                  else {\\n                      throw new Error(`Key ${String(k)} is not defined in raw module`);\\n                  }\\n              },\\n          });\\n      }\\n      else {\\n          throw new Error(`Invalid name mapping`);\\n      }\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  /** @copyright Assemblyscript ESM bindings */\\n  const liftString = (rawModule, pointer) => {\\n      if (!pointer) {\\n          throw new Error('Cannot lift a null pointer');\\n      }\\n      pointer = pointer >>> 0;\\n      const end = (pointer +\\n          new Uint32Array(rawModule.memory.buffer)[(pointer - 4) >>> 2]) >>>\\n          1;\\n      const memoryU16 = new Uint16Array(rawModule.memory.buffer);\\n      let start = pointer >>> 1;\\n      let string = '';\\n      while (end - start > 1024) {\\n          string += String.fromCharCode(...memoryU16.subarray(start, (start += 1024)));\\n      }\\n      return string + String.fromCharCode(...memoryU16.subarray(start, end));\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  // REF : Assemblyscript ESM bindings\\n  const instantiateWasmModule = async (wasmBuffer, wasmImports = {}) => {\\n      const instanceAndModule = await WebAssembly.instantiate(wasmBuffer, {\\n          env: {\\n              abort: (messagePointer, \\n              // filename, not useful because we compile everything to a single string\\n              _, lineNumber, columnNumber) => {\\n                  const message = liftString(wasmExports, messagePointer);\\n                  lineNumber = lineNumber;\\n                  columnNumber = columnNumber;\\n                  (() => {\\n                      // @external.js\\n                      throw Error(`${message} at ${lineNumber}:${columnNumber}`);\\n                  })();\\n              },\\n              seed: () => {\\n                  return (() => {\\n                      return Date.now() * Math.random();\\n                  })();\\n              },\\n              'console.log': (textPointer) => {\\n                  console.log(liftString(wasmExports, textPointer));\\n              },\\n          },\\n          ...wasmImports,\\n      });\\n      const wasmExports = instanceAndModule.instance\\n          .exports;\\n      return instanceAndModule.instance;\\n  };\\n\\n  const readMetadata$2 = async (wasmBuffer) => {\\n      // In order to read metadata, we need to introspect the module to get the imports\\n      const inputImports = {};\\n      const wasmModule = WebAssembly.Module.imports(new WebAssembly.Module(wasmBuffer));\\n      // Then we generate dummy functions to be able to instantiate the module\\n      wasmModule\\n          .filter((imprt) => imprt.module === 'input' && imprt.kind === 'function')\\n          .forEach((imprt) => (inputImports[imprt.name] = () => undefined));\\n      const wasmInstance = await instantiateWasmModule(wasmBuffer, {\\n          input: inputImports,\\n      });\\n      // Finally, once the module instantiated, we read the metadata\\n      const rawModule = wasmInstance.exports;\\n      const stringPointer = rawModule.metadata.valueOf();\\n      const metadataJSON = liftString(rawModule, stringPointer);\\n      return JSON.parse(metadataJSON);\\n  };\\n\\n  const createFsModule = (rawModule) => {\\n      const fsExportedNames = rawModule.metadata.compilation.variableNamesIndex.globals.fs;\\n      const fs = proxyAsModuleWithBindings(rawModule, {\\n          onReadSoundFile: { type: 'callback', value: () => undefined },\\n          onWriteSoundFile: { type: 'callback', value: () => undefined },\\n          onOpenSoundReadStream: { type: 'callback', value: () => undefined },\\n          onOpenSoundWriteStream: { type: 'callback', value: () => undefined },\\n          onSoundStreamData: { type: 'callback', value: () => undefined },\\n          onCloseSoundStream: { type: 'callback', value: () => undefined },\\n          sendReadSoundFileResponse: {\\n              type: 'proxy',\\n              value: 'x_onReadSoundFileResponse' in fsExportedNames\\n                  ? rawModule.globals.fs.x_onReadSoundFileResponse\\n                  : undefined,\\n          },\\n          sendWriteSoundFileResponse: {\\n              type: 'proxy',\\n              value: 'x_onWriteSoundFileResponse' in fsExportedNames\\n                  ? rawModule.globals.fs.x_onWriteSoundFileResponse\\n                  : undefined,\\n          },\\n          // should register the operation success { bitDepth: 32, target: 'javascript' }\\n          sendSoundStreamData: {\\n              type: 'proxy',\\n              value: 'x_onSoundStreamData' in fsExportedNames\\n                  ? rawModule.globals.fs.x_onSoundStreamData\\n                  : undefined,\\n          },\\n          closeSoundStream: {\\n              type: 'proxy',\\n              value: 'x_onCloseSoundStream' in fsExportedNames\\n                  ? rawModule.globals.fs.x_onCloseSoundStream\\n                  : undefined,\\n          },\\n      });\\n      if ('i_openSoundWriteStream' in fsExportedNames) {\\n          rawModule.globals.fs.i_openSoundWriteStream = (...args) => fs.onOpenSoundWriteStream(...args);\\n      }\\n      if ('i_sendSoundStreamData' in fsExportedNames) {\\n          rawModule.globals.fs.i_sendSoundStreamData = (...args) => fs.onSoundStreamData(...args);\\n      }\\n      if ('i_openSoundReadStream' in fsExportedNames) {\\n          rawModule.globals.fs.i_openSoundReadStream = (...args) => fs.onOpenSoundReadStream(...args);\\n      }\\n      if ('i_closeSoundStream' in fsExportedNames) {\\n          rawModule.globals.fs.i_closeSoundStream = (...args) => fs.onCloseSoundStream(...args);\\n      }\\n      if ('i_writeSoundFile' in fsExportedNames) {\\n          rawModule.globals.fs.i_writeSoundFile = (...args) => fs.onWriteSoundFile(...args);\\n      }\\n      if ('i_readSoundFile' in fsExportedNames) {\\n          rawModule.globals.fs.i_readSoundFile = (...args) => fs.onReadSoundFile(...args);\\n      }\\n      return fs;\\n  };\\n\\n  const createCommonsModule = (rawModule, metadata) => {\\n      const floatArrayType = getFloatArrayType(metadata.settings.audio.bitDepth);\\n      return proxyAsModuleWithBindings(rawModule, {\\n          getArray: {\\n              type: 'proxy',\\n              value: (arrayName) => rawModule.globals.commons.getArray(arrayName),\\n          },\\n          setArray: {\\n              type: 'proxy',\\n              value: (arrayName, array) => rawModule.globals.commons.setArray(arrayName, new floatArrayType(array)),\\n          },\\n      });\\n  };\\n\\n  /*\\n   * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\\n   *\\n   * This file is part of WebPd\\n   * (see https://github.com/sebpiq/WebPd).\\n   *\\n   * This program is free software: you can redistribute it and/or modify\\n   * it under the terms of the GNU Lesser General Public License as published by\\n   * the Free Software Foundation, either version 3 of the License, or\\n   * (at your option) any later version.\\n   *\\n   * This program is distributed in the hope that it will be useful,\\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n   * GNU Lesser General Public License for more details.\\n   *\\n   * You should have received a copy of the GNU Lesser General Public License\\n   * along with this program. If not, see <http://www.gnu.org/licenses/>.\\n   */\\n  /**\\n   * These bindings enable easier interaction with modules generated with our JavaScript compilation.\\n   * For example : instantiation, passing data back and forth, etc ...\\n   *\\n   * **Warning** : These bindings are compiled with rollup as a standalone JS module for inclusion in other libraries.\\n   * In consequence, they are meant to be kept lightweight, and should avoid importing dependencies.\\n   *\\n   * @module\\n   */\\n  const compileRawModule = (code) => new Function(`\\n        ${code}\\n        return exports\\n    `)();\\n  const createEngineBindings = (rawModule) => {\\n      const exportedNames = rawModule.metadata.compilation.variableNamesIndex.globals;\\n      const globalsBindings = {\\n          commons: {\\n              type: 'proxy',\\n              value: createCommonsModule(rawModule, rawModule.metadata),\\n          },\\n      };\\n      if ('fs' in exportedNames) {\\n          globalsBindings.fs = { type: 'proxy', value: createFsModule(rawModule) };\\n      }\\n      return {\\n          metadata: { type: 'raw' },\\n          initialize: { type: 'raw' },\\n          dspLoop: { type: 'raw' },\\n          io: { type: 'raw' },\\n          globals: {\\n              type: 'proxy',\\n              value: proxyAsModuleWithBindings(rawModule, globalsBindings),\\n          },\\n      };\\n  };\\n  const createEngine = (code, additionalBindings) => {\\n      const rawModule = compileRawModule(code);\\n      const rawModuleWithNameMapping = proxyWithEngineNameMapping(rawModule, rawModule.metadata.compilation.variableNamesIndex);\\n      return proxyAsModuleWithBindings(rawModule, {\\n          ...createEngineBindings(rawModuleWithNameMapping),\\n          ...(additionalBindings || {}),\\n      });\\n  };\\n\\n  const readMetadata$1 = async (target, compiled) => {\\n      switch (target) {\\n          case 'assemblyscript':\\n              return readMetadata$2(compiled);\\n          case 'javascript':\\n              return createEngine(compiled).metadata;\\n      }\\n  };\\n\\n  const defaultSettingsForRun = (patchUrl) => {\\n      const rootUrl = urlDirName(patchUrl);\\n      return {\\n          messageHandler: (node, message) => index(node, message, { rootUrl }),\\n      };\\n  };\\n  const readMetadata = (compiledPatch) => {\\n      if (typeof compiledPatch === 'string') {\\n          return readMetadata$1('javascript', compiledPatch);\\n      }\\n      else {\\n          return readMetadata$1('assemblyscript', compiledPatch);\\n      }\\n  };\\n\\n  var run = async (audioContext, compiledPatch, settings) => {\\n      const { messageHandler } = settings;\\n      const webpdNode = new WebPdWorkletNode(audioContext);\\n      webpdNode.port.onmessage = (msg) => messageHandler(webpdNode, msg);\\n      if (typeof compiledPatch === 'string') {\\n          webpdNode.port.postMessage({\\n              type: 'code:JS',\\n              payload: {\\n                  jsCode: compiledPatch,\\n              },\\n          });\\n      }\\n      else {\\n          webpdNode.port.postMessage({\\n              type: 'code:WASM',\\n              payload: {\\n                  wasmBuffer: compiledPatch,\\n              },\\n          });\\n      }\\n      return webpdNode;\\n  };\\n\\n  exports.defaultSettingsForRun = defaultSettingsForRun;\\n  exports.initialize = initialize;\\n  exports.readMetadata = readMetadata;\\n  exports.run = run;\\n\\n  return exports;\\n\\n})({});\\n\";\n\nexport { WEBPD_RUNTIME_CODE as default };\n","import WEBPD_RUNTIME_CODE from '../assets/runtime.js.txt.js';\n\nconst WEBPD_RUNTIME_FILENAME = 'webpd-runtime.js';\nvar buildApp = (artefacts) => {\n    if (!artefacts.javascript && !artefacts.wasm) {\n        throw new Error(`Needs at least javascript or wasm to run`);\n    }\n    const compiledPatchFilename = artefacts.javascript\n        ? 'patch.js'\n        : 'patch.wasm';\n    const generatedApp = {\n        [WEBPD_RUNTIME_FILENAME]: WEBPD_RUNTIME_CODE,\n        [compiledPatchFilename]: artefacts.javascript\n            ? artefacts.javascript\n            : artefacts.wasm,\n        // prettier-ignore\n        'index.html': `\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>WebPd boilerplate</title>\n        <style>\n            #start {\n                display: none;\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n            #loading {\n                width: 100%;\n                height: 100%;\n                position: fixed;\n                top: 50%;\n                transform: translateY(-50%);\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>My Web Page</h1>\n        <div>For more info about usage (how to interact with the patch), you can open this HTML file in a code editor.</div>\n        <button id=\"start\"> Start </button>\n        <div id=\"loading\"> Loading ... </div>\n        <script src=\"${WEBPD_RUNTIME_FILENAME}\"></script>\n        <script>\n            // SUMMARY\n            // 1. WEB PAGE INITIALIZATION\n            // 2. SENDING MESSAGES FROM JAVASCRIPT TO THE PATCH\n            // 3. SENDING MESSAGES FROM THE PATCH TO JAVASCRIPT (coming soon ...)\n\n\n            // ------------- 1. WEB PAGE INITIALIZATION\n            const loadingDiv = document.querySelector('#loading')\n            const startButton = document.querySelector('#start')\n            const audioContext = new AudioContext()\n\n            let patch = null\n            let stream = null\n            let webpdNode = null\n\n            const initApp = async () => {\n                // Register the worklet\n                await WebPdRuntime.initialize(audioContext)\n\n                // Fetch the patch code\n                response = await fetch('${compiledPatchFilename}')\n                patch = await ${artefacts.javascript ?\n            'response.text()' : 'response.arrayBuffer()'}\n\n                // Comment this if you don't need audio input\n                stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n\n                // Hide loading and show start button\n                loadingDiv.style.display = 'none'\n                startButton.style.display = 'block'\n            }\n\n            const startApp = async () => {\n                // AudioContext needs to be resumed on click to protects users \n                // from being spammed with autoplay.\n                // See : https://github.com/WebAudio/web-audio-api/issues/345\n                if (audioContext.state === 'suspended') {\n                    audioContext.resume()\n                }\n\n                // Setup web audio graph\n                webpdNode = await WebPdRuntime.run(\n                    audioContext, \n                    patch, \n                    WebPdRuntime.defaultSettingsForRun('./${compiledPatchFilename}'),\n                )\n                webpdNode.connect(audioContext.destination)\n\n                // Comment this if you don't need audio input\n                const sourceNode = audioContext.createMediaStreamSource(stream)\n                sourceNode.connect(webpdNode)\n\n                // Hide the start button\n                startButton.style.display = 'none'\n            }\n\n            startButton.onclick = startApp\n\n            initApp().\n                then(() => {\n                    console.log('App initialized')\n                })\n\n            \n            // ------------- 2. SENDING MESSAGES FROM JAVASCRIPT TO THE PATCH\n            // Use the function sendMsgToWebPd to send a message from JavaScript to an object inside your patch.\n            // \n            // Parameters : \n            // - nodeId: the ID of the object you want to send a message to. \n            //          This ID is a string that has been assigned by WebPd at compilation.\n            //          You can find below the list of available IDs with hints to help you \n            //          identify the object you want to interact with.\n            // - portletId : the ID of the object portlet to which the message should be sent. \n            // - message : the message to send. This must be a list of strings and / or numbers.\n            // \n            // Examples :\n            // - sending a message to a bang node of ID 'n_0_1' :\n            //          sendMsgToWebPd('n_0_1', '0', ['bang'])\n            // - sending a message to a number object of ID 'n_0_2' :\n            //          sendMsgToWebPd('n_0_2', '0', [123])\n            // \n            const sendMsgToWebPd = (nodeId, portletId, message) => {\n                webpdNode.port.postMessage({\n                    type: 'io:messageReceiver',\n                    payload: {\n                        nodeId,\n                        portletId,\n                        message,\n                    },\n                })\n            }\n            \n            // Here is an index of objects IDs to which you can send messages, with hints so you can find the right ID.\n            // Note that by default only GUI objects (bangs, sliders, etc ...) are available.${artefacts.dspGraph\n            && artefacts.dspGraph.io\n            && Object.keys(artefacts.dspGraph.io.messageReceivers).length ?\n            Object.entries(artefacts.dspGraph.io.messageReceivers)\n                .map(([nodeId, { portletIds, metadata: _metadata }]) => portletIds.map(portletId => {\n                const metadata = _metadata;\n                if (!metadata) {\n                    return '';\n                }\n                else if (metadata.group === 'control' || metadata.group === 'control:float') {\n                    return `\n            //  - nodeId \"${nodeId}\" portletId \"${portletId}\"\n            //      * type \"${metadata.type}\"\n            //      * position ${JSON.stringify(metadata.position)}${metadata.label ? `\n            //      * label \"${metadata.label}\"` : ''}\n            `;\n                }\n                else if (metadata.group === 'send') {\n                    return `\n            //  - nodeId \"${nodeId}\" portletId \"${portletId}\"\n            //      * type \"send\"\n            //      * send \"${metadata.name}\"\n            `;\n                }\n                else {\n                    return '';\n                }\n            })).join('')\n            : `\n            // EMPTY (did you place a GUI object in your patch ?)\n`}\n\n\n            // ------------- 3. SENDING MESSAGES FROM THE PATCH TO JAVASCRIPT\n            // Coming soon ... \n\n        </script>\n    </body>\n</html>`,\n    };\n    return generatedApp;\n};\n\nexport { WEBPD_RUNTIME_FILENAME, buildApp as default };\n","import '../../WebPd_pd-parser/dist/parse.js';\nimport { CONTROL_TYPE } from '../../WebPd_pd-parser/dist/types.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst discoverGuiControls = (pdJson) => {\n    const rootPatch = pdJson.patches[pdJson.rootPatchId];\n    return {\n        controls: _discoverGuiControlsRecursive(pdJson, rootPatch),\n        comments: Object.values(pdJson.patches[pdJson.rootPatchId].nodes)\n            .filter((node) => node.type === 'text')\n            .map((node) => {\n            const comment = {\n                type: 'comment',\n                patch: rootPatch,\n                node,\n                text: node.args[0].toString(),\n            };\n            return comment;\n        }),\n    };\n};\nconst _discoverGuiControlsRecursive = (pdJson, patch, viewport = null) => {\n    if (viewport === null) {\n        viewport = {\n            topLeft: { x: -Infinity, y: -Infinity },\n            bottomRight: { x: Infinity, y: Infinity },\n        };\n    }\n    const controls = [];\n    Object.values(patch.nodes).forEach((node) => {\n        if (node.type === 'pd' && node.nodeClass === 'subpatch') {\n            const subpatch = pdJson.patches[node.patchId];\n            const nodeLayout = _assertNodeLayout(node.layout);\n            if (!subpatch.layout.graphOnParent) {\n                return;\n            }\n            const subpatchLayout = _assertPatchLayout(subpatch.layout);\n            // 1. we convert all coordinates to the subpatch coords system\n            const toSubpatchCoords = _makeTranslationTransform({ x: nodeLayout.x, y: nodeLayout.y }, { x: subpatchLayout.viewportX, y: subpatchLayout.viewportY });\n            const parentViewport = {\n                topLeft: toSubpatchCoords(viewport.topLeft),\n                bottomRight: toSubpatchCoords(viewport.bottomRight),\n            };\n            const topLeft = {\n                x: subpatchLayout.viewportX,\n                y: subpatchLayout.viewportY,\n            };\n            const subpatchViewport = {\n                topLeft,\n                bottomRight: _sumPoints(topLeft, {\n                    x: subpatchLayout.viewportWidth,\n                    y: subpatchLayout.viewportHeight,\n                }),\n            };\n            // 2. we compute the visible intersection in the subpatch coords system\n            // and call the function for the subpatch\n            const visibleSubpatchViewport = _computeRectanglesIntersection(parentViewport, subpatchViewport);\n            if (visibleSubpatchViewport === null) {\n                return;\n            }\n            const children = _discoverGuiControlsRecursive(pdJson, subpatch, visibleSubpatchViewport);\n            const control = {\n                type: 'container',\n                patch,\n                node,\n                children,\n            };\n            controls.push(control);\n            // 3. When we get ab actual control node, we see if it is inside the\n            // visible viewport (which was previously transformed to local coords).\n        }\n        else if (node.type in CONTROL_TYPE && node.nodeClass === 'control') {\n            const nodeLayout = _assertNodeLayout(node.layout);\n            if (!_isPointInsideRectangle({\n                x: nodeLayout.x,\n                y: nodeLayout.y,\n            }, viewport)) {\n                return;\n            }\n            const control = {\n                type: 'control',\n                patch,\n                node,\n            };\n            controls.push(control);\n        }\n    });\n    return controls;\n};\nconst traverseGuiControls = (controls, func) => {\n    controls.forEach((control) => {\n        if (control.type === 'container') {\n            traverseGuiControls(control.children, func);\n        }\n        else if (control.type === 'control') {\n            func(control);\n        }\n    });\n};\nconst _makeTranslationTransform = (fromPoint, toPoint) => {\n    const xOffset = toPoint.x - fromPoint.x;\n    const yOffset = toPoint.y - fromPoint.y;\n    return (fromPoint) => {\n        return {\n            x: fromPoint.x + xOffset,\n            y: fromPoint.y + yOffset,\n        };\n    };\n};\nconst _sumPoints = (p1, p2) => ({\n    x: p1.x + p2.x,\n    y: p1.y + p2.y,\n});\nconst _computeRectanglesIntersection = (r1, r2) => {\n    const topLeft = {\n        x: Math.max(r1.topLeft.x, r2.topLeft.x),\n        y: Math.max(r1.topLeft.y, r2.topLeft.y),\n    };\n    const bottomRight = {\n        x: Math.min(r1.bottomRight.x, r2.bottomRight.x),\n        y: Math.min(r1.bottomRight.y, r2.bottomRight.y),\n    };\n    if (bottomRight.x <= topLeft.x || bottomRight.y <= topLeft.y) {\n        return null;\n    }\n    else {\n        return { topLeft, bottomRight };\n    }\n};\nconst _isPointInsideRectangle = (p, r) => r.topLeft.x <= p.x &&\n    p.x <= r.bottomRight.x &&\n    r.topLeft.y <= p.y &&\n    p.y <= r.bottomRight.y;\nconst _assertNodeLayout = (layout) => {\n    if (!layout) {\n        throw new Error(`Missing node layout`);\n    }\n    const x = layout.x;\n    const y = layout.y;\n    if (typeof x !== 'number' || typeof y !== 'number') {\n        throw new Error(`Missing node layout attributes`);\n    }\n    return {\n        x,\n        y,\n    };\n};\nconst _assertPatchLayout = (layout) => {\n    if (!layout) {\n        throw new Error(`Missing patch layout`);\n    }\n    const viewportX = layout.viewportX;\n    const viewportY = layout.viewportY;\n    const viewportWidth = layout.viewportWidth;\n    const viewportHeight = layout.viewportHeight;\n    if (typeof viewportX !== 'number' ||\n        typeof viewportY !== 'number' ||\n        typeof viewportWidth !== 'number' ||\n        typeof viewportHeight !== 'number') {\n        debugger;\n        throw new Error(`Missing patch layout attributes`);\n    }\n    return {\n        viewportX,\n        viewportY,\n        viewportWidth,\n        viewportHeight,\n    };\n};\n\nexport { _computeRectanglesIntersection, _discoverGuiControlsRecursive, _isPointInsideRectangle, _makeTranslationTransform, discoverGuiControls, traverseGuiControls };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** Regular expressions to deal with dollar-args */\nconst DOLLAR_VAR_REGEXP = /\\$(\\d+)/;\nconst resolvePatch = (pd, patchId) => {\n    const patch = pd.patches[patchId];\n    if (!patch) {\n        throw new Error(`Patch ${patchId} not found`);\n    }\n    return patch;\n};\nconst resolvePdNode = (patch, nodeId) => {\n    const pdNode = patch.nodes[nodeId];\n    if (!pdNode) {\n        throw new Error(`Pd node ${nodeId} not found in patch ${patch.id}`);\n    }\n    return pdNode;\n};\nconst resolveNodeType = (nodeBuilders, nodeType) => {\n    const nodeBuilder = nodeBuilders[nodeType];\n    if (!nodeBuilder) {\n        return null;\n    }\n    if (nodeBuilder.aliasTo) {\n        return resolveNodeType(nodeBuilders, nodeBuilder.aliasTo);\n    }\n    else {\n        return { nodeBuilder: nodeBuilder, nodeType };\n    }\n};\n/**\n * Takes an object string arg which might contain dollars, and returns the resolved version.\n * e.g. : [table $0-ARRAY] inside a patch with ID 1887 would resolve to [table 1887-ARRAY]\n */\nconst resolveDollarArg = (arg, patch) => {\n    // Since we have string patch ids and Pd uses int, we parse\n    // patch id back to int. This is useful for example so that\n    // [float $0] would work.\n    const patchIdInt = parseInt(patch.id);\n    if (isNaN(patchIdInt)) {\n        throw new Error(`Invalid patch id`);\n    }\n    const patchArgs = [patchIdInt, ...patch.args];\n    const dollarVarRegex = new RegExp(DOLLAR_VAR_REGEXP, 'g');\n    let matchDollar;\n    while ((matchDollar = dollarVarRegex.exec(arg))) {\n        const index = parseInt(matchDollar[1], 10);\n        const isWithinRange = 0 <= index && index < patchArgs.length;\n        if (matchDollar[0] === arg) {\n            return isWithinRange ? patchArgs[index] : undefined;\n        }\n        else {\n            if (isWithinRange) {\n                arg = arg.replace(matchDollar[0], patchArgs[index].toString());\n            }\n        }\n    }\n    return arg;\n};\nconst resolveArrayDollarArgs = (rootPatch, args) => {\n    const name = resolveDollarArg(args[0], rootPatch);\n    const size = typeof args[1] === 'string'\n        ? resolveDollarArg(args[1], rootPatch)\n        : args[1];\n    return [\n        (name === undefined ? '' : name).toString(),\n        size === undefined ? 0 : size,\n        args[2],\n    ];\n};\nconst resolvePdNodeDollarArgs = (rootPatch, args) => args.map((arg) => typeof arg === 'string' ? resolveDollarArg(arg, rootPatch) : arg);\n\nexport { resolveArrayDollarArgs, resolveDollarArg, resolveNodeType, resolvePatch, resolvePdNode, resolvePdNodeDollarArgs };\n","import { resolveArrayDollarArgs, resolvePatch, resolveNodeType, resolvePdNodeDollarArgs } from './compile-helpers.js';\n\n/**\n * Goes through a pd object, resolves and instantiates abstractions, turning\n * them into standard subpatches.\n * @returns A new PdJson.Pd object, which contains all patches and arrays\n * from the resolved abstraction as well as those from the pd object passed as argument.\n * The second value returned is the main root patch to be used for further processing.\n */\nvar instantiateAbstractions = async (pd, nodeBuilders, abstractionLoader) => {\n    const [namemap, pdWithReassignedIds] = _reassignUniquePdGlobalIds({ patches: {}, arrays: {}, rootPatchId: pd.rootPatchId }, pd);\n    const compilation = {\n        pd: pdWithReassignedIds,\n        nodeBuilders,\n        abstractions: {},\n        errors: {},\n        warnings: {},\n        abstractionLoader,\n    };\n    const rootPatch = _resolveRootPatch(compilation.pd);\n    Object.values(compilation.pd.arrays).forEach((array) => (array.args = resolveArrayDollarArgs(rootPatch, array.args)));\n    await _instantiateAbstractionsRecurs(compilation, rootPatch, rootPatch, namemap);\n    const hasErrors = Object.keys(compilation.errors).length;\n    if (hasErrors) {\n        return {\n            status: 1,\n            pd: compilation.pd,\n            errors: compilation.errors,\n            warnings: compilation.warnings,\n        };\n    }\n    else {\n        return {\n            status: 0,\n            pd: compilation.pd,\n            abstractions: compilation.abstractions,\n            warnings: compilation.warnings,\n        };\n    }\n};\nconst _instantiateAbstractionsRecurs = async (compilation, rootPatch, patch, namemap) => {\n    const { pd, abstractionLoader, errors, warnings } = compilation;\n    patch.nodes = { ...patch.nodes };\n    for (let pdNode of Object.values(patch.nodes)) {\n        if (errors.hasOwnProperty(pdNode.type)) {\n            continue;\n        }\n        // 1. If subpatch, resolve its `patchId` according to the namemap,\n        // and continue recursively by entering inside the subpatch\n        if (pdNode.nodeClass === 'subpatch') {\n            pdNode = patch.nodes[pdNode.id] = {\n                ...pdNode,\n                patchId: _resolveIdNamemap(namemap.patches, pdNode.patchId),\n            };\n            await _instantiateAbstractionsRecurs(compilation, rootPatch, resolvePatch(pd, pdNode.patchId), namemap);\n            continue;\n            // 2. If array, resolve its `arrayId` according to the namemap.\n        }\n        else if (pdNode.nodeClass === 'array') {\n            pdNode = patch.nodes[pdNode.id] = {\n                ...pdNode,\n                arrayId: _resolveIdNamemap(namemap.arrays, pdNode.arrayId),\n            };\n            continue;\n        }\n        // 3. If normal node, whose type resolves from the `nodeBuilders`,\n        // we do nothing.\n        if (resolveNodeType(compilation.nodeBuilders, pdNode.type) !== null) {\n            continue;\n        }\n        // 4. Otherwise, if node type could not be resolved, we load as an abstraction.\n        const resolutionResult = await _resolveAbstraction(compilation, pdNode.type, abstractionLoader);\n        if (resolutionResult.parsingWarnings) {\n            warnings[pdNode.type] = resolutionResult.parsingWarnings;\n        }\n        if (resolutionResult.status === 1) {\n            const { status, parsingWarnings, ...abstractionErrors } = resolutionResult;\n            errors[pdNode.type] = abstractionErrors;\n            continue;\n        }\n        // Since the abstraction is loaded as an independant PdJson.Pd object,\n        // the global ids of its patches and arrays, might clash with the ids\n        // in our `pd` object. Therefore, we need to reassign these ids.\n        const [newNamemap, abstractionInstance] = _reassignUniquePdGlobalIds(pd, resolutionResult.pd);\n        const newRootPatch = _resolveRootPatch(abstractionInstance);\n        // Replace the abstraction node by a subpatch node, so that the abstraction\n        // can be dealt with the same way a subpatch is handled.\n        pdNode = patch.nodes[pdNode.id] = {\n            ...pdNode,\n            args: resolvePdNodeDollarArgs(rootPatch, pdNode.args),\n            nodeClass: 'subpatch',\n            patchId: newRootPatch.id,\n            type: 'pd',\n        };\n        // Prepare the new root patch, resolve arrays args, because it won't be done\n        // further down in the code.\n        newRootPatch.args = pdNode.args;\n        Object.values(abstractionInstance.arrays).forEach((array) => (array.args = resolveArrayDollarArgs(newRootPatch, array.args)));\n        // Finally, combine the abstraction patches and arrays with the ones in `pd`.\n        // At this stage ids should not collide, and references saved in `namemap`,\n        // so we can recurse to deal with nodes inside the abstraction.\n        pd.patches = {\n            ...pd.patches,\n            ...abstractionInstance.patches,\n        };\n        pd.arrays = {\n            ...pd.arrays,\n            ...abstractionInstance.arrays,\n        };\n        await _instantiateAbstractionsRecurs(compilation, newRootPatch, newRootPatch, newNamemap);\n    }\n};\nconst _resolveRootPatch = (pd) => {\n    const rootPatch = pd.patches[pd.rootPatchId];\n    if (!rootPatch) {\n        throw new Error(`Could not resolve root patch`);\n    }\n    return rootPatch;\n};\nconst _resolveAbstraction = async (compilation, nodeType, abstractionLoader) => {\n    if (!compilation.abstractions[nodeType]) {\n        const result = await abstractionLoader(nodeType);\n        if (result.status === 0) {\n            compilation.abstractions[nodeType] = result.pd;\n        }\n        return result;\n    }\n    return {\n        status: 0,\n        pd: compilation.abstractions[nodeType],\n    };\n};\nconst _resolveIdNamemap = (map, objectId) => {\n    const newObjectId = map.get(objectId);\n    if (newObjectId === undefined) {\n        throw new Error(`Could not resolve ${objectId}`);\n    }\n    return newObjectId;\n};\nconst _reassignUniquePdGlobalIds = (pdToMergeInto, pdToReassign) => {\n    const pdWithReassignedIds = {\n        patches: {},\n        arrays: {},\n        rootPatchId: pdToReassign.rootPatchId,\n    };\n    const namemap = {\n        patches: new Map(),\n        arrays: new Map(),\n    };\n    let patchesIds = Object.keys(pdToMergeInto.patches);\n    patchesIds = patchesIds.length ? patchesIds : ['-1'];\n    let arraysIds = Object.keys(pdToMergeInto.arrays);\n    arraysIds = arraysIds.length ? arraysIds : ['-1'];\n    let patchesIdCounter = Math.max(...patchesIds.map((id) => parseInt(id))) + 1;\n    let arraysIdCounter = Math.max(...arraysIds.map((id) => parseInt(id))) + 1;\n    Object.entries(pdToReassign.patches).forEach(([oldId, patch]) => {\n        const newId = `${patchesIdCounter++}`;\n        namemap.patches.set(oldId, newId);\n        pdWithReassignedIds.patches[newId] = {\n            ...patch,\n            id: newId,\n        };\n    });\n    Object.entries(pdToReassign.arrays).forEach(([oldId, array]) => {\n        const newId = `${arraysIdCounter++}`;\n        namemap.arrays.set(oldId, newId);\n        pdWithReassignedIds.arrays[newId] = {\n            ...array,\n            id: newId,\n        };\n    });\n    pdWithReassignedIds.rootPatchId = _resolveIdNamemap(namemap.patches, pdWithReassignedIds.rootPatchId);\n    return [namemap, pdWithReassignedIds];\n};\n\nexport { instantiateAbstractions as default };\n","const emptyBuilder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {},\n        outlets: {},\n    }),\n};\nconst nodeBuilders = {\n    pd: emptyBuilder,\n    inlet: emptyBuilder,\n    outlet: emptyBuilder,\n    'inlet~': emptyBuilder,\n    'outlet~': emptyBuilder,\n};\n\nexport { nodeBuilders };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst assertNumber = (value) => {\n    if (typeof value !== 'number') {\n        throw new ValidationError(`${value} is not a number`);\n    }\n    return value;\n};\nconst assertString = (value) => {\n    if (typeof value !== 'string') {\n        throw new ValidationError(`${value} is not a string`);\n    }\n    return value;\n};\nconst assertOptionalNumber = (value) => {\n    return value !== undefined ? assertNumber(value) : undefined;\n};\nconst assertOptionalString = (value) => {\n    return value !== undefined ? assertString(value) : undefined;\n};\nclass ValidationError extends Error {\n}\n\nexport { ValidationError, assertNumber, assertOptionalNumber, assertOptionalString, assertString };\n","import { ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertNumber } from '../validation.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertNumber(pdNode.args[0]),\n    }),\n    build: (nodeArgs) => ({\n        inlets: mapArray(countTo(nodeArgs.channelCount), (channel) => [`${channel}`, { type: 'signal', id: `${channel}` }]),\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        isPureFunction: true,\n        isDspInline: true,\n        alphaName: '_mixer_t',\n    },\n    dsp: ({ node, ins }) => ast `${Object.keys(node.inlets)\n        .map((inletId) => ins[inletId])\n        .join(' + ')}`\n};\n\nexport { builder, nodeImplementation };\n","import { AnonFunc, Var } from '../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// prettier-ignore\nconst coldFloatInlet = (storageName, msg) => AnonFunc([Var(msg.Message, `m`)]) `\n    if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n        ${storageName} = ${msg.readFloatToken}(m, 0)\n        return\n    }\n`;\n// prettier-ignore\nconst coldStringInlet = (storageName, msg) => AnonFunc([Var(msg.Message, `m`)]) `\n    if (${msg.isMatching}(m, [${msg.STRING_TOKEN}])) {\n        ${storageName} = ${msg.readStringToken}(m, 0)\n        return\n    }\n`;\n// prettier-ignore\nconst coldFloatInletWithSetter = (setterName, state, msg) => AnonFunc([Var(msg.Message, `m`)]) `\n    if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n        ${setterName}(${state}, ${msg.readFloatToken}(m, 0))\n        return\n    }\n`;\n\nexport { coldFloatInlet, coldFloatInletWithSetter, coldStringInlet };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInlet } from '../standard-message-receivers.js';\nimport { Class, Var, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        isPureFunction: true,\n        isDspInline: true,\n        alphaName: 'sig_t',\n    },\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `currentValue`, args.initValue)\n    ]),\n    dsp: ({ state }) => ast `${state}.currentValue`,\n    messageReceivers: ({ state }, { msg }) => ({\n        '0': coldFloatInlet(`${state}.currentValue`, msg),\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    messageReceivers: ({ snds }, { msg }) => ({\n        // prettier-ignore\n        '0': AnonFunc([\n            Var(msg.Message, `m`)\n        ]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${snds.$0}(m)\n                return\n            } else {\n                ${snds.$1}(m)\n                return\n            }\n        `,\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { resolveNodeType, resolvePatch, resolvePdNodeDollarArgs, resolvePdNode } from './compile-helpers.js';\nimport instantiateAbstractions from './instantiate-abstractions.js';\nimport { nodeBuilders } from '../nodes/nodes/subpatch.js';\nimport { builder } from '../nodes/nodes/_mixer~.js';\nimport { builder as builder$1 } from '../nodes/nodes/sig~.js';\nimport { builder as builder$2 } from '../nodes/nodes/_routemsg.js';\nimport { getNode, getOutlet } from '../../../WebPd_compiler/dist/src/dsp-graph/getters.js';\nimport { nodeDefaults } from '../../../WebPd_compiler/dist/src/dsp-graph/graph-helpers.js';\nimport '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { deleteNode, connect, addNode } from '../../../WebPd_compiler/dist/src/dsp-graph/mutators.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst IMPLICIT_NODE_TYPES = {\n    MIXER: '_mixer~',\n    ROUTE_MSG: '_routemsg',\n    CONSTANT_SIGNAL: 'sig~',\n};\nvar IdNamespaces;\n(function (IdNamespaces) {\n    IdNamespaces[\"PD\"] = \"n\";\n    /** Node added for enabling translation from pd to dp graph  */\n    IdNamespaces[\"IMPLICIT_NODE\"] = \"m\";\n})(IdNamespaces || (IdNamespaces = {}));\nconst buildGraphNodeId = (patchId, nodeLocalId) => {\n    return `${IdNamespaces.PD}_${patchId}_${nodeLocalId}`;\n};\nconst buildGraphPortletId = (pdPortletId) => pdPortletId.toString(10);\n/** Node id for nodes added while converting from PdJson */\nconst buildImplicitGraphNodeId = (sink, nodeType) => {\n    nodeType = nodeType.replaceAll(/[^a-zA-Z0-9_]/g, '');\n    return `${IdNamespaces.IMPLICIT_NODE}_${sink.nodeId}_${sink.portletId}_${nodeType}`;\n};\n// ================================== MAIN ================================== //\nvar toDspGraph = async (pd, nodeBuilders$1, abstractionLoader = async (nodeType) => ({\n    status: 1,\n    unknownNodeType: nodeType,\n})) => {\n    const abstractionsResult = await instantiateAbstractions(pd, nodeBuilders$1, abstractionLoader);\n    const hasWarnings = Object.keys(abstractionsResult.warnings);\n    if (abstractionsResult.status === 1) {\n        return {\n            status: 1,\n            abstractionsLoadingErrors: abstractionsResult.errors,\n            abstractionsLoadingWarnings: hasWarnings\n                ? abstractionsResult.warnings\n                : undefined,\n        };\n    }\n    const { pd: pdWithResolvedAbstractions } = abstractionsResult;\n    const compilation = {\n        pd: pdWithResolvedAbstractions,\n        nodeBuilders: nodeBuilders$1,\n        graph: {},\n    };\n    const rootPatch = _resolveRootPatch(pdWithResolvedAbstractions);\n    _traversePatches(compilation, [rootPatch], _buildNodes);\n    _buildConnections(compilation, [rootPatch]);\n    Object.values(compilation.graph).forEach((node) => {\n        if (Object.keys(nodeBuilders).includes(node.type)) {\n            deleteNode(compilation.graph, node.id);\n        }\n    });\n    const arrays = Object.values(compilation.pd.arrays).reduce((arrays, array) => {\n        arrays[array.args[0]] = array.data\n            ? new Float32Array(array.data)\n            : new Float32Array(array.args[1]);\n        return arrays;\n    }, {});\n    return {\n        status: 0,\n        graph: compilation.graph,\n        pd: compilation.pd,\n        arrays,\n        abstractionsLoadingWarnings: hasWarnings\n            ? abstractionsResult.warnings\n            : undefined,\n    };\n};\n// ================================== DSP GRAPH NODES ================================== //\nconst _buildNodes = (compilation, patchPath) => {\n    const patch = _currentPatch(patchPath);\n    const rootPatch = _rootPatch(patchPath);\n    Object.values(patch.nodes).forEach((pdNode) => {\n        const nodeId = buildGraphNodeId(patch.id, pdNode.id);\n        _buildNode(compilation, rootPatch, patch, pdNode, nodeId);\n    });\n};\nconst _buildNode = (compilation, rootPatch, patch, pdNode, nodeId) => {\n    const nodeTypeResolution = resolveNodeType(compilation.nodeBuilders, pdNode.type);\n    if (nodeTypeResolution === null) {\n        throw new Error(`unknown node type ${pdNode.type}`);\n    }\n    const { nodeBuilder, nodeType } = nodeTypeResolution;\n    if (nodeBuilder.isNoop === true) {\n        return null;\n    }\n    if (!nodeBuilder.skipDollarArgsResolution) {\n        pdNode = {\n            ...pdNode,\n            args: resolvePdNodeDollarArgs(rootPatch, pdNode.args),\n        };\n    }\n    const nodeArgs = nodeBuilder.translateArgs(pdNode, patch, compilation.pd);\n    const partialNode = nodeBuilder.build(nodeArgs);\n    return addNode(compilation.graph, {\n        ...nodeDefaults(nodeId, nodeType),\n        args: nodeArgs,\n        ...partialNode,\n    });\n};\n// ==================================  DSP GRAPH CONNECTIONS ================================== //\nconst _buildConnections = (compilation, rootPatchPath) => {\n    const { graph } = compilation;\n    let pdConnections = [];\n    // 1. Get recursively through the patches and collect all pd connections\n    // in one single array. In the process, we also resolve subpatch's portlets.\n    _traversePatches(compilation, rootPatchPath, (compilation, patchPath) => {\n        _resolveSubpatches(compilation, patchPath, pdConnections);\n    });\n    // 2. Convert connections from PdJson to DspGraph, and group them by source\n    const groupedGraphConnections = _groupAndResolveGraphConnections(compilation, pdConnections);\n    // 3. Finally, we iterate over the grouped sources and build the graph connections.\n    Object.values(graph).forEach((node) => {\n        Object.values(node.inlets).forEach((inlet) => {\n            const graphSink = {\n                nodeId: node.id,\n                portletId: inlet.id,\n            };\n            const graphSources = (groupedGraphConnections[node.id]\n                ? groupedGraphConnections[node.id][inlet.id]\n                : undefined) || { signalSources: [], messageSources: [] };\n            if (inlet.type === 'signal') {\n                const { nodeBuilder: sinkNodeBuilder } = resolveNodeType(compilation.nodeBuilders, node.type);\n                const messageToSignalConfig = sinkNodeBuilder.configureMessageToSignalConnection\n                    ? sinkNodeBuilder.configureMessageToSignalConnection(graphSink.portletId, node.args)\n                    : undefined;\n                _buildConnectionToSignalSink(graph, graphSources.signalSources, graphSources.messageSources, graphSink, messageToSignalConfig);\n            }\n            else {\n                if (graphSources.signalSources.length !== 0) {\n                    throw new Error(`Unexpected signal connection to node id ${graphSink.nodeId}, inlet ${graphSink.portletId}`);\n                }\n                _buildConnectionToMessageSink(graph, graphSources.messageSources, graphSink);\n            }\n        });\n    });\n};\nconst _buildConnectionToMessageSink = (graph, sources, sink) => sources.forEach((source) => {\n    connect(graph, source, sink);\n});\n/**\n * Build a graph connection. Add nodes that are implicit in Pd, and that we want explicitely\n * declared in our graph.\n *\n * Implicit Pd behavior made explicit by this compilation :\n * - Multiple DSP inputs mixed into one\n *\n * ```\n * [ signal1~ ]   [ signal2~ ]\n *           \\      /\n *         [ _mixer~ ]\n *           |\n *         [ someNode~ ]\n *\n * ```\n *\n * - When messages to DSP input, automatically turned into a signal\n *\n * ```\n *    [ sig~ ]\n *      |\n *    [  someNode~ ]\n * ```\n *\n * - Re-route messages from signal inlet to a message inlet\n *\n * ```\n *    [ message1 ]\n *      |\n *    [ _routemsg ]     ( on the left inlet float messages, on the the right inlet, the rest. )\n *      |       \\\n *    [ sig~ ]   |\n *      |        |\n *    [  someNode~ ]\n * ```\n *\n * - Initial value of DSP input\n *\n *\n */\nconst _buildConnectionToSignalSink = (graph, signalSources, messageSources, sink, messageToSignalConfig) => {\n    let implicitSigNode = null;\n    // 1. SIGNAL SOURCES\n    // 1.1. if single signal source, we just put a normal connection\n    if (signalSources.length === 1) {\n        connect(graph, signalSources[0], sink);\n        // 1.2. if several signal sources, we put a mixer node in between.\n    }\n    else if (signalSources.length > 1) {\n        const mixerNodeArgs = {\n            channelCount: signalSources.length,\n        };\n        const implicitMixerNode = addNode(graph, {\n            ...nodeDefaults(buildImplicitGraphNodeId(sink, IMPLICIT_NODE_TYPES.MIXER), IMPLICIT_NODE_TYPES.MIXER),\n            args: mixerNodeArgs,\n            ...builder.build(mixerNodeArgs),\n        });\n        connect(graph, {\n            nodeId: implicitMixerNode.id,\n            portletId: '0',\n        }, sink);\n        signalSources.forEach((source, i) => {\n            connect(graph, source, {\n                nodeId: implicitMixerNode.id,\n                portletId: buildGraphPortletId(i),\n            });\n        });\n        // 1.3. if no signal source, we need to simulate one by plugging a sig node to the inlet\n    }\n    else {\n        const sigNodeArgs = {\n            initValue: messageToSignalConfig\n                ? messageToSignalConfig.initialSignalValue\n                : 0,\n        };\n        implicitSigNode = addNode(graph, {\n            ...nodeDefaults(buildImplicitGraphNodeId(sink, IMPLICIT_NODE_TYPES.CONSTANT_SIGNAL), IMPLICIT_NODE_TYPES.CONSTANT_SIGNAL),\n            args: sigNodeArgs,\n            ...builder$1.build(sigNodeArgs),\n        });\n        connect(graph, {\n            nodeId: implicitSigNode.id,\n            portletId: '0',\n        }, sink);\n    }\n    // 2. MESSAGE SOURCES\n    // If message sources, we split the incoming message flow in 2 using `_routemsg`.\n    // - outlet 0 : float messages are proxied to the sig~ if present, so they set its value\n    // - outlet 1 : other messages must be proxied to a different sink (cause here we are dealing\n    // with a signal sink which can't accept messages).\n    if (messageSources.length) {\n        const routeMsgArgs = {};\n        const implicitRouteMsgNode = addNode(graph, {\n            ...nodeDefaults(buildImplicitGraphNodeId(sink, IMPLICIT_NODE_TYPES.ROUTE_MSG), IMPLICIT_NODE_TYPES.ROUTE_MSG),\n            args: routeMsgArgs,\n            ...builder$2.build(routeMsgArgs),\n        });\n        let isMsgSortNodeConnected = false;\n        if (implicitSigNode) {\n            connect(graph, { nodeId: implicitRouteMsgNode.id, portletId: '0' }, { nodeId: implicitSigNode.id, portletId: '0' });\n            isMsgSortNodeConnected = true;\n        }\n        if (messageToSignalConfig &&\n            messageToSignalConfig.reroutedMessageInletId !== undefined) {\n            connect(graph, { nodeId: implicitRouteMsgNode.id, portletId: '1' }, {\n                nodeId: sink.nodeId,\n                portletId: messageToSignalConfig.reroutedMessageInletId,\n            });\n            isMsgSortNodeConnected = true;\n        }\n        if (isMsgSortNodeConnected) {\n            messageSources.forEach((graphMessageSource) => {\n                connect(graph, graphMessageSource, {\n                    nodeId: implicitRouteMsgNode.id,\n                    portletId: '0',\n                });\n            });\n        }\n    }\n};\n/**\n * Take an array of global PdJson connections and :\n * - group them by sink\n * - convert them to graph connections\n * - split them into signal and message connections\n */\nconst _groupAndResolveGraphConnections = (compilation, pdConnections) => {\n    const { graph } = compilation;\n    const groupedGraphConnections = {};\n    pdConnections.forEach((connection) => {\n        const [_, pdGlobSink] = connection;\n        // Resolve the graph sink corresponding with the connection,\n        // if already handled, we move on.\n        const [patchPath, pdSink] = pdGlobSink;\n        const graphNodeId = buildGraphNodeId(_currentPatch(patchPath).id, pdSink.nodeId);\n        groupedGraphConnections[graphNodeId] =\n            groupedGraphConnections[graphNodeId] || {};\n        const graphPortletId = buildGraphPortletId(pdSink.portletId);\n        if (groupedGraphConnections[graphNodeId][graphPortletId]) {\n            return;\n        }\n        // Collect all sources for `pdGlobSink`\n        let pdGlobSources = [];\n        pdConnections.forEach((connection) => {\n            const [pdGlobSource, otherPdGlobSink] = connection;\n            if (_arePdGlobEndpointsEqual(pdGlobSink, otherPdGlobSink)) {\n                pdGlobSources.push(pdGlobSource);\n            }\n        });\n        // For each source, resolve it to a graph source, and split between\n        // signal and message sources.\n        const graphSignalSources = [];\n        const graphMessageSources = [];\n        pdGlobSources.forEach(([sourcePatchPath, pdSource]) => {\n            const sourcePatch = _currentPatch(sourcePatchPath);\n            const graphSource = {\n                nodeId: buildGraphNodeId(sourcePatch.id, pdSource.nodeId),\n                portletId: buildGraphPortletId(pdSource.portletId),\n            };\n            const sourceNode = getNode(graph, graphSource.nodeId);\n            const outlet = getOutlet(sourceNode, graphSource.portletId);\n            if (outlet.type === 'signal') {\n                graphSignalSources.push(graphSource);\n            }\n            else {\n                graphMessageSources.push(graphSource);\n            }\n        });\n        groupedGraphConnections[graphNodeId][graphPortletId] = {\n            signalSources: graphSignalSources,\n            messageSources: graphMessageSources,\n        };\n    });\n    return groupedGraphConnections;\n};\n/**\n * Traverse the graph recursively and collect all connections in a flat list,\n * by navigating inside and outside subpatches through their portlets.\n */\nconst _resolveSubpatches = (compilation, patchPath, pdConnections) => {\n    const { graph } = compilation;\n    const patch = _currentPatch(patchPath);\n    // First we remove connections for pd nodes that have been removed\n    // from the graph.\n    const connections = patch.connections.filter(({ source, sink }) => {\n        const sourceNodeId = buildGraphNodeId(patch.id, source.nodeId);\n        const sinkNodeId = buildGraphNodeId(patch.id, sink.nodeId);\n        if (graph[sourceNodeId] && graph[sinkNodeId]) {\n            return true;\n        }\n        return false;\n    });\n    connections.forEach(({ source, sink }) => {\n        const resolvedSources = _resolveSource(compilation, [patchPath, source]);\n        const resolvedSinks = _resolveSink(compilation, patchPath, sink);\n        resolvedSources.forEach((pdGSource) => resolvedSinks.forEach((pdGSink) => {\n            const alreadyExists = pdConnections.some(([otherPdGSource, otherPdGSink]) => {\n                return (_arePdGlobEndpointsEqual(pdGSource, otherPdGSource) && _arePdGlobEndpointsEqual(pdGSink, otherPdGSink));\n            });\n            if (!alreadyExists) {\n                pdConnections.push([pdGSource, pdGSink]);\n            }\n        }));\n    });\n};\nconst _resolveSource = (compilation, [patchPath, source]) => {\n    const { pd } = compilation;\n    const patch = _currentPatch(patchPath);\n    const pdSourceNode = resolvePdNode(patch, source.nodeId);\n    // 1. If inlet, we lookup in parent patch for the sources of the\n    // corresponding inlets, then continue the resolution recursively.\n    if (pdSourceNode.type === 'inlet' || pdSourceNode.type === 'inlet~') {\n        const parentPatch = _parentPatch(patchPath);\n        // When we load an abstraction as main patch, it will have\n        // inlets / outlets which are not connected\n        if (!parentPatch) {\n            return [];\n        }\n        const subpatchNode = _resolveSubpatchNode(parentPatch, patch.id);\n        const subpatchNodePortletId = _resolveSubpatchPortletId(patch.inlets, pdSourceNode.id);\n        return parentPatch.connections\n            .filter(({ sink }) => sink.nodeId === subpatchNode.id &&\n            sink.portletId === subpatchNodePortletId)\n            .flatMap(({ source }) => _resolveSource(compilation, [\n            [...patchPath.slice(0, -1)],\n            source,\n        ]));\n        // 2. If subpatch, we enter the subpatch and lookup for the\n        // sources of the corresponding outlet, then continue the\n        // resolution recursively.\n    }\n    else if (pdSourceNode.nodeClass === 'subpatch') {\n        const subpatch = resolvePatch(pd, pdSourceNode.patchId);\n        const outletPdNodeId = _resolveSubpatchPortletNode(subpatch.outlets, source.portletId);\n        return subpatch.connections\n            .filter(({ sink }) => sink.nodeId === outletPdNodeId && sink.portletId === 0)\n            .flatMap(({ source }) => _resolveSource(compilation, [[...patchPath, subpatch], source]));\n        // 3. This is the general case for all other nodes which are not\n        // subpatch related.\n    }\n    else {\n        return [[patchPath, source]];\n    }\n};\nconst _resolveSink = (compilation, patchPath, pdSink) => {\n    const { pd } = compilation;\n    const patch = _currentPatch(patchPath);\n    const pdSinkNode = resolvePdNode(patch, pdSink.nodeId);\n    // 1. If outlet, we lookup in parent patch for the sinks of the\n    // corresponding outlets, then continue the resolution recursively.\n    if (pdSinkNode.type === 'outlet' || pdSinkNode.type === 'outlet~') {\n        const parentPatch = _parentPatch(patchPath);\n        // When we load an abstraction as main patch, it will have\n        // inlets / outlets which are not connected\n        if (!parentPatch) {\n            return [];\n        }\n        const subpatchNode = _resolveSubpatchNode(parentPatch, patch.id);\n        const subpatchNodePortletId = _resolveSubpatchPortletId(patch.outlets, pdSinkNode.id);\n        return parentPatch.connections\n            .filter(({ source }) => source.nodeId === subpatchNode.id &&\n            source.portletId === subpatchNodePortletId)\n            .flatMap(({ sink }) => _resolveSink(compilation, [...patchPath.slice(0, -1)], sink));\n        // 2. If subpatch, we enter the subpatch and lookup for the\n        // sinks of the corresponding inlet, then continue the\n        // resolution recursively.\n    }\n    else if (pdSinkNode.nodeClass === 'subpatch') {\n        const subpatch = resolvePatch(pd, pdSinkNode.patchId);\n        const inletPdNodeId = _resolveSubpatchPortletNode(subpatch.inlets, pdSink.portletId);\n        return subpatch.connections\n            .filter(({ source }) => source.nodeId === inletPdNodeId && source.portletId === 0)\n            .flatMap(({ sink }) => _resolveSink(compilation, [...patchPath, subpatch], sink));\n        // 3. This is the general case for all other nodes which are not\n        // subpatch related.\n    }\n    else {\n        return [[patchPath, pdSink]];\n    }\n};\n// ================================== HELPERS ================================== //\nconst _traversePatches = (compilation, patchPath, func) => {\n    const patch = _currentPatch(patchPath);\n    func(compilation, patchPath);\n    Object.values(patch.nodes).forEach((pdNode) => {\n        if (pdNode.nodeClass === 'subpatch') {\n            const subpatch = resolvePatch(compilation.pd, pdNode.patchId);\n            _traversePatches(compilation, [...patchPath, subpatch], func);\n        }\n    });\n};\nconst _currentPatch = (patchPath) => {\n    const patch = patchPath.slice(-1)[0];\n    if (!patch) {\n        throw new Error(`patchPath empty !`);\n    }\n    return patch;\n};\nconst _parentPatch = (patchPath) => {\n    if (patchPath.length < 2) {\n        return null;\n    }\n    return patchPath.slice(-2)[0];\n};\nconst _rootPatch = (patchPath) => {\n    const firstRootPatch = patchPath\n        .slice(0)\n        .reverse()\n        .find((patch) => patch.isRoot);\n    if (!firstRootPatch) {\n        throw new Error(`Could not resolve root patch from path`);\n    }\n    return firstRootPatch;\n};\nconst _resolveRootPatch = (pd) => {\n    const rootPatch = pd.patches[pd.rootPatchId];\n    if (!rootPatch) {\n        throw new Error(`Could not resolve root patch`);\n    }\n    return rootPatch;\n};\nconst _resolveSubpatchPortletNode = (portletNodeIds, portletId) => {\n    const pdNodeId = portletNodeIds[portletId];\n    if (pdNodeId === undefined) {\n        throw new Error(`Portlet ${portletId} is undefined in patch.outlets/patch.inlets`);\n    }\n    return pdNodeId;\n};\nconst _resolveSubpatchPortletId = (portletNodeIds, pdNodeId) => portletNodeIds.findIndex((portletId) => portletId === pdNodeId);\nconst _resolveSubpatchNode = (patch, patchId) => {\n    const subpatchNode = Object.values(patch.nodes).find((pdNode) => pdNode.nodeClass === 'subpatch' && pdNode.patchId === patchId);\n    if (subpatchNode === undefined) {\n        throw new Error(`could not find subpatch node with patchId=${patchId} inside patch ${patch.id}`);\n    }\n    return subpatchNode;\n};\nconst _arePdGlobEndpointsEqual = ([pp1, ep1], [pp2, ep2]) => _currentPatch(pp1).id === _currentPatch(pp2).id &&\n    ep1.nodeId === ep2.nodeId &&\n    ep1.portletId === ep2.portletId;\n\nexport { _buildConnections, _buildNodes, _traversePatches, buildGraphNodeId, buildGraphPortletId, buildImplicitGraphNodeId, toDspGraph as default };\n","import { Sequence, Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\nconst EMPTY_BUS_NAME = 'empty';\nconst build = () => ({\n    inlets: {\n        '0': { type: 'message', id: '0' },\n    },\n    outlets: {\n        '0': { type: 'message', id: '0' },\n    },\n    // This is always true, because the object can receive \n    // messages through message bus\n    isPushingMessages: true\n});\nconst controlsCore = (ns, { msg, msgBuses }) => Sequence([\n    Func(ns.setReceiveBusName, [\n        Var(ns.State, `state`),\n        Var(`string`, `busName`),\n    ], 'void') `\n            if (state.receiveBusName !== \"${EMPTY_BUS_NAME}\") {\n                ${msgBuses.unsubscribe}(state.receiveBusName, state.messageReceiver)\n            }\n            state.receiveBusName = busName\n            if (state.receiveBusName !== \"${EMPTY_BUS_NAME}\") {\n                ${msgBuses.subscribe}(state.receiveBusName, state.messageReceiver)\n            }\n        `,\n    Func(ns.setSendReceiveFromMessage, [\n        Var(ns.State, `state`),\n        Var(msg.Message, `m`),\n    ], 'boolean') `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'receive'\n            ) {\n                ${ns.setReceiveBusName}(state, ${msg.readStringToken}(m, 1))\n                return true\n\n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'send'\n            ) {\n                state.sendBusName = ${msg.readStringToken}(m, 1)\n                return true\n            }\n            return false\n        `,\n    Func(ns.defaultMessageHandler, [Var(msg.Message, `m`)], `void`) ``,\n]);\n\nexport { EMPTY_BUS_NAME, build, controlsCore };\n","import { Sequence, ConstVar, Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { msg } from '../../../../WebPd_compiler/dist/src/stdlib/msg/msg.js';\n\nconst sigBuses = {\n    namespace: 'sigBuses',\n    // prettier-ignore\n    code: ({ ns: sigBuses }) => Sequence([\n        ConstVar(`Map<string, Float>`, sigBuses._BUSES, `new Map()`),\n        `${sigBuses._BUSES}.set('', 0)`,\n        Func(sigBuses.addAssign, [\n            Var(`string`, `busName`),\n            Var(`Float`, `value`)\n        ], 'Float') `\n            ${ConstVar('Float', 'newValue', `${sigBuses._BUSES}.get(busName) + value`)}\n            ${sigBuses._BUSES}.set(\n                busName,\n                newValue,\n            )\n            return newValue\n        `,\n        Func(sigBuses.set, [\n            Var(`string`, `busName`),\n            Var(`Float`, `value`),\n        ], 'void') `\n            ${sigBuses._BUSES}.set(\n                busName,\n                value,\n            )\n        `,\n        Func(sigBuses.reset, [\n            Var(`string`, `busName`)\n        ], 'void') `\n            ${sigBuses._BUSES}.set(busName, 0)\n        `,\n        Func(sigBuses.read, [\n            Var(`string`, `busName`)\n        ], 'Float') `\n            return ${sigBuses._BUSES}.get(busName)\n        `\n    ]),\n};\nconst msgBuses = {\n    namespace: 'msgBuses',\n    // prettier-ignore\n    code: ({ ns: msgBuses }, { msg }) => Sequence([\n        ConstVar(`Map<string, Array<${msg.Handler}>>`, msgBuses._BUSES, 'new Map()'),\n        Func(msgBuses.publish, [\n            Var(`string`, `busName`),\n            Var(msg.Message, `message`)\n        ], 'void') `\n            ${Var(`Int`, `i`, `0`)}\n            ${ConstVar(`Array<${msg.Handler}>`, 'callbacks', `${msgBuses._BUSES}.has(busName) ? ${msgBuses._BUSES}.get(busName): []`)}\n            for (i = 0; i < callbacks.length; i++) {\n                callbacks[i](message)\n            }\n        `,\n        Func(msgBuses.subscribe, [\n            Var(`string`, `busName`),\n            Var(msg.Handler, `callback`)\n        ], 'void') `\n            if (!${msgBuses._BUSES}.has(busName)) {\n                ${msgBuses._BUSES}.set(busName, [])\n            }\n            ${msgBuses._BUSES}.get(busName).push(callback)\n        `,\n        Func(msgBuses.unsubscribe, [\n            Var(`string`, `busName`),\n            Var(msg.Handler, `callback`)\n        ], 'void') `\n            if (!${msgBuses._BUSES}.has(busName)) {\n                return\n            }\n            ${ConstVar(`Array<${msg.Handler}>`, `callbacks`, `${msgBuses._BUSES}.get(busName)`)}\n            ${ConstVar(`Int`, `found`, `callbacks.indexOf(callback)`)}\n            if (found !== -1) {\n                callbacks.splice(found, 1)\n            }\n        `\n    ]),\n    dependencies: [msg],\n};\n\nexport { msgBuses, sigBuses };\n","import { Sequence, Func, Var, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { msg } from '../../../../WebPd_compiler/dist/src/stdlib/msg/msg.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst bangUtils = {\n    namespace: 'bangUtils',\n    // prettier-ignore\n    code: ({ ns: bangUtils }, { msg }) => Sequence([\n        Func(bangUtils.isBang, [\n            Var(msg.Message, `message`)\n        ], 'boolean') `\n            return (\n                ${msg.isStringToken}(message, 0) \n                && ${msg.readStringToken}(message, 0) === 'bang'\n            )\n        `,\n        Func(bangUtils.bang, [], msg.Message) `\n            ${ConstVar(msg.Message, `message`, `${msg.create}([${msg.STRING_TOKEN}, 4])`)}\n            ${msg.writeStringToken}(message, 0, 'bang')\n            return message\n        `,\n        Func(bangUtils.emptyToBang, [\n            Var(msg.Message, `message`)\n        ], msg.Message) `\n            if (${msg.getLength}(message) === 0) {\n                return ${bangUtils.bang}()\n            } else {\n                return message\n            }\n        `,\n    ]),\n    dependencies: [msg],\n};\nconst msgUtils = {\n    namespace: 'msgUtils',\n    // prettier-ignore\n    code: ({ ns: msgUtils }, { msg }) => Sequence([\n        Func(msgUtils.slice, [\n            Var(msg.Message, `message`),\n            Var(`Int`, `start`),\n            Var(`Int`, `end`)\n        ], msg.Message) `\n            if (${msg.getLength}(message) <= start) {\n                throw new Error('message empty')\n            }\n            ${ConstVar(msg.Template, 'template', `${msgUtils._copyTemplate}(message, start, end)`)}\n            ${ConstVar(msg.Message, `newMessage`, `${msg.create}(template)`)}\n            ${msgUtils.copy}(message, newMessage, start, end, 0)\n            return newMessage\n        `,\n        Func(msgUtils.concat, [\n            Var(msg.Message, `message1`),\n            Var(msg.Message, `message2`)\n        ], msg.Message) `\n            ${ConstVar(msg.Message, 'newMessage', `${msg.create}(${msgUtils._copyTemplate}(message1, 0, ${msg.getLength}(message1)).concat(${msgUtils._copyTemplate}(message2, 0, ${msg.getLength}(message2))))`)}\n            ${msgUtils.copy}(message1, newMessage, 0, ${msg.getLength}(message1), 0)\n            ${msgUtils.copy}(message2, newMessage, 0, ${msg.getLength}(message2), ${msg.getLength}(message1))\n            return newMessage\n        `,\n        Func(msgUtils.shift, [\n            Var(msg.Message, `message`)\n        ], msg.Message) `\n            switch (${msg.getLength}(message)) {\n                case 0:\n                    throw new Error('message empty')\n                case 1:\n                    return ${msg.create}([])\n                default:\n                    return ${msgUtils.slice}(message, 1, ${msg.getLength}(message))\n            }\n        `,\n        Func(msgUtils.copy, [\n            Var(msg.Message, `src`),\n            Var(msg.Message, `dest`),\n            Var(`Int`, `srcStart`),\n            Var(`Int`, `srcEnd`),\n            Var(`Int`, `destStart`),\n        ], 'void') `\n            ${Var(`Int`, `i`, `srcStart`)}\n            ${Var(`Int`, `j`, `destStart`)}\n            for (i, j; i < srcEnd; i++, j++) {\n                if (${msg.getTokenType}(src, i) === ${msg.STRING_TOKEN}) {\n                    ${msg.writeStringToken}(dest, j, ${msg.readStringToken}(src, i))\n                } else {\n                    ${msg.writeFloatToken}(dest, j, ${msg.readFloatToken}(src, i))\n                }\n            }\n        `,\n        Func(msgUtils._copyTemplate, [\n            Var(msg.Message, `src`),\n            Var(`Int`, `start`),\n            Var(`Int`, `end`)\n        ], msg.Template) `\n            ${ConstVar(msg.Template, `template`, `[]`)}\n            for (${Var(`Int`, `i`, `start`)}; i < end; i++) {\n                ${ConstVar(`Int`, `tokenType`, `${msg.getTokenType}(src, i)`)}\n                template.push(tokenType)\n                if (tokenType === ${msg.STRING_TOKEN}) {\n                    template.push(${msg.readStringToken}(src, i).length)\n                }\n            }\n            return template\n        `,\n    ]),\n    dependencies: [msg],\n};\nconst actionUtils = {\n    namespace: 'actionUtils',\n    // prettier-ignore\n    code: ({ ns: actionUtils }, { msg }) => Sequence([\n        Func(actionUtils.isAction, [\n            Var(msg.Message, `message`),\n            Var(`string`, `action`)\n        ], 'boolean') `\n            return ${msg.isMatching}(message, [${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(message, 0) === action\n        `\n    ]),\n    dependencies: [msg],\n};\n\nexport { actionUtils, bangUtils, msgUtils };\n","import { Class, Var, ast, AnonFunc, Sequence, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { assertNumber, assertOptionalString } from '../validation.js';\nimport { EMPTY_BUS_NAME, build, controlsCore } from './controls-base.js';\nimport { msgBuses } from '../global-code/buses.js';\nimport { bangUtils } from '../global-code/core.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builderWithInit = {\n    translateArgs: ({ args: [minValue, maxValue, init, initValue, receive, send], }) => ({\n        minValue: assertNumber(minValue),\n        maxValue: assertNumber(maxValue),\n        sendBusName: assertOptionalString(send) || EMPTY_BUS_NAME,\n        receiveBusName: assertOptionalString(receive) || EMPTY_BUS_NAME,\n        initValue: init === 1 ? assertNumber(initValue) : 0,\n        outputOnLoad: !!init,\n    }),\n    build,\n};\nconst builderWithoutMin = {\n    translateArgs: ({ args: [maxValue, init, initValue, receive, send], }) => ({\n        minValue: 0,\n        maxValue: assertNumber(maxValue),\n        sendBusName: assertOptionalString(send) || EMPTY_BUS_NAME,\n        receiveBusName: assertOptionalString(receive) || EMPTY_BUS_NAME,\n        initValue: init === 1 ? assertNumber(initValue) : 0,\n        outputOnLoad: !!init,\n    }),\n    build,\n};\n// ------------------------------- node implementation ------------------------------ //\nconst makeNodeImplementation = ({ prepareStoreValue, prepareStoreValueBang, name }) => {\n    return {\n        flags: {\n            alphaName: name,\n        },\n        state: ({ ns, node: { args } }, { msg }) => Class(ns.State, [\n            Var(`Float`, `minValue`, args.minValue),\n            Var(`Float`, `maxValue`, args.maxValue),\n            Var(`Float`, `valueFloat`, args.initValue),\n            Var(msg.Message, `value`, `${msg.create}([])`),\n            Var(`string`, `receiveBusName`, `\"${args.receiveBusName}\"`),\n            Var(`string`, `sendBusName`, `\"${args.sendBusName}\"`),\n            Var(msg.Handler, `messageReceiver`, ns.defaultMessageHandler),\n            Var(msg.Handler, `messageSender`, ns.defaultMessageHandler),\n        ]),\n        initialization: ({ ns, state, snds, node: { args }, }, { commons, msg }) => ast `\n                ${state}.messageSender = ${snds.$0}\n                ${state}.messageReceiver = ${AnonFunc([Var(msg.Message, `m`)]) `\n                    ${ns.receiveMessage}(${state}, m)\n                `}\n                ${ns.setReceiveBusName}(${state}, \"${args.receiveBusName}\")\n    \n                ${args.outputOnLoad ?\n            `${commons.waitFrame}(0, () => ${snds.$0}(${msg.floats}([${state}.valueFloat])))` : null}\n            `,\n        messageReceivers: ({ ns, state, }, { msg }) => ({\n            '0': AnonFunc([Var(msg.Message, `m`)]) `\n                ${ns.receiveMessage}(${state}, m)\n                return\n            `\n        }),\n        core: ({ ns }, globals) => {\n            const { msgBuses, bangUtils, msg } = globals;\n            return Sequence([\n                controlsCore(ns, globals),\n                Func(ns.receiveMessage, [\n                    Var(ns.State, `state`),\n                    Var(msg.Message, `m`),\n                ], 'void') `\n                    if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                        ${prepareStoreValue ?\n                    `state.valueFloat = ${prepareStoreValue(`${msg.readFloatToken}(m, 0)`)}`\n                    : `state.valueFloat = ${msg.readFloatToken}(m, 0)`}\n                        ${ConstVar(msg.Message, `outMessage`, `${msg.floats}([state.valueFloat])`)}\n                        state.messageSender(outMessage)\n                        if (state.sendBusName !== \"${EMPTY_BUS_NAME}\") {\n                            ${msgBuses.publish}(state.sendBusName, outMessage)\n                        }\n                        return\n        \n                    } else if (${bangUtils.isBang}(m)) {\n                        ${prepareStoreValueBang ?\n                    `state.valueFloat = ${prepareStoreValueBang(`state.valueFloat`)}`\n                    : null}\n                        ${ConstVar(msg.Message, `outMessage`, `${msg.floats}([state.valueFloat])`)}\n                        state.messageSender(outMessage)\n                        if (state.sendBusName !== \"${EMPTY_BUS_NAME}\") {\n                            ${msgBuses.publish}(state.sendBusName, outMessage)\n                        }\n                        return\n        \n                    } else if (\n                        ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}]) \n                        && ${msg.readStringToken}(m, 0) === 'set'\n                    ) {\n                        ${prepareStoreValue ?\n                    `state.valueFloat = ${prepareStoreValue(`${msg.readFloatToken}(m, 1)`)}`\n                    : `state.valueFloat = ${msg.readFloatToken}(m, 1)`}\n                        return\n                    \n                    } else if (${ns.setSendReceiveFromMessage}(state, m) === true) {\n                        return\n                    }\n                `\n            ]);\n        },\n        dependencies: [\n            bangUtils,\n            msgBuses,\n            commonsWaitFrame,\n        ],\n    };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    'tgl': makeNodeImplementation({\n        name: 'tgl',\n        prepareStoreValueBang: (valueCode) => `${valueCode} === 0 ? state.maxValue: 0`\n    }),\n    'nbx': makeNodeImplementation({\n        name: 'nbx',\n        prepareStoreValue: (valueCode) => `Math.min(Math.max(${valueCode},state.minValue),state.maxValue)`\n    }),\n    'hsl': makeNodeImplementation({ name: 'hsl' }),\n    'vsl': makeNodeImplementation({ name: 'vsl' }),\n    'hradio': makeNodeImplementation({ name: 'hradio' }),\n    'vradio': makeNodeImplementation({ name: 'vradio' }),\n};\nconst builders = {\n    'tgl': builderWithoutMin,\n    'nbx': builderWithInit,\n    'hsl': builderWithInit,\n    'vsl': builderWithInit,\n    'hradio': builderWithoutMin,\n    'vradio': builderWithoutMin,\n};\n\nexport { builders, nodeImplementations };\n","import { traverseGuiControls } from '../gui-controls.js';\nimport { buildGraphNodeId } from '../compile-dsp-graph/to-dsp-graph.js';\nimport { builders } from '../nodes/nodes/controls-float.js';\n\nconst FLOAT_CONTROL_TYPES = [...Object.keys(builders), 'floatatom'];\nconst collectIoMessageReceiversFromSendNodes = (pdJson, graph) => {\n    const rootPatch = pdJson.patches[pdJson.rootPatchId];\n    const messageReceivers = {};\n    Object.values(rootPatch.nodes).forEach((pdNode) => {\n        const nodeId = buildGraphNodeId(rootPatch.id, pdNode.id);\n        const node = graph[nodeId];\n        if (pdNode.type === 'send' &&\n            // Important because some nodes are deleted at dsp-graph compilation.\n            // and if we declare messageReceivers for them it will cause error.\n            // TODO : maybe the compiler should detect this instead of doing it here ?\n            !!node) {\n            if (!messageReceivers[nodeId]) {\n                const layout = pdNode.layout || {};\n                const metadata = {\n                    group: 'send',\n                    name: node.args.busName,\n                    position: layout.x !== undefined && layout.y !== undefined\n                        ? [layout.x, layout.y]\n                        : undefined,\n                };\n                messageReceivers[nodeId] = {\n                    portletIds: [],\n                    metadata: metadata,\n                };\n            }\n            messageReceivers[nodeId].portletIds.push('0');\n        }\n    });\n    return messageReceivers;\n};\nconst collectIoMessageReceiversFromGui = (controls, graph) => {\n    const messageReceivers = {};\n    traverseGuiControls(controls, (control) => {\n        const portletId = '0';\n        const nodeId = buildGraphNodeId(control.patch.id, control.node.id);\n        if (!messageReceivers[nodeId]) {\n            const node = graph[nodeId];\n            // Important because some nodes are deleted at dsp-graph compilation.\n            // and if we declare messageReceivers for them it will cause error.\n            // TODO : maybe the compiler should detect this instead of doing it here ?\n            if (!node) {\n                return;\n            }\n            const layout = control.node.layout || {};\n            let metadata = {\n                group: 'control',\n                type: control.node.type,\n                label: layout.label,\n                position: layout.x !== undefined && layout.y !== undefined\n                    ? [layout.x, layout.y]\n                    : undefined,\n            };\n            if (FLOAT_CONTROL_TYPES.includes(control.node.type)) {\n                metadata = {\n                    ...metadata,\n                    group: 'control:float',\n                    initValue: node.args.initValue,\n                    minValue: node.args.minValue,\n                    maxValue: node.args.maxValue,\n                };\n            }\n            messageReceivers[nodeId] = {\n                portletIds: [],\n                metadata: metadata,\n            };\n        }\n        messageReceivers[nodeId].portletIds.push(portletId);\n    });\n    return messageReceivers;\n};\n\nexport { collectIoMessageReceiversFromGui, collectIoMessageReceiversFromSendNodes };\n","import { _proxyGetHandlerThrowIfKeyUnknown } from '../compile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// NOTE : not necessarily the most logical place to put this function, but we need it here\n// cause it's imported by the bindings.\nconst getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\nconst proxyAsModuleWithBindings = (rawModule, bindings) => \n// Use empty object on proxy cause proxy cannot redefine access of member of its target,\n// which causes issues for example for WebAssembly exports.\n// See : https://stackoverflow.com/questions/75148897/get-on-proxy-property-items-is-a-read-only-and-non-configurable-data-proper\nnew Proxy({}, {\n    get: (_, k) => {\n        if (bindings.hasOwnProperty(k)) {\n            const key = String(k);\n            const bindingSpec = bindings[key];\n            switch (bindingSpec.type) {\n                case 'raw':\n                    // Cannot use hasOwnProperty here cause not defined in wasm exports object\n                    if (k in rawModule) {\n                        return rawModule[key];\n                    }\n                    else {\n                        throw new Error(`Key ${String(key)} doesn't exist in raw module`);\n                    }\n                case 'proxy':\n                case 'callback':\n                    return bindingSpec.value;\n            }\n            // We need to return undefined here for compatibility with various APIs\n            // which inspect object's attributes.\n        }\n        else {\n            return undefined;\n        }\n    },\n    has: function (_, k) {\n        return k in bindings;\n    },\n    set: (_, k, newValue) => {\n        if (bindings.hasOwnProperty(String(k))) {\n            const key = String(k);\n            const bindingSpec = bindings[key];\n            if (bindingSpec.type === 'callback') {\n                bindingSpec.value = newValue;\n            }\n            else {\n                throw new Error(`Binding key ${String(key)} is read-only`);\n            }\n        }\n        else {\n            throw new Error(`Key ${String(k)} is not defined in bindings`);\n        }\n        return true;\n    },\n});\n/**\n * Reverse-maps exported variable names from `rawModule` according to the mapping defined\n * in `variableNamesIndex`.\n *\n * For example with :\n *\n * ```\n * const variableNamesIndex = {\n *     globals: {\n *         // ...\n *         fs: {\n *             // ...\n *             readFile: 'g_fs_readFile'\n *         },\n *     }\n * }\n * ```\n *\n * The function `g_fs_readFile` (if it is exported properly by the raw module), will then\n * be available on the returned object at path `.globals.fs.readFile`.\n */\nconst proxyWithEngineNameMapping = (rawModule, variableNamesIndex) => proxyWithNameMapping(rawModule, {\n    globals: variableNamesIndex.globals,\n    io: variableNamesIndex.io,\n});\nconst proxyWithNameMapping = (rawModule, variableNamesIndex) => {\n    if (typeof variableNamesIndex === 'string') {\n        return rawModule[variableNamesIndex];\n    }\n    else if (typeof variableNamesIndex === 'object') {\n        return new Proxy(rawModule, {\n            get: (_, k) => {\n                const key = String(k);\n                if (key in rawModule) {\n                    return Reflect.get(rawModule, key);\n                }\n                else if (key in variableNamesIndex) {\n                    const nextVariableNames = variableNamesIndex[key];\n                    return proxyWithNameMapping(rawModule, nextVariableNames);\n                }\n                else if (_proxyGetHandlerThrowIfKeyUnknown(rawModule, key)) {\n                    return undefined;\n                }\n            },\n            has: function (_, k) {\n                return k in rawModule || k in variableNamesIndex;\n            },\n            set: (_, k, value) => {\n                const key = String(k);\n                if (key in variableNamesIndex) {\n                    const variableName = variableNamesIndex[key];\n                    if (typeof variableName !== 'string') {\n                        throw new Error(`Failed to set value for key ${String(k)}: variable name is not a string`);\n                    }\n                    return Reflect.set(rawModule, variableName, value);\n                }\n                else {\n                    throw new Error(`Key ${String(k)} is not defined in raw module`);\n                }\n            },\n        });\n    }\n    else {\n        throw new Error(`Invalid name mapping`);\n    }\n};\n\nexport { getFloatArrayType, proxyAsModuleWithBindings, proxyWithEngineNameMapping, proxyWithNameMapping };\n","import { getFloatArrayType } from '../../run/run-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** @copyright Assemblyscript ESM bindings */\nconst liftString = (rawModule, pointer) => {\n    if (!pointer) {\n        throw new Error('Cannot lift a null pointer');\n    }\n    pointer = pointer >>> 0;\n    const end = (pointer +\n        new Uint32Array(rawModule.memory.buffer)[(pointer - 4) >>> 2]) >>>\n        1;\n    const memoryU16 = new Uint16Array(rawModule.memory.buffer);\n    let start = pointer >>> 1;\n    let string = '';\n    while (end - start > 1024) {\n        string += String.fromCharCode(...memoryU16.subarray(start, (start += 1024)));\n    }\n    return string + String.fromCharCode(...memoryU16.subarray(start, end));\n};\n/** @copyright Assemblyscript ESM bindings */\nconst lowerString = (rawModule, value) => {\n    if (value == null) {\n        throw new Error('Cannot lower a null string');\n    }\n    const length = value.length, pointer = rawModule.__new(length << 1, 1) >>> 0, memoryU16 = new Uint16Array(rawModule.memory.buffer);\n    for (let i = 0; i < length; ++i)\n        memoryU16[(pointer >>> 1) + i] = value.charCodeAt(i);\n    return pointer;\n};\n/**\n * @returns A typed array which shares buffer with the wasm module,\n * thus allowing direct read / write between the module and the host environment.\n *\n * @copyright Assemblyscript ESM bindings `liftTypedArray`\n */\nconst readTypedArray = (rawModule, constructor, pointer) => {\n    if (!pointer) {\n        throw new Error('Cannot lift a null pointer');\n    }\n    const memoryU32 = new Uint32Array(rawModule.memory.buffer);\n    return new constructor(rawModule.memory.buffer, memoryU32[(pointer + 4) >>> 2], memoryU32[(pointer + 8) >>> 2] / constructor.BYTES_PER_ELEMENT);\n};\n/** @param bitDepth : Must be the same value as what was used to compile the engine. */\nconst lowerFloatArray = (rawModule, bitDepth, data) => {\n    const arrayType = getFloatArrayType(bitDepth);\n    const arrayPointer = rawModule.globals.core.createFloatArray(data.length);\n    const array = readTypedArray(rawModule, arrayType, arrayPointer);\n    array.set(data);\n    return { array, arrayPointer };\n};\n/** @param bitDepth : Must be the same value as what was used to compile the engine. */\nconst lowerListOfFloatArrays = (rawModule, bitDepth, data) => {\n    const arraysPointer = rawModule.globals.core.x_createListOfArrays();\n    data.forEach((array) => {\n        const { arrayPointer } = lowerFloatArray(rawModule, bitDepth, array);\n        rawModule.globals.core.x_pushToListOfArrays(arraysPointer, arrayPointer);\n    });\n    return arraysPointer;\n};\n/** @param bitDepth : Must be the same value as what was used to compile the engine. */\nconst readListOfFloatArrays = (rawModule, bitDepth, listOfArraysPointer) => {\n    const listLength = rawModule.globals.core.x_getListOfArraysLength(listOfArraysPointer);\n    const arrays = [];\n    const arrayType = getFloatArrayType(bitDepth);\n    for (let i = 0; i < listLength; i++) {\n        const arrayPointer = rawModule.globals.core.x_getListOfArraysElem(listOfArraysPointer, i);\n        arrays.push(readTypedArray(rawModule, arrayType, arrayPointer));\n    }\n    return arrays;\n};\n\nexport { liftString, lowerFloatArray, lowerListOfFloatArrays, lowerString, readListOfFloatArrays, readTypedArray };\n","import { liftString } from '../../stdlib/core/bindings-assemblyscript.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// REF : Assemblyscript ESM bindings\nconst instantiateWasmModule = async (wasmBuffer, wasmImports = {}) => {\n    const instanceAndModule = await WebAssembly.instantiate(wasmBuffer, {\n        env: {\n            abort: (messagePointer, \n            // filename, not useful because we compile everything to a single string\n            _, lineNumber, columnNumber) => {\n                const message = liftString(wasmExports, messagePointer);\n                lineNumber = lineNumber;\n                columnNumber = columnNumber;\n                (() => {\n                    // @external.js\n                    throw Error(`${message} at ${lineNumber}:${columnNumber}`);\n                })();\n            },\n            seed: () => {\n                return (() => {\n                    return Date.now() * Math.random();\n                })();\n            },\n            'console.log': (textPointer) => {\n                console.log(liftString(wasmExports, textPointer));\n            },\n        },\n        ...wasmImports,\n    });\n    const wasmExports = instanceAndModule.instance\n        .exports;\n    return instanceAndModule.instance;\n};\n\nexport { instantiateWasmModule };\n","import { readTypedArray } from '../../stdlib/core/bindings-assemblyscript.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// This must be called again when doing something on the wasm module\n// which could cause memory grow (lowerString, lowerMessage,\n//      lowerBuffer, lowerMessage) :\n// https://github.com/emscripten-core/emscripten/issues/6747\nconst updateWasmInOuts = ({ refs, cache, }) => {\n    cache.wasmOutput = readTypedArray(refs.rawModule, cache.arrayType, refs.rawModule.globals.core.x_getOutput());\n    cache.wasmInput = readTypedArray(refs.rawModule, cache.arrayType, refs.rawModule.globals.core.x_getInput());\n};\nconst createEngineLifecycleBindings = (engineContext) => {\n    const { refs, cache, metadata } = engineContext;\n    return {\n        initialize: {\n            type: 'proxy',\n            value: (sampleRate, blockSize) => {\n                metadata.settings.audio.blockSize = blockSize;\n                metadata.settings.audio.sampleRate = sampleRate;\n                cache.blockSize = blockSize;\n                refs.rawModule.initialize(sampleRate, blockSize);\n                updateWasmInOuts(engineContext);\n            },\n        },\n        dspLoop: {\n            type: 'proxy',\n            value: (input, output) => {\n                for (let channel = 0; channel < input.length; channel++) {\n                    cache.wasmInput.set(input[channel], channel * cache.blockSize);\n                }\n                updateWasmInOuts(engineContext);\n                refs.rawModule.dspLoop();\n                updateWasmInOuts(engineContext);\n                for (let channel = 0; channel < output.length; channel++) {\n                    output[channel].set(cache.wasmOutput.subarray(cache.blockSize * channel, cache.blockSize * (channel + 1)));\n                }\n            },\n        },\n    };\n};\n\nexport { createEngineLifecycleBindings, updateWasmInOuts };\n","import { lowerString, readTypedArray, lowerFloatArray } from '../core/bindings-assemblyscript.js';\nimport { updateWasmInOuts } from '../../engine-assemblyscript/run/engine-lifecycle-bindings.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst createCommonsBindings = (engineContext) => {\n    const { refs, cache } = engineContext;\n    return {\n        getArray: {\n            type: 'proxy',\n            value: (arrayName) => {\n                const arrayNamePointer = lowerString(refs.rawModule, arrayName);\n                const arrayPointer = refs.rawModule.globals.commons.getArray(arrayNamePointer);\n                return readTypedArray(refs.rawModule, cache.arrayType, arrayPointer);\n            },\n        },\n        setArray: {\n            type: 'proxy',\n            value: (arrayName, array) => {\n                const stringPointer = lowerString(refs.rawModule, arrayName);\n                const { arrayPointer } = lowerFloatArray(refs.rawModule, cache.bitDepth, array);\n                refs.rawModule.globals.commons.setArray(stringPointer, arrayPointer);\n                updateWasmInOuts(engineContext);\n            },\n        },\n    };\n};\n\nexport { createCommonsBindings };\n","import { liftString } from '../../stdlib/core/bindings-assemblyscript.js';\nimport { instantiateWasmModule } from './wasm-helpers.js';\n\nconst readMetadata = async (wasmBuffer) => {\n    // In order to read metadata, we need to introspect the module to get the imports\n    const inputImports = {};\n    const wasmModule = WebAssembly.Module.imports(new WebAssembly.Module(wasmBuffer));\n    // Then we generate dummy functions to be able to instantiate the module\n    wasmModule\n        .filter((imprt) => imprt.module === 'input' && imprt.kind === 'function')\n        .forEach((imprt) => (inputImports[imprt.name] = () => undefined));\n    const wasmInstance = await instantiateWasmModule(wasmBuffer, {\n        input: inputImports,\n    });\n    // Finally, once the module instantiated, we read the metadata\n    const rawModule = wasmInstance.exports;\n    const stringPointer = rawModule.metadata.valueOf();\n    const metadataJSON = liftString(rawModule, stringPointer);\n    return JSON.parse(metadataJSON);\n};\n\nexport { readMetadata };\n","import { readTypedArray, liftString, lowerString } from '../core/bindings-assemblyscript.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * These bindings enable easier interaction with Wasm modules generated with our AssemblyScript compilation.\n * For example : instantiation, passing data back and forth, etc ...\n *\n * **Warning** : These bindings are compiled with rollup as a standalone JS module for inclusion in other libraries.\n * In consequence, they are meant to be kept lightweight, and should avoid importing dependencies.\n *\n * @module\n */\nconst liftMessage = (rawModule, messagePointer) => {\n    const messageTokenTypesPointer = rawModule.globals.msg.x_getTokenTypes(messagePointer);\n    const messageTokenTypes = readTypedArray(rawModule, Int32Array, messageTokenTypesPointer);\n    const message = [];\n    messageTokenTypes.forEach((tokenType, tokenIndex) => {\n        if (tokenType === rawModule.globals.msg.FLOAT_TOKEN.valueOf()) {\n            message.push(rawModule.globals.msg.readFloatToken(messagePointer, tokenIndex));\n        }\n        else if (tokenType === rawModule.globals.msg.STRING_TOKEN.valueOf()) {\n            const stringPointer = rawModule.globals.msg.readStringToken(messagePointer, tokenIndex);\n            message.push(liftString(rawModule, stringPointer));\n        }\n    });\n    return message;\n};\nconst lowerMessage = (rawModule, message) => {\n    const template = message.reduce((template, value) => {\n        if (typeof value === 'number') {\n            template.push(rawModule.globals.msg.FLOAT_TOKEN.valueOf());\n        }\n        else if (typeof value === 'string') {\n            template.push(rawModule.globals.msg.STRING_TOKEN.valueOf());\n            template.push(value.length);\n        }\n        else {\n            throw new Error(`invalid message value ${value}`);\n        }\n        return template;\n    }, []);\n    // Here we should ideally pass an array of Int, but I am not sure how\n    // to lower a typed array in a generic manner, so using the available bindings from `commons`.\n    const templateArrayPointer = rawModule.globals.msg.x_createTemplate(template.length);\n    const loweredTemplateArray = readTypedArray(rawModule, Int32Array, templateArrayPointer);\n    loweredTemplateArray.set(template);\n    const messagePointer = rawModule.globals.msg.x_create(templateArrayPointer);\n    message.forEach((value, index) => {\n        if (typeof value === 'number') {\n            rawModule.globals.msg.writeFloatToken(messagePointer, index, value);\n        }\n        else if (typeof value === 'string') {\n            const stringPointer = lowerString(rawModule, value);\n            rawModule.globals.msg.writeStringToken(messagePointer, index, stringPointer);\n        }\n    });\n    return messagePointer;\n};\n\nexport { liftMessage, lowerMessage };\n","import { mapArray } from '../../functional-helpers.js';\nimport { lowerMessage, liftMessage } from '../../stdlib/msg/bindings-assemblyscript.js';\n\nconst createIoMessageReceiversBindings = ({ metadata, refs, }) => Object.entries(metadata.settings.io.messageReceivers).reduce((bindings, [nodeId, spec]) => ({\n    ...bindings,\n    [nodeId]: {\n        type: 'proxy',\n        value: mapArray(spec.portletIds, (inletId) => [\n            inletId,\n            (message) => {\n                const messagePointer = lowerMessage(refs.rawModule, message);\n                refs.rawModule.io.messageReceivers[nodeId][inletId](messagePointer);\n            },\n        ]),\n    },\n}), {});\nconst createIoMessageSendersBindings = ({ metadata, }) => Object.entries(metadata.settings.io.messageSenders).reduce((bindings, [nodeId, spec]) => ({\n    ...bindings,\n    [nodeId]: {\n        type: 'proxy',\n        value: mapArray(spec.portletIds, (outletId) => [\n            outletId,\n            (_) => undefined,\n        ]),\n    },\n}), {});\nconst ioMsgSendersImports = ({ metadata, refs, }) => {\n    const wasmImports = {};\n    const { variableNamesIndex } = metadata.compilation;\n    Object.entries(metadata.settings.io.messageSenders).forEach(([nodeId, spec]) => {\n        spec.portletIds.forEach((outletId) => {\n            const listenerName = variableNamesIndex.io.messageSenders[nodeId][outletId];\n            wasmImports[listenerName] = (messagePointer) => {\n                const message = liftMessage(refs.rawModule, messagePointer);\n                refs.engine.io.messageSenders[nodeId][outletId](message);\n            };\n        });\n    });\n    return wasmImports;\n};\n\nexport { createIoMessageReceiversBindings, createIoMessageSendersBindings, ioMsgSendersImports };\n","import { lowerListOfFloatArrays, liftString, readListOfFloatArrays } from '../core/bindings-assemblyscript.js';\nimport { liftMessage } from '../msg/bindings-assemblyscript.js';\nimport { updateWasmInOuts } from '../../engine-assemblyscript/run/engine-lifecycle-bindings.js';\nimport { proxyWithNameMapping } from '../../run/run-helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst createFsBindings = (engineContext) => {\n    const { refs, cache, metadata } = engineContext;\n    const fsExportedNames = metadata.compilation.variableNamesIndex.globals.fs;\n    return {\n        sendReadSoundFileResponse: {\n            type: 'proxy',\n            value: 'x_onReadSoundFileResponse' in fsExportedNames\n                ? (operationId, status, sound) => {\n                    let soundPointer = 0;\n                    if (sound) {\n                        soundPointer = lowerListOfFloatArrays(refs.rawModule, cache.bitDepth, sound);\n                    }\n                    refs.rawModule.globals.fs.x_onReadSoundFileResponse(operationId, status, soundPointer);\n                    updateWasmInOuts(engineContext);\n                }\n                : undefined,\n        },\n        sendWriteSoundFileResponse: {\n            type: 'proxy',\n            value: 'x_onWriteSoundFileResponse' in fsExportedNames\n                ? refs.rawModule.globals.fs.x_onWriteSoundFileResponse\n                : undefined,\n        },\n        sendSoundStreamData: {\n            type: 'proxy',\n            value: 'x_onSoundStreamData' in fsExportedNames\n                ? (operationId, sound) => {\n                    const soundPointer = lowerListOfFloatArrays(refs.rawModule, cache.bitDepth, sound);\n                    const writtenFrameCount = refs.rawModule.globals.fs.x_onSoundStreamData(operationId, soundPointer);\n                    updateWasmInOuts(engineContext);\n                    return writtenFrameCount;\n                }\n                : undefined,\n        },\n        closeSoundStream: {\n            type: 'proxy',\n            value: 'x_onCloseSoundStream' in fsExportedNames\n                ? refs.rawModule.globals.fs.x_onCloseSoundStream\n                : undefined,\n        },\n        onReadSoundFile: { type: 'callback', value: () => undefined },\n        onWriteSoundFile: { type: 'callback', value: () => undefined },\n        onOpenSoundReadStream: { type: 'callback', value: () => undefined },\n        onOpenSoundWriteStream: { type: 'callback', value: () => undefined },\n        onSoundStreamData: { type: 'callback', value: () => undefined },\n        onCloseSoundStream: { type: 'callback', value: () => undefined },\n    };\n};\nconst createFsImports = (engineContext) => {\n    const wasmImports = {};\n    const { cache, metadata, refs } = engineContext;\n    const exportedNames = metadata.compilation.variableNamesIndex.globals;\n    if ('fs' in exportedNames) {\n        const nameMapping = proxyWithNameMapping(wasmImports, exportedNames.fs);\n        if ('i_readSoundFile' in exportedNames.fs) {\n            nameMapping.i_readSoundFile = (operationId, urlPointer, infoPointer) => {\n                const url = liftString(refs.rawModule, urlPointer);\n                const info = liftMessage(refs.rawModule, infoPointer);\n                refs.engine.globals.fs.onReadSoundFile(operationId, url, info);\n            };\n        }\n        if ('i_writeSoundFile' in exportedNames.fs) {\n            nameMapping.i_writeSoundFile = (operationId, soundPointer, urlPointer, infoPointer) => {\n                const sound = readListOfFloatArrays(refs.rawModule, cache.bitDepth, soundPointer);\n                const url = liftString(refs.rawModule, urlPointer);\n                const info = liftMessage(refs.rawModule, infoPointer);\n                refs.engine.globals.fs.onWriteSoundFile(operationId, sound, url, info);\n            };\n        }\n        if ('i_openSoundReadStream' in exportedNames.fs) {\n            nameMapping.i_openSoundReadStream = (operationId, urlPointer, infoPointer) => {\n                const url = liftString(refs.rawModule, urlPointer);\n                const info = liftMessage(refs.rawModule, infoPointer);\n                // Called here because this call means that some sound buffers were allocated\n                // inside the wasm module.\n                updateWasmInOuts(engineContext);\n                refs.engine.globals.fs.onOpenSoundReadStream(operationId, url, info);\n            };\n        }\n        if ('i_openSoundWriteStream' in exportedNames.fs) {\n            nameMapping.i_openSoundWriteStream = (operationId, urlPointer, infoPointer) => {\n                const url = liftString(refs.rawModule, urlPointer);\n                const info = liftMessage(refs.rawModule, infoPointer);\n                refs.engine.globals.fs.onOpenSoundWriteStream(operationId, url, info);\n            };\n        }\n        if ('i_sendSoundStreamData' in exportedNames.fs) {\n            nameMapping.i_sendSoundStreamData = (operationId, blockPointer) => {\n                const block = readListOfFloatArrays(refs.rawModule, cache.bitDepth, blockPointer);\n                refs.engine.globals.fs.onSoundStreamData(operationId, block);\n            };\n        }\n        if ('i_closeSoundStream' in exportedNames.fs) {\n            nameMapping.i_closeSoundStream = (...args) => refs.engine.globals.fs.onCloseSoundStream(...args);\n        }\n    }\n    return wasmImports;\n};\n\nexport { createFsBindings, createFsImports };\n","import { instantiateWasmModule } from './wasm-helpers.js';\nimport { proxyWithEngineNameMapping, proxyAsModuleWithBindings, getFloatArrayType } from '../../run/run-helpers.js';\nimport { createCommonsBindings } from '../../stdlib/commons/bindings-assemblyscript.js';\nimport { createEngineLifecycleBindings } from './engine-lifecycle-bindings.js';\nimport { readMetadata } from './metadata.js';\nimport { ioMsgSendersImports, createIoMessageReceiversBindings, createIoMessageSendersBindings } from './io-bindings.js';\nimport { createFsImports, createFsBindings } from '../../stdlib/fs/bindings-assemblyscript.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst createEngine = async (wasmBuffer, additionalBindings) => {\n    // Create engine context\n    // We need to read metadata before everything, because it is used by other initialization functions\n    const metadata = await readMetadata(wasmBuffer);\n    const bitDepth = metadata.settings.audio.bitDepth;\n    const arrayType = getFloatArrayType(bitDepth);\n    const engineContext = {\n        refs: {},\n        metadata: metadata,\n        cache: {\n            wasmOutput: new arrayType(0),\n            wasmInput: new arrayType(0),\n            arrayType,\n            bitDepth,\n            blockSize: 0,\n        },\n    };\n    // Create raw module\n    const wasmImports = {\n        ...createFsImports(engineContext),\n        ...ioMsgSendersImports(engineContext),\n    };\n    const wasmInstance = await instantiateWasmModule(wasmBuffer, {\n        input: wasmImports,\n    });\n    engineContext.refs.rawModule = proxyWithEngineNameMapping(wasmInstance.exports, metadata.compilation.variableNamesIndex);\n    // Create engine\n    const engineBindings = createEngineBindings(engineContext);\n    const engine = proxyAsModuleWithBindings(engineContext.refs.rawModule, {\n        ...engineBindings,\n        ...(additionalBindings || {}),\n    });\n    engineContext.refs.engine = engine;\n    return engine;\n};\nconst createEngineBindings = (engineContext) => {\n    const { metadata, refs } = engineContext;\n    const exportedNames = metadata.compilation.variableNamesIndex.globals;\n    // Create bindings for io\n    const io = {\n        messageReceivers: proxyAsModuleWithBindings(refs.rawModule, createIoMessageReceiversBindings(engineContext)),\n        messageSenders: proxyAsModuleWithBindings(refs.rawModule, createIoMessageSendersBindings(engineContext)),\n    };\n    // Create bindings for core modules\n    const globalsBindings = {\n        commons: {\n            type: 'proxy',\n            value: proxyAsModuleWithBindings(refs.rawModule, createCommonsBindings(engineContext)),\n        },\n    };\n    if ('fs' in exportedNames) {\n        const fs = proxyAsModuleWithBindings(refs.rawModule, createFsBindings(engineContext));\n        globalsBindings.fs = { type: 'proxy', value: fs };\n    }\n    // Build the full module\n    return {\n        ...createEngineLifecycleBindings(engineContext),\n        metadata: { type: 'proxy', value: metadata },\n        globals: {\n            type: 'proxy',\n            value: proxyAsModuleWithBindings(refs.rawModule, globalsBindings),\n        },\n        io: { type: 'proxy', value: io },\n    };\n};\n\nexport { createEngine, createEngineBindings };\n","import { proxyAsModuleWithBindings } from '../../run/run-helpers.js';\n\nconst createFsModule = (rawModule) => {\n    const fsExportedNames = rawModule.metadata.compilation.variableNamesIndex.globals.fs;\n    const fs = proxyAsModuleWithBindings(rawModule, {\n        onReadSoundFile: { type: 'callback', value: () => undefined },\n        onWriteSoundFile: { type: 'callback', value: () => undefined },\n        onOpenSoundReadStream: { type: 'callback', value: () => undefined },\n        onOpenSoundWriteStream: { type: 'callback', value: () => undefined },\n        onSoundStreamData: { type: 'callback', value: () => undefined },\n        onCloseSoundStream: { type: 'callback', value: () => undefined },\n        sendReadSoundFileResponse: {\n            type: 'proxy',\n            value: 'x_onReadSoundFileResponse' in fsExportedNames\n                ? rawModule.globals.fs.x_onReadSoundFileResponse\n                : undefined,\n        },\n        sendWriteSoundFileResponse: {\n            type: 'proxy',\n            value: 'x_onWriteSoundFileResponse' in fsExportedNames\n                ? rawModule.globals.fs.x_onWriteSoundFileResponse\n                : undefined,\n        },\n        // should register the operation success { bitDepth: 32, target: 'javascript' }\n        sendSoundStreamData: {\n            type: 'proxy',\n            value: 'x_onSoundStreamData' in fsExportedNames\n                ? rawModule.globals.fs.x_onSoundStreamData\n                : undefined,\n        },\n        closeSoundStream: {\n            type: 'proxy',\n            value: 'x_onCloseSoundStream' in fsExportedNames\n                ? rawModule.globals.fs.x_onCloseSoundStream\n                : undefined,\n        },\n    });\n    if ('i_openSoundWriteStream' in fsExportedNames) {\n        rawModule.globals.fs.i_openSoundWriteStream = (...args) => fs.onOpenSoundWriteStream(...args);\n    }\n    if ('i_sendSoundStreamData' in fsExportedNames) {\n        rawModule.globals.fs.i_sendSoundStreamData = (...args) => fs.onSoundStreamData(...args);\n    }\n    if ('i_openSoundReadStream' in fsExportedNames) {\n        rawModule.globals.fs.i_openSoundReadStream = (...args) => fs.onOpenSoundReadStream(...args);\n    }\n    if ('i_closeSoundStream' in fsExportedNames) {\n        rawModule.globals.fs.i_closeSoundStream = (...args) => fs.onCloseSoundStream(...args);\n    }\n    if ('i_writeSoundFile' in fsExportedNames) {\n        rawModule.globals.fs.i_writeSoundFile = (...args) => fs.onWriteSoundFile(...args);\n    }\n    if ('i_readSoundFile' in fsExportedNames) {\n        rawModule.globals.fs.i_readSoundFile = (...args) => fs.onReadSoundFile(...args);\n    }\n    return fs;\n};\n\nexport { createFsModule };\n","import { getFloatArrayType, proxyAsModuleWithBindings } from '../../run/run-helpers.js';\n\nconst createCommonsModule = (rawModule, metadata) => {\n    const floatArrayType = getFloatArrayType(metadata.settings.audio.bitDepth);\n    return proxyAsModuleWithBindings(rawModule, {\n        getArray: {\n            type: 'proxy',\n            value: (arrayName) => rawModule.globals.commons.getArray(arrayName),\n        },\n        setArray: {\n            type: 'proxy',\n            value: (arrayName, array) => rawModule.globals.commons.setArray(arrayName, new floatArrayType(array)),\n        },\n    });\n};\n\nexport { createCommonsModule };\n","import { proxyWithEngineNameMapping, proxyAsModuleWithBindings } from '../../run/run-helpers.js';\nimport { createFsModule } from '../../stdlib/fs/bindings-javascript.js';\nimport { createCommonsModule } from '../../stdlib/commons/bindings-javascript.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * These bindings enable easier interaction with modules generated with our JavaScript compilation.\n * For example : instantiation, passing data back and forth, etc ...\n *\n * **Warning** : These bindings are compiled with rollup as a standalone JS module for inclusion in other libraries.\n * In consequence, they are meant to be kept lightweight, and should avoid importing dependencies.\n *\n * @module\n */\nconst compileRawModule = (code) => new Function(`\n        ${code}\n        return exports\n    `)();\nconst createEngineBindings = (rawModule) => {\n    const exportedNames = rawModule.metadata.compilation.variableNamesIndex.globals;\n    const globalsBindings = {\n        commons: {\n            type: 'proxy',\n            value: createCommonsModule(rawModule, rawModule.metadata),\n        },\n    };\n    if ('fs' in exportedNames) {\n        globalsBindings.fs = { type: 'proxy', value: createFsModule(rawModule) };\n    }\n    return {\n        metadata: { type: 'raw' },\n        initialize: { type: 'raw' },\n        dspLoop: { type: 'raw' },\n        io: { type: 'raw' },\n        globals: {\n            type: 'proxy',\n            value: proxyAsModuleWithBindings(rawModule, globalsBindings),\n        },\n    };\n};\nconst createEngine = (code, additionalBindings) => {\n    const rawModule = compileRawModule(code);\n    const rawModuleWithNameMapping = proxyWithEngineNameMapping(rawModule, rawModule.metadata.compilation.variableNamesIndex);\n    return proxyAsModuleWithBindings(rawModule, {\n        ...createEngineBindings(rawModuleWithNameMapping),\n        ...(additionalBindings || {}),\n    });\n};\n\nexport { compileRawModule, createEngine, createEngineBindings };\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2017 Brett Zamir, 2012 Niklas von Hertzen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n/**\r\n * Encode a byte buffer as a base64 string.\r\n * @param {!Uint8Array} bytes The buffer.\r\n * @return {string} A .wav file as a DataURI.\r\n */\r\nfunction encode(bytes) {\r\n  /** @type {string} */\r\n  let base64 = '';\r\n  for (let i = 0; i < bytes.length; i += 3) {\r\n    base64 += chars[bytes[i] >> 2];\r\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\r\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\r\n    base64 += chars[bytes[i + 2] & 63];\r\n  }\r\n  if (bytes.length % 3 === 2) {\r\n    base64 = base64.substring(0, base64.length - 1) + '=';\r\n  } else if (bytes.length % 3 === 1) {\r\n    base64 = base64.substring(0, base64.length - 2) + '==';\r\n  }\r\n  return base64;\r\n}\r\n\r\n/**\r\n * Decode a base64 string as a byte as buffer.\r\n * @param {string} base64 A .wav file as a DataURI.\r\n * @return {!Uint8Array} A .wav file as a DataURI.\r\n */\r\nfunction decode(base64) {\r\n  /** @type {!Uint8Array} */\r\n  let lookup = new Uint8Array(256);\r\n  for (let i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n  }\r\n  /** @type {number} */\r\n  let bufferLength = base64.length * 0.75;\r\n  if (base64[base64.length - 1] === '=') {\r\n    bufferLength--;\r\n    if (base64[base64.length - 2] === '=') {\r\n      bufferLength--;\r\n    }\r\n  }\r\n  /** @type {!Uint8Array} */\r\n  let bytes = new Uint8Array(bufferLength);\r\n  for (let i = 0, j = 0; i < base64.length; i += 4) {\r\n    /** @type {number} */\r\n    let encoded1 = lookup[base64.charCodeAt(i)];\r\n    /** @type {number} */\r\n    let encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n    /** @type {number} */\r\n    let encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n    /** @type {number} */\r\n    let encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n    bytes[j++] = encoded1 << 2 | encoded2 >> 4;\r\n    bytes[j++] = (encoded2 & 15) << 4 | encoded3 >> 2;\r\n    bytes[j++] = (encoded3 & 3) << 6 | encoded4 & 63;\r\n  }\r\n  return bytes;\r\n}\n\nexport { decode, encode };\n","/*\r\n * Copyright (c) 2017-2018 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview A module to change the bit depth of PCM samples.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/rochars/bitdepth\r\n */\r\n\r\n/**\r\n * Change the bit depth of PCM samples.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {string} bithDepth The original bit depth.\r\n * @param {!TypedArray} newSamples The output array.\r\n * @param {string} targetBitDepth The target bit depth.\r\n * @throws {Error} If original or target bit depths are not valid.\r\n */\r\nfunction changeBitDepth(samples, bithDepth, newSamples, targetBitDepth) {\r\n  // float to float, just copy the values\r\n  if ([\"32f\",\"64\"].indexOf(bithDepth) > -1 &&\r\n    [\"32f\",\"64\"].indexOf(targetBitDepth) > -1) {\r\n    newSamples.set(samples);\r\n    return;\r\n  }\r\n  validateBitDepth_(bithDepth);\r\n  validateBitDepth_(targetBitDepth);\r\n  /** @type {!Function} */\r\n  let toFunction = getBitDepthFunction_(bithDepth, targetBitDepth);\r\n  /** @type {!Object<string, number>} */\r\n  let options = {\r\n    oldMin: Math.pow(2, parseInt(bithDepth, 10)) / 2,\r\n    newMin: Math.pow(2, parseInt(targetBitDepth, 10)) / 2,\r\n    oldMax: (Math.pow(2, parseInt(bithDepth, 10)) / 2) - 1,\r\n    newMax: (Math.pow(2, parseInt(targetBitDepth, 10)) / 2) - 1,\r\n  };\r\n  // sign the samples if original is 8-bit\r\n  sign8Bit_(bithDepth, samples, true);\r\n  // change the resolution of the samples\r\n  for (let i = 0, len = samples.length; i < len; i++) {        \r\n    newSamples[i] = toFunction(samples[i], options);\r\n  }\r\n  // unsign the samples if target is 8-bit\r\n  sign8Bit_(targetBitDepth, newSamples, false);\r\n}\r\n\r\n/**\r\n * Change the bit depth from int to int.\r\n * @param {number} sample The sample.\r\n * @param {!Object<string, number>} args Data about the bit depths.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction intToInt_(sample, args) {\r\n  if (sample > 0) {\r\n    sample = parseInt((sample / args.oldMax) * args.newMax, 10);\r\n  } else {\r\n    sample = parseInt((sample / args.oldMin) * args.newMin, 10);\r\n  }\r\n  return sample;\r\n}\r\n\r\n/**\r\n * Change the bit depth from float to int.\r\n * @param {number} sample The sample.\r\n * @param {!Object<string, number>} args Data about the bit depths.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction floatToInt_(sample, args) {\r\n  return parseInt(\r\n    sample > 0 ? sample * args.newMax : sample * args.newMin, 10);\r\n}\r\n\r\n/**\r\n * Change the bit depth from int to float.\r\n * @param {number} sample The sample.\r\n * @param {!Object<string, number>} args Data about the bit depths.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction intToFloat_(sample, args) {\r\n  return sample > 0 ? sample / args.oldMax : sample / args.oldMin;\r\n}\r\n\r\n/**\r\n * Return the function to change the bit depth of a sample.\r\n * @param {string} original The original bit depth of the data.\r\n * @param {string} target The new bit depth of the data.\r\n * @return {!Function}\r\n * @private\r\n */\r\nfunction getBitDepthFunction_(original, target) {\r\n  /** @type {!Function} */\r\n  let func = function(x) {return x;};\r\n  if (original != target) {\r\n    if ([\"32f\", \"64\"].includes(original)) {\r\n      func = floatToInt_;\r\n    } else {\r\n      if ([\"32f\", \"64\"].includes(target)) {\r\n        func = intToFloat_;\r\n      } else {\r\n        func = intToInt_;\r\n      }\r\n    }\r\n  }\r\n  return func;\r\n}\r\n\r\n/**\r\n * Validate the bit depth.\r\n * @param {string} bitDepth The original bit depth.\r\n * @throws {Error} If bit depth is not valid.\r\n * @private\r\n */\r\nfunction validateBitDepth_(bitDepth) {\r\n  if ((bitDepth != \"32f\" && bitDepth != \"64\") &&\r\n      (parseInt(bitDepth, 10) < \"8\" || parseInt(bitDepth, 10) > \"53\")) {\r\n    throw new Error(\"Invalid bit depth.\");\r\n  }\r\n}\r\n\r\n/**\r\n * Sign samples if they are 8-bit.\r\n * @param {string} bitDepth The bit depth code.\r\n * @param {!Array|!TypedArray} samples The samples.\r\n * @param {boolean} sign True to sign, false to unsign.\r\n * @private\r\n */\r\nfunction sign8Bit_(bitDepth, samples, sign) {\r\n  if (bitDepth == \"8\") {\r\n    let factor = sign ? -128 : 128;\r\n    for (let i = 0, len = samples.length; i < len; i++) {\r\n      samples[i] = samples[i] += factor;\r\n    }\r\n  }\r\n}\n\nexport { changeBitDepth };\n","/*\r\n * imaadpcm: IMA ADPCM codec in JavaScript.\r\n * Copyright (c) 2018-2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2016 acida. MIT License.  \r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview IMA ADPCM codec.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/rochars/imaadpcm\r\n */\r\n\r\n/**\r\n * @type {!Array<number>}\r\n * @private\r\n */\r\nconst INDEX_TABLE = [\r\n    -1, -1, -1, -1, 2, 4, 6, 8,\r\n    -1, -1, -1, -1, 2, 4, 6, 8];\r\n/**\r\n * @type {!Array<number>}\r\n * @private\r\n */\r\nconst STEP_TABLE = [\r\n    7, 8, 9, 10, 11, 12, 13, 14,\r\n    16, 17, 19, 21, 23, 25, 28, 31,\r\n    34, 37, 41, 45, 50, 55, 60, 66,\r\n    73, 80, 88, 97, 107, 118, 130, 143,\r\n    157, 173, 190, 209, 230, 253, 279, 307,\r\n    337, 371, 408, 449, 494, 544, 598, 658,\r\n    724, 796, 876, 963, 1060, 1166, 1282, 1411,\r\n    1552, 1707, 1878, 2066, 2272, 2499, 2749, 3024,\r\n    3327, 3660, 4026, 4428, 4871, 5358, 5894, 6484,\r\n    7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\r\n    15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794,\r\n    32767];\r\n\r\n/**\r\n * Encode 16-bit PCM samples into 4-bit IMA ADPCM samples.\r\n * @param {!Int16Array} samples A array of samples.\r\n * @return {!Uint8Array}\r\n */\r\nfunction encode(samples) {\r\n  /** @type {!Object} */\r\n  let state = {\r\n    index: 0,\r\n    predicted: 0,\r\n    step: 7\r\n  };\r\n  /** @type {!Uint8Array} */\r\n  let adpcmSamples = new Uint8Array((samples.length));\r\n  /** @type {!Array<number>} */\r\n  let block = [];\r\n  /** @type {number} */\r\n  let fileIndex = 0;\r\n  /** @type {number} */\r\n  let blockCount = 0;\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    if ((i % 505 == 0 && i != 0)) {\r\n      adpcmSamples.set(encodeBlock(block, state), fileIndex);\r\n      fileIndex += 256;\r\n      block = [];\r\n      blockCount++;\r\n    }\r\n    block.push(samples[i]);\r\n  }\r\n  let samplesLength = samples.length / 2;\r\n  if (samplesLength % 2) {\r\n    samplesLength++;\r\n  }\r\n  return adpcmSamples.slice(0, samplesLength + 512 + blockCount * 4);\r\n}\r\n\r\n/**\r\n * Decode IMA ADPCM samples into 16-bit PCM samples.\r\n * @param {!Uint8Array} adpcmSamples A array of ADPCM samples.\r\n * @param {number} blockAlign The block size.\r\n * @return {!Int16Array}\r\n */\r\nfunction decode(adpcmSamples, blockAlign=256) {\r\n  /** @type {!Object} */\r\n  let state = {\r\n    index: 0,\r\n    predicted: 0,\r\n    step: 7\r\n  };\r\n  /** @type {!Int16Array} */\r\n  let samples = new Int16Array(adpcmSamples.length * 2);\r\n  /** @type {!Array<number>} */\r\n  let block = [];\r\n  /** @type {number} */\r\n  let fileIndex = 0;\r\n  for (let i = 0, len = adpcmSamples.length; i < len; i++) {\r\n    if (i % blockAlign == 0 && i != 0) {            \r\n      let decoded = decodeBlock(block, state);\r\n      samples.set(decoded, fileIndex);\r\n      fileIndex += decoded.length;\r\n      block = [];\r\n    }\r\n    block.push(adpcmSamples[i]);\r\n  }\r\n  return samples;\r\n}\r\n\r\n/**\r\n * Encode a block of 505 16-bit samples as 4-bit ADPCM samples.\r\n * @param {!Array<number>} block A sample block of 505 samples.\r\n * @param {!Object} state The encoder state.\r\n * @return {!Array<number>}\r\n */\r\nfunction encodeBlock(block, state) {\r\n  /** @type {!Array<number>} */\r\n  let adpcmSamples = blockHead_(block[0], state);\r\n  for (let i = 3, len = block.length; i < len; i+=2) {\r\n    /** @type {number} */\r\n    let sample2 = encodeSample_(block[i], state);\r\n    /** @type {number} */\r\n    let sample = encodeSample_(block[i + 1], state);\r\n    adpcmSamples.push((sample << 4) | sample2);\r\n  }\r\n  return adpcmSamples;\r\n}\r\n\r\n/**\r\n * Decode a block of ADPCM samples into 16-bit PCM samples.\r\n * @param {!Array<number>} block A adpcm sample block.\r\n * @param {!Object} state The decoder state.\r\n * @return {!Array<number>}\r\n */\r\nfunction decodeBlock(block, state) {\r\n  state.predicted = sign_((block[1] << 8) | block[0]);\r\n  state.index = block[2];\r\n  state.step = STEP_TABLE[state.index];\r\n  /** @type {!Array<number>} */\r\n  let result = [\r\n      state.predicted,\r\n      state.predicted\r\n    ];\r\n  for (let i = 4, len = block.length; i < len; i++) {\r\n    /** @type {number} */\r\n    let original_sample = block[i];\r\n    /** @type {number} */\r\n    let second_sample = original_sample >> 4;\r\n    /** @type {number} */\r\n    let first_sample = (second_sample << 4) ^ original_sample;\r\n    result.push(decodeSample_(first_sample, state));\r\n    result.push(decodeSample_(second_sample, state));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Sign a 16-bit integer.\r\n * @param {number} num A 16-bit integer.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction sign_(num) {\r\n  return num > 32768 ? num - 65536 : num;\r\n}\r\n\r\n/**\r\n * Compress a 16-bit PCM sample into a 4-bit ADPCM sample.\r\n * @param {number} sample The sample.\r\n * @param {!Object} state The encoder state.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction encodeSample_(sample, state) {\r\n  /** @type {number} */\r\n  let delta = sample - state.predicted;\r\n  /** @type {number} */\r\n  let value = 0;\r\n  if (delta >= 0) {\r\n    value = 0;\r\n  } else {\r\n    value = 8;\r\n    delta = -delta;\r\n  }\r\n  /** @type {number} */\r\n  let step = STEP_TABLE[state.index];\r\n  /** @type {number} */\r\n  let diff = step >> 3;\r\n  if (delta > step) {\r\n    value |= 4;\r\n    delta -= step;\r\n    diff += step;\r\n  }\r\n  step >>= 1;\r\n  if (delta > step) {\r\n    value |= 2;\r\n    delta -= step;\r\n    diff += step;\r\n  }\r\n  step >>= 1;\r\n  if (delta > step) {\r\n    value |= 1;\r\n    diff += step;\r\n  }\r\n  updateEncoder_(value, diff, state);\r\n  return value;\r\n}\r\n\r\n/**\r\n * Set the value for encoderPredicted_ and encoderIndex_\r\n * after each sample is compressed.\r\n * @param {number} value The compressed ADPCM sample\r\n * @param {number} diff The calculated difference\r\n * @param {!Object} state The encoder state.\r\n * @private\r\n */\r\nfunction updateEncoder_(value, diff, state) {\r\n  if (value & 8) {\r\n    state.predicted -= diff;\r\n  } else {\r\n    state.predicted += diff;\r\n  }\r\n  if (state.predicted < -0x8000) {\r\n    state.predicted = -0x8000;\r\n  } else if (state.predicted > 0x7fff) {\r\n    state.predicted = 0x7fff;\r\n  }\r\n  state.index += INDEX_TABLE[value & 7];\r\n  if (state.index < 0) {\r\n    state.index = 0;\r\n  } else if (state.index > 88) {\r\n    state.index = 88;\r\n  }\r\n}\r\n\r\n/**\r\n * Decode a 4-bit ADPCM sample into a 16-bit PCM sample.\r\n * @param {number} nibble A 4-bit adpcm sample.\r\n * @param {!Object} state The decoder state.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction decodeSample_(nibble, state) {\r\n  /** @type {number} */\r\n  let difference = 0;\r\n  if (nibble & 4) {\r\n    difference += state.step;\r\n  }\r\n  if (nibble & 2) {\r\n    difference += state.step >> 1;\r\n  }\r\n  if (nibble & 1) {\r\n    difference += state.step >> 2;\r\n  }\r\n  difference += state.step >> 3;\r\n  if (nibble & 8) {\r\n    difference = -difference;\r\n  }\r\n  state.predicted += difference;\r\n  if (state.predicted > 32767) {\r\n    state.predicted = 32767;\r\n  } else if (state.predicted < -32767) {\r\n    state.predicted = -32767;\r\n  }\r\n  updateDecoder_(nibble, state);\r\n  return state.predicted;\r\n}\r\n\r\n/**\r\n * Update the index and step after decoding a sample.\r\n * @param {number} nibble A 4-bit adpcm sample.\r\n * @param {!Object} state The decoder state.\r\n * @private\r\n */\r\nfunction updateDecoder_(nibble, state) {\r\n  state.index += INDEX_TABLE[nibble];\r\n  if (state.index < 0) {\r\n    state.index = 0;\r\n  } else if (state.index > 88) {\r\n    state.index = 88;\r\n  }\r\n  state.step = STEP_TABLE[state.index];\r\n}\r\n\r\n/**\r\n * Return the head of a ADPCM sample block.\r\n * @param {number} sample The first sample of the block.\r\n * @param {!Object} state The encoder state.\r\n * @return {!Array<number>}\r\n * @private\r\n */\r\nfunction blockHead_(sample, state) {\r\n  encodeSample_(sample, state);\r\n  /** @type {!Array<number>} */\r\n  let adpcmSamples = [];\r\n  adpcmSamples.push(sample & 0xFF);\r\n  adpcmSamples.push((sample >> 8) & 0xFF);\r\n  adpcmSamples.push(state.index);\r\n  adpcmSamples.push(0);\r\n  return adpcmSamples;\r\n}\n\nexport { decode, encode };\n","/*\r\n * alawmulaw: A-Law and mu-Law codecs in JavaScript.\r\n * https://github.com/rochars/alawmulaw\r\n *\r\n * Copyright (c) 2018 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview A-Law codec.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/rochars/alawmulaw\r\n */\r\n\r\n/** @type {!Array<number>} */\r\nconst LOG_TABLE = [\r\n  1,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5, \r\n  6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6, \r\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7, \r\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7 \r\n];\r\n\r\n/**\r\n * Encode a 16-bit linear PCM sample as 8-bit A-Law.\r\n * @param {number} sample A 16-bit PCM sample\r\n * @return {number}\r\n */\r\nfunction encodeSample(sample) {\r\n  /** @type {number} */\r\n  let compandedValue; \r\n  sample = (sample ==-32768) ? -32767 : sample;\r\n  /** @type {number} */\r\n  let sign = ((~sample) >> 8) & 0x80; \r\n  if (!sign) {\r\n    sample = sample * -1; \r\n  }\r\n  if (sample > 32635) {\r\n    sample = 32635; \r\n  }\r\n  if (sample >= 256)  {\r\n    /** @type {number} */\r\n    let exponent = LOG_TABLE[(sample >> 8) & 0x7F];\r\n    /** @type {number} */\r\n    let mantissa = (sample >> (exponent + 3) ) & 0x0F; \r\n    compandedValue = ((exponent << 4) | mantissa); \r\n  } else {\r\n    compandedValue = sample >> 4; \r\n  } \r\n  return compandedValue ^ (sign ^ 0x55);\r\n}\r\n\r\n/**\r\n * Decode a 8-bit A-Law sample as 16-bit PCM.\r\n * @param {number} aLawSample The 8-bit A-Law sample\r\n * @return {number}\r\n */\r\nfunction decodeSample(aLawSample) {\r\n  /** @type {number} */\r\n  let sign = 0;\r\n  aLawSample ^= 0x55;\r\n  if ((aLawSample & 0x80) !== 0) {\r\n    aLawSample &= ~(1 << 7);\r\n    sign = -1;\r\n  }\r\n  /** @type {number} */\r\n  let position = ((aLawSample & 0xF0) >> 4) + 4;\r\n  /** @type {number} */\r\n  let decoded = 0;\r\n  if (position != 4) {\r\n    decoded = ((1 << position) |\r\n      ((aLawSample & 0x0F) << (position - 4)) |\r\n      (1 << (position - 5)));\r\n  } else {\r\n    decoded = (aLawSample << 1)|1;\r\n  }\r\n  decoded = (sign === 0) ? (decoded) : (-decoded);\r\n  return (decoded * 8) * -1;\r\n}\r\n\r\n/**\r\n * Encode 16-bit linear PCM samples as 8-bit A-Law samples.\r\n * @param {!Int16Array} samples A array of 16-bit PCM samples.\r\n * @return {!Uint8Array}\r\n */\r\nfunction encode(samples) {\r\n  /** @type {!Uint8Array} */\r\n  let aLawSamples = new Uint8Array(samples.length);\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    aLawSamples[i] = encodeSample(samples[i]);\r\n  }\r\n  return aLawSamples;\r\n}\r\n\r\n/**\r\n * Decode 8-bit A-Law samples into 16-bit linear PCM samples.\r\n * @param {!Uint8Array} samples A array of 8-bit A-Law samples.\r\n * @return {!Int16Array}\r\n */\r\nfunction decode(samples) {\r\n  /** @type {!Int16Array} */\r\n  let pcmSamples = new Int16Array(samples.length);\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    pcmSamples[i] = decodeSample(samples[i]);\r\n  }\r\n  return pcmSamples;\r\n}\n\nexport { decode, decodeSample, encode, encodeSample };\n","/*\r\n * alawmulaw: A-Law and mu-Law codecs in JavaScript.\r\n * https://github.com/rochars/alawmulaw\r\n *\r\n * Copyright (c) 2018-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview mu-Law codec.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/rochars/alawmulaw\r\n */\r\n\r\n/**\r\n * @type {number}\r\n * @private\r\n */\r\nconst BIAS = 0x84;\r\n/**\r\n * @type {number}\r\n * @private\r\n */\r\nconst CLIP = 32635;\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nconst encodeTable = [\r\n    0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,\r\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\r\n    5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\r\n    5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\r\n    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nconst decodeTable = [0,132,396,924,1980,4092,8316,16764];\r\n\r\n/**\r\n * Encode a 16-bit linear PCM sample as 8-bit mu-Law.\r\n * @param {number} sample A 16-bit PCM sample\r\n * @return {number}\r\n */\r\nfunction encodeSample(sample) {\r\n  /** @type {number} */\r\n  let sign;\r\n  /** @type {number} */\r\n  let exponent;\r\n  /** @type {number} */\r\n  let mantissa;\r\n  /** @type {number} */\r\n  let muLawSample;\r\n  /** get the sample into sign-magnitude **/\r\n  sign = (sample >> 8) & 0x80;\r\n  if (sign != 0) sample = -sample;\r\n  /** convert from 16 bit linear to ulaw **/\r\n  sample = sample + BIAS;\r\n  if (sample > CLIP) sample = CLIP;\r\n  exponent = encodeTable[(sample>>7) & 0xFF];\r\n  mantissa = (sample >> (exponent+3)) & 0x0F;\r\n  muLawSample = ~(sign | (exponent << 4) | mantissa);\r\n  /** return the result **/\r\n  return muLawSample;\r\n}\r\n\r\n/**\r\n * Decode a 8-bit mu-Law sample as 16-bit PCM.\r\n * @param {number} muLawSample The 8-bit mu-Law sample\r\n * @return {number}\r\n */\r\nfunction decodeSample(muLawSample) {\r\n  /** @type {number} */\r\n  let sign;\r\n  /** @type {number} */\r\n  let exponent;\r\n  /** @type {number} */\r\n  let mantissa;\r\n  /** @type {number} */\r\n  let sample;\r\n  muLawSample = ~muLawSample;\r\n  sign = (muLawSample & 0x80);\r\n  exponent = (muLawSample >> 4) & 0x07;\r\n  mantissa = muLawSample & 0x0F;\r\n  sample = decodeTable[exponent] + (mantissa << (exponent+3));\r\n  if (sign != 0) sample = -sample;\r\n  return sample;\r\n}\r\n\r\n/**\r\n * Encode 16-bit linear PCM samples into 8-bit mu-Law samples.\r\n * @param {!Int16Array} samples A array of 16-bit PCM samples.\r\n * @return {!Uint8Array}\r\n */\r\nfunction encode(samples) {\r\n  /** @type {!Uint8Array} */\r\n  let muLawSamples = new Uint8Array(samples.length);\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    muLawSamples[i] = encodeSample(samples[i]);\r\n  }\r\n  return muLawSamples;\r\n}\r\n\r\n/**\r\n * Decode 8-bit mu-Law samples into 16-bit PCM samples.\r\n * @param {!Uint8Array} samples A array of 8-bit mu-Law samples.\r\n * @return {!Int16Array}\r\n */\r\nfunction decode(samples) {\r\n  /** @type {!Int16Array} */\r\n  let pcmSamples = new Int16Array(samples.length);\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    pcmSamples[i] = decodeSample(samples[i]);\r\n  }\r\n  return pcmSamples;\r\n}\n\nexport { decode, decodeSample, encode, encodeSample };\n","/*\r\n * Copyright (c) 2017-2018 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview A function to swap endianness in byte buffers.\r\n * @see https://github.com/rochars/byte-data\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Swap the byte ordering in a buffer. The buffer is modified in place.\r\n * @param {!(Array<number>|Uint8Array)} bytes The bytes.\r\n * @param {number} offset The byte offset.\r\n * @param {number=} [start=0] The start index.\r\n * @param {number=} [end=bytes.length] The end index.\r\n */\r\nfunction endianness(bytes, offset, start=0, end=bytes.length) {\r\n  for (let index = start; index < end; index += offset) {\r\n    swap_(bytes, offset, index);\r\n  }\r\n}\r\n\r\n/**\r\n * Swap the byte order of a value in a buffer. The buffer is modified in place.\r\n * @param {!(Array<number>|Uint8Array)} bytes The bytes.\r\n * @param {number} offset The byte offset.\r\n * @param {number} index The start index.\r\n * @private\r\n */\r\nfunction swap_(bytes, offset, index) {\r\n  offset--;\r\n  for(let x = 0; x < offset; x++) {\r\n    /** @type {number} */\r\n    let theByte = bytes[index + x];\r\n    bytes[index + x] = bytes[index + offset];\r\n    bytes[index + offset] = theByte;\r\n    offset--;\r\n  }\r\n}\n\nexport { endianness };\n","/*\r\n * Copyright (c) 2018 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Encode and decode UTF8 strings to and from byte buffers.\r\n * @see https://github.com/rochars/byte-data\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://encoding.spec.whatwg.org/#the-encoding\r\n * @see https://encoding.spec.whatwg.org/#utf-8-encoder\r\n */\r\n\r\n/**\r\n * Read a string of UTF-8 characters from a byte buffer.\r\n * Invalid characters are replaced with 'REPLACEMENT CHARACTER' (U+FFFD).\r\n * @see https://encoding.spec.whatwg.org/#the-encoding\r\n * @see https://stackoverflow.com/a/34926911\r\n * @param {!Uint8Array|!Array<number>} buffer A byte buffer.\r\n * @param {number} [start=0] The buffer index to start reading.\r\n * @param {number} [end=0] The buffer index to stop reading.\r\n *   Assumes the buffer length if undefined.\r\n * @return {string}\r\n */\r\nfunction unpack(buffer, start=0, end=buffer.length) {\r\n  /** @type {string} */\r\n  let str = '';\r\n  for(let index = start; index < end;) {\r\n    /** @type {number} */\r\n    let lowerBoundary = 0x80;\r\n    /** @type {number} */\r\n    let upperBoundary = 0xBF;\r\n    /** @type {boolean} */\r\n    let replace = false;\r\n    /** @type {number} */\r\n    let charCode = buffer[index++];\r\n    if (charCode >= 0x00 && charCode <= 0x7F) {\r\n      str += String.fromCharCode(charCode);\r\n    } else {\r\n      /** @type {number} */\r\n      let count = 0;\r\n      if (charCode >= 0xC2 && charCode <= 0xDF) {\r\n        count = 1;\r\n      } else if (charCode >= 0xE0 && charCode <= 0xEF ) {\r\n        count = 2;\r\n        if (buffer[index] === 0xE0) {\r\n          lowerBoundary = 0xA0;\r\n        }\r\n        if (buffer[index] === 0xED) {\r\n          upperBoundary = 0x9F;\r\n        }\r\n      } else if (charCode >= 0xF0 && charCode <= 0xF4 ) {\r\n        count = 3;\r\n        if (buffer[index] === 0xF0) {\r\n          lowerBoundary = 0x90;\r\n        }\r\n        if (buffer[index] === 0xF4) {\r\n          upperBoundary = 0x8F;\r\n        }\r\n      } else {\r\n        replace = true;\r\n      }\r\n      charCode = charCode & (1 << (8 - count - 1)) - 1;\r\n      for (let i = 0; i < count; i++) {\r\n        if (buffer[index] < lowerBoundary || buffer[index] > upperBoundary) {\r\n          replace = true;\r\n        }\r\n        charCode = (charCode << 6) | (buffer[index] & 0x3f);\r\n        index++;\r\n      }\r\n      if (replace) {\r\n        str += String.fromCharCode(0xFFFD);\r\n      } \r\n      else if (charCode <= 0xffff) {\r\n        str += String.fromCharCode(charCode);\r\n      } else {\r\n        charCode -= 0x10000;\r\n        str += String.fromCharCode(\r\n          ((charCode >> 10) & 0x3ff) + 0xd800,\r\n          (charCode & 0x3ff) + 0xdc00);\r\n      }\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n * Write a string of UTF-8 characters to a byte buffer.\r\n * @see https://encoding.spec.whatwg.org/#utf-8-encoder\r\n * @param {string} str The string to pack.\r\n * @param {!Uint8Array|!Array<number>} buffer The buffer to pack the string to.\r\n * @param {number=} index The buffer index to start writing.\r\n * @return {number} The next index to write in the buffer.\r\n */\r\nfunction pack(str, buffer, index=0) {\r\n  /** @type {number} */\r\n  let i = 0;\r\n  /** @type {number} */\r\n  let len = str.length;\r\n  while (i < len) {\r\n    /** @type {number} */\r\n    let codePoint = str.codePointAt(i);\r\n    if (codePoint < 128) {\r\n      buffer[index] = codePoint;\r\n      index++;\r\n    } else {\r\n      /** @type {number} */\r\n      let count = 0;\r\n      /** @type {number} */\r\n      let offset = 0;\r\n      if (codePoint <= 0x07FF) {\r\n        count = 1;\r\n        offset = 0xC0;\r\n      } else if(codePoint <= 0xFFFF) {\r\n        count = 2;\r\n        offset = 0xE0;\r\n      } else if(codePoint <= 0x10FFFF) {\r\n        count = 3;\r\n        offset = 0xF0;\r\n        i++;\r\n      }\r\n      buffer[index] = (codePoint >> (6 * count)) + offset;\r\n      index++;\r\n      while (count > 0) {\r\n        buffer[index] = 0x80 | (codePoint >> (6 * (count - 1)) & 0x3F);\r\n        index++;\r\n        count--;\r\n      }\r\n    }\r\n    i++;\r\n  }\r\n  return index;\r\n}\n\nexport { pack, unpack };\n","/*\r\n * Copyright (c) 2017-2018 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Encode and decode int numbers to and from byte buffers.\r\n * @see https://github.com/rochars/byte-data\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * A class to write and read integer numbers to and from byte buffers.\r\n */\r\nclass IntParser {\r\n  \r\n  /**\r\n   * @param {number} bits The number of bits used by the integer.\r\n   * @param {boolean} [signed=false] True for signed, false otherwise.\r\n   */\r\n  constructor(bits, signed=false) {\r\n    /**\r\n     * The number of bits used by one number.\r\n     * @type {number}\r\n     */\r\n    this.bits = bits;\r\n    /**\r\n     * The number of bytes used by one number.\r\n     * @type {number}\r\n     */\r\n    this.offset = Math.ceil(bits / 8);\r\n    /**\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    this.max = Math.pow(2, bits) - 1;\r\n    /**\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    this.min = 0;\r\n    /**\r\n     * @type {Function}\r\n     */\r\n    this.unpack = this.unpack_;\r\n    if (signed) {\r\n      this.max = Math.pow(2, bits) / 2 - 1;\r\n      this.min = -this.max - 1;\r\n      this.unpack = this.unpackSigned_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Write one unsigned integer to a byte buffer.\r\n   * @param {!(Uint8Array|Array<number>)} buffer An array of bytes.\r\n   * @param {number} num The number. Overflows are truncated.\r\n   * @param {number} [index=0] The index being written in the byte buffer.\r\n   * @return {number} The next index to write on the byte buffer.\r\n   */\r\n  pack(buffer, num, index=0) {\r\n    num = this.clamp_(Math.round(num));\r\n    for (let i = 0, len = this.offset; i < len; i++) {\r\n      buffer[index] = Math.floor(num / Math.pow(2, i * 8)) & 255;\r\n      index++;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Read one unsigned integer from a byte buffer.\r\n   * Does not check for overflows.\r\n   * @param {!(Uint8Array|Array<number>)} buffer An array of bytes.\r\n   * @param {number} [index=0] The index to read.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  unpack_(buffer, index=0) {\r\n    /** @type {number} */\r\n    let num = 0;\r\n    for(let x = 0; x < this.offset; x++) {\r\n      num += buffer[index + x] * Math.pow(256, x);\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /**\r\n   * Read one two's complement signed integer from a byte buffer.\r\n   * @param {!(Uint8Array|Array<number>)} buffer An array of bytes.\r\n   * @param {number} [index=0] The index to read.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  unpackSigned_(buffer, index=0) {\r\n    return this.sign_(this.unpack_(buffer, index));\r\n  }\r\n\r\n  /**\r\n   * Clamp values on overflow.\r\n   * @param {number} num The number.\r\n   * @private\r\n   */\r\n  clamp_(num) {\r\n    if (num > this.max) {\r\n      return this.max;\r\n    } else if (num < this.min) {\r\n      return this.min;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /**\r\n   * Sign a number.\r\n   * @param {number} num The number.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  sign_(num) {\r\n    if (num > this.max) {\r\n      num -= (this.max * 2) + 2;\r\n    }\r\n    return num;\r\n  }\r\n}\n\nexport { IntParser };\n","/*\r\n * Copyright (c) 2018-2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2013 DeNA Co., Ltd.\r\n * Copyright (c) 2010, Linden Research, Inc\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Encode and decode IEEE 754 floating point numbers.\r\n * @see https://github.com/rochars/byte-data\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://bitbucket.org/lindenlab/llsd/raw/7d2646cd3f9b4c806e73aebc4b32bd81e4047fdc/js/typedarray.js\r\n * @see https://github.com/kazuho/ieee754.js/blob/master/ieee754.js\r\n */\r\n\r\n/**\r\n * A class to encode and decode IEEE 754 floating-point numbers.\r\n */\r\nclass FloatParser {\r\n\r\n  /**\r\n   * Pack a IEEE 754 floating point number.\r\n   * @param {number} ebits The exponent bits.\r\n   * @param {number} fbits The fraction bits.\r\n   */\r\n  constructor(ebits, fbits) {\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.offset = Math.ceil((ebits + fbits) / 8);\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.ebits = ebits;\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.fbits = fbits;\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.bias = (1 << (ebits - 1)) - 1;\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.biasP2 = Math.pow(2, this.bias + 1);\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.ebitsFbits = (ebits + fbits);\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.fbias = Math.pow(2, -(8 * this.offset - 1 - ebits));\r\n  }\r\n\r\n  /**\r\n   * Pack a IEEE 754 floating point number.\r\n   * @param {!Uint8Array|!Array<number>} buffer The buffer.\r\n   * @param {number} num The number.\r\n   * @param {number} index The index to write on the buffer.\r\n   * @return {number} The next index to write on the buffer.\r\n   */\r\n  pack(buffer, num, index) {\r\n    // Round overflows\r\n    if (Math.abs(num) > this.biasP2 - (this.ebitsFbits * 2)) {\r\n      num = num < 0 ? -Infinity : Infinity;\r\n    }\r\n    /**\r\n     * sign, need this to handle negative zero\r\n     * @see http://cwestblog.com/2014/02/25/javascript-testing-for-negative-zero/\r\n     * @type {number}\r\n     */\r\n    let sign = (((num = +num) || 1 / num) < 0) ? 1 : num < 0 ? 1 : 0;\r\n    num = Math.abs(num);\r\n    /** @type {number} */\r\n    let exp = Math.min(Math.floor(Math.log(num) / Math.LN2), 1023);\r\n    /** @type {number} */\r\n    let fraction = roundToEven(num / Math.pow(2, exp) * Math.pow(2, this.fbits));\r\n    // NaN\r\n    if (num !== num) {\r\n      fraction = Math.pow(2, this.fbits - 1);\r\n      exp = (1 << this.ebits) - 1;\r\n    // Number\r\n    } else if (num !== 0) {\r\n      if (num >= Math.pow(2, 1 - this.bias)) {\r\n        if (fraction / Math.pow(2, this.fbits) >= 2) {\r\n          exp = exp + 1;\r\n          fraction = 1;\r\n        }\r\n        // Overflow\r\n        if (exp > this.bias) {\r\n          exp = (1 << this.ebits) - 1;\r\n          fraction = 0;\r\n        } else {\r\n          exp = exp + this.bias;\r\n          fraction = roundToEven(fraction) - Math.pow(2, this.fbits);\r\n        }\r\n      } else {\r\n        fraction = roundToEven(num / Math.pow(2, 1 - this.bias - this.fbits));\r\n        exp = 0;\r\n      } \r\n    }\r\n    return this.packFloatBits_(buffer, index, sign, exp, fraction);\r\n  }\r\n\r\n  /**\r\n   * Unpack a IEEE 754 floating point number.\r\n   * Derived from IEEE754 by DeNA Co., Ltd., MIT License. \r\n   * Adapted to handle NaN. Should port the solution to the original repo.\r\n   * @param {!Uint8Array|!Array<number>} buffer The buffer.\r\n   * @param {number} index The index to read from the buffer.\r\n   * @return {number} The floating point number.\r\n   */\r\n  unpack(buffer, index) {\r\n    /** @type {number} */\r\n    let eMax = (1 << this.ebits) - 1;\r\n    /** @type {number} */\r\n    let significand;\r\n    /** @type {string} */\r\n    let leftBits = \"\";\r\n    for (let i = this.offset - 1; i >= 0 ; i--) {\r\n      /** @type {string} */\r\n      let t = buffer[i + index].toString(2);\r\n      leftBits += \"00000000\".substring(t.length) + t;\r\n    }\r\n    /** @type {number} */\r\n    let sign = leftBits.charAt(0) == \"1\" ? -1 : 1;\r\n    leftBits = leftBits.substring(1);\r\n    /** @type {number} */\r\n    let exponent = parseInt(leftBits.substring(0, this.ebits), 2);\r\n    leftBits = leftBits.substring(this.ebits);\r\n    if (exponent == eMax) {\r\n      if (parseInt(leftBits, 2) !== 0) {\r\n        return NaN;\r\n      }\r\n      return sign * Infinity;  \r\n    } else if (exponent === 0) {\r\n      exponent += 1;\r\n      significand = parseInt(leftBits, 2);\r\n    } else {\r\n      significand = parseInt(\"1\" + leftBits, 2);\r\n    }\r\n    return sign * significand * this.fbias * Math.pow(2, exponent - this.bias);\r\n  }\r\n\r\n  /**\r\n   * Pack a IEEE754 from its sign, exponent and fraction bits\r\n   * and place it in a byte buffer.\r\n   * @param {!Uint8Array|!Array<number>} buffer The byte buffer to write to.\r\n   * @param {number} index The buffer index to write.\r\n   * @param {number} sign The sign.\r\n   * @param {number} exp the exponent.\r\n   * @param {number} fraction The fraction.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  packFloatBits_(buffer, index, sign, exp, fraction) {\r\n    /** @type {!Array<number>} */\r\n    let bits = [];\r\n    // the sign\r\n    bits.push(sign);\r\n    // the exponent\r\n    for (let i = this.ebits; i > 0; i -= 1) {\r\n      bits[i] = (exp % 2 ? 1 : 0);\r\n      exp = Math.floor(exp / 2);\r\n    }\r\n    // the fraction\r\n    let len = bits.length;\r\n    for (let i = this.fbits; i > 0; i -= 1) {\r\n      bits[len + i] = (fraction % 2 ? 1 : 0);\r\n      fraction = Math.floor(fraction / 2);\r\n    }\r\n    // pack as bytes\r\n    /** @type {string} */\r\n    let str = bits.join('');\r\n    /** @type {number} */\r\n    let offset = this.offset + index - 1;\r\n    /** @type {number} */\r\n    let k = index;\r\n    while (offset >= index) {\r\n      buffer[offset] = parseInt(str.substring(0, 8), 2);\r\n      str = str.substring(8);\r\n      offset--;\r\n      k++;\r\n    }\r\n    return k;\r\n  }\r\n}\r\n\r\n/**\r\n * Round a number to its nearest even value.\r\n * @param {number} n The number.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction roundToEven(n) {\r\n  /** @type {number} */\r\n  let w = Math.floor(n);\r\n  let f = n - w;\r\n  if (f < 0.5) {\r\n    return w;\r\n  }\r\n  if (f > 0.5) {\r\n    return w + 1;\r\n  }\r\n  return w % 2 ? w + 1 : w;\r\n}\n\nexport { FloatParser };\n","import { endianness } from './lib/endianness.js';\nimport { pack as pack$1, unpack as unpack$1 } from './lib/utf8-parser.js';\nimport { IntParser } from './lib/int-parser.js';\nimport { FloatParser } from './lib/float-parser.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * Read a string of UTF-8 characters from a byte buffer.\r\n * @param {!(Uint8Array|Array<number>)} buffer A byte buffer.\r\n * @param {number} [index=0] The buffer index to start reading.\r\n * @param {number} [end=buffer.length] The index to stop reading, non inclusive.\r\n * @return {string}\r\n */\r\nfunction unpackString(buffer, index=0, end=buffer.length) {\r\n  return unpack$1(buffer, index, end);\r\n}\r\n\r\n/**\r\n * Write a string of UTF-8 characters as a byte buffer.\r\n * @param {string} str The string to pack.\r\n * @return {!Array<number>} The UTF-8 string bytes.\r\n */\r\nfunction packString(str) {\r\n  /** @type {!Array<number>} */\r\n  let buffer = [];\r\n  pack$1(str, buffer);\r\n  return buffer;\r\n}\r\n\r\n/**\r\n * Write a string of UTF-8 characters to a byte buffer.\r\n * @param {string} str The string to pack.\r\n * @param {!(Uint8Array|Array<number>)} buffer The output buffer.\r\n * @param {number} [index=0] The buffer index to start writing.\r\n * @return {number} The next index to write in the buffer.\r\n */\r\nfunction packStringTo(str, buffer, index=0) {\r\n  return pack$1(str, buffer, index);\r\n}\r\n\r\n// Numbers\r\n/**\r\n * Pack a array of numbers to a byte buffer.\r\n * All other packing functions are interfaces to this function.\r\n * @param {!(Array<number>|TypedArray)} values The values to pack.\r\n * @param {!{bits:number,\r\n *   fp: (boolean|undefined),\r\n *   signed: (boolean|undefined),\r\n *   be: (boolean|undefined)}} theType The type definition.\r\n * @param {!(Uint8Array|Array<number>)} buffer The buffer to write on.\r\n * @param {number} [index=0] The buffer index to start writing.\r\n * @return {number} The next index to write.\r\n * @throws {Error} If the type definition is not valid.\r\n */\r\nfunction packArrayTo(values, theType, buffer, index=0) {\r\n  theType = theType || {};\r\n  /** @type {!Object} */\r\n  let packer = getParser_(theType.bits, theType.fp, theType.signed);\r\n  /** @type {number} */\r\n  let offset = Math.ceil(theType.bits / 8);\r\n  /** @type {number} */\r\n  let i = 0;\r\n  /** @type {number} */\r\n  let start = index;\r\n  for (let valuesLen = values.length; i < valuesLen; i++) {\r\n    index = packer.pack(buffer, values[i], index);\r\n  }\r\n  if (theType.be) {\r\n    endianness(buffer, offset, start, index);\r\n  }\r\n  return index;\r\n}\r\n\r\n/**\r\n * Unpack a array of numbers from a byte buffer to a array or a typed array.\r\n * All other unpacking functions are interfaces to this function.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer.\r\n * @param {!{bits:number,\r\n *   fp: (boolean|undefined),\r\n *   signed: (boolean|undefined),\r\n *   be: (boolean|undefined)}} theType The type definition.\r\n * @param {!(TypedArray|Array<number>)} output The output array or typed array.\r\n * @param {number} [start=0] The buffer index to start reading.\r\n * @param {number} [end=buffer.length] The buffer index to stop reading.\r\n * @throws {Error} If the type definition is not valid.\r\n */\r\nfunction unpackArrayTo(\r\n    buffer, theType, output, start=0, end=buffer.length) {\r\n  theType = theType || {};\r\n  /** @type {!Object} */\r\n  let parser = getParser_(theType.bits, theType.fp, theType.signed);\r\n  // getUnpackLen_ will adjust the end index according to the size\r\n  // of the input buffer and the byte offset or throw a error on bad\r\n  // end index if safe=true\r\n  end = getUnpackLen_(buffer, start, end, parser.offset);\r\n  if (theType.be) {\r\n    /** @type {!(Uint8Array|Array<number>)} */\r\n    let readBuffer = copyBuffer_(buffer);\r\n    if (theType.be) {\r\n      endianness(readBuffer, parser.offset, start, end);\r\n    }\r\n    unpack_(readBuffer, output, start, end, parser);\r\n  } else {\r\n    unpack_(buffer, output, start, end, parser);\r\n  }\r\n}\r\n\r\n/**\r\n * Pack a number to a byte buffer.\r\n * @param {number} value The value.\r\n * @param {!{bits:number,\r\n *   fp: (boolean|undefined),\r\n *   signed: (boolean|undefined),\r\n *   be: (boolean|undefined)}} theType The type definition.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer to write on.\r\n * @param {number} [index=0] The buffer index to write.\r\n * @return {number} The next index to write.\r\n * @throws {Error} If the type definition is not valid.\r\n */\r\nfunction packTo(value, theType, buffer, index=0) {\r\n  return packArrayTo([value], theType, buffer, index);\r\n}\r\n\r\n/**\r\n * Pack a number as a array of bytes.\r\n * @param {number} value The number to pack.\r\n * @param {!{bits:number,\r\n *   fp: (boolean|undefined),\r\n *   signed: (boolean|undefined),\r\n *   be: (boolean|undefined)}} theType The type definition.\r\n * @return {!Array<number>} The packed value.\r\n * @throws {Error} If the type definition is not valid.\r\n */\r\nfunction pack(value, theType) {\r\n  /** @type {!Array<number>} */\r\n  let output = [];\r\n  packTo(value, theType, output, 0);\r\n  return output;\r\n}\r\n\r\n/**\r\n * Unpack a number from a byte buffer.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer.\r\n * @param {!{bits:number,\r\n *   fp: (boolean|undefined),\r\n *   signed: (boolean|undefined),\r\n *   be: (boolean|undefined)}} theType The type definition.\r\n * @param {number} [index=0] The buffer index to read.\r\n * @return {number}\r\n * @throws {Error} If the type definition is not valid.\r\n */\r\nfunction unpack(buffer, theType, index=0) {\r\n  let output = [];\r\n  unpackArrayTo(buffer, theType, output,\r\n    index, index + Math.ceil(theType.bits / 8));\r\n  return output[0];\r\n}\r\n\r\n/**\r\n * Unpack a array of numbers from a byte buffer to a array or a typed array.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer.\r\n * @param {!(TypedArray|Array<number>)} output The output array or typed array.\r\n * @param {number} start The buffer index to start reading.\r\n * @param {number} end The buffer index to stop reading.\r\n * @param {!Object} parser The parser.\r\n * @private\r\n */\r\nfunction unpack_(buffer, output, start, end, parser) {\r\n  /** @type {number} */\r\n  let offset = parser.offset;\r\n  for (let index = 0, j = start; j < end; j += offset, index++) {\r\n    output[index] = parser.unpack(buffer, j);\r\n  }\r\n}\r\n\r\n/**\r\n * Copy a byte buffer as a Array or Uint8Array.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer.\r\n * @return {!(Uint8Array|Array<number>)}\r\n * @private\r\n */\r\nfunction copyBuffer_(buffer) {\r\n  return new Uint8Array(buffer);\r\n}\r\n\r\n/**\r\n * Adjust the end index according to the input buffer length and the\r\n * type offset.\r\n * @param {!(Uint8Array|Array<number>)} buffer The byte buffer.\r\n * @param {number} start The buffer index to start reading.\r\n * @param {number} end The buffer index to stop reading.\r\n * @param {number} offset The number of bytes used by the type.\r\n * @private\r\n */\r\nfunction getUnpackLen_(buffer, start, end, offset) {\r\n  /** @type {number} */\r\n  let extra = (end - start) % offset;\r\n  return end - extra;\r\n}\r\n\r\n/**\r\n * Return a parser for int, uint or fp numbers.\r\n * @param {number} bits The number of bits.\r\n * @param {boolean|undefined} fp True for fp numbers, false otherwise.\r\n * @param {boolean|undefined} signed True for signed ints, false otherwise.\r\n * @return {!Object}\r\n * @private\r\n */\r\nfunction getParser_(bits, fp, signed) {\r\n  if (fp && bits == 32) {\r\n    return new FloatParser(8, 23);\r\n  } else if(fp && bits == 64) {\r\n    return new FloatParser(11, 52);\r\n  }\r\n  return new IntParser(bits, signed);\r\n}\n\nexport { pack, packArrayTo, packString, packStringTo, packTo, unpack, unpackArrayTo, unpackString };\n","import { unpackString, unpack } from './parsers/binary/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to perform low-level reading of RIFF/RIFX files.\r\n */\r\nclass RIFFFile {\r\n\r\n  constructor() {\r\n    /**\r\n     * The container identifier.\r\n     * 'RIFF', 'RIFX' and 'RF64' are supported.\r\n     * @type {string}\r\n     */\r\n    this.container = '';\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.chunkSize = 0;\r\n    /**\r\n     * The format.\r\n     * @type {string}\r\n     */\r\n    this.format = '';\r\n    /**\r\n     * A object defining the start and end of all chunks in a wav buffer.\r\n     * @type {Object}\r\n     */\r\n    this.signature = null;\r\n    /**\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    this.head = 0;\r\n    /**\r\n     * @type {!{bits: number, be: boolean}}\r\n     * @protected\r\n     */\r\n    this.uInt32 = {bits: 32, be: false};\r\n    /**\r\n     * The list of supported containers.\r\n     * Any format different from RIFX will be treated as RIFF.\r\n     * @type {!Array<string>}\r\n     * @protected\r\n     */\r\n    this.supported_containers = ['RIFF', 'RIFX'];\r\n  }\r\n\r\n  /**\r\n   * Read the signature of the chunks in a RIFF/RIFX file.\r\n   * @param {!Uint8Array} buffer The file bytes.\r\n   * @protected\r\n   */\r\n  setSignature(buffer) {\r\n    this.head = 0;\r\n    this.container = this.readString(buffer, 4);\r\n    if (this.supported_containers.indexOf(this.container) === -1) {\r\n      throw Error('Not a supported format.');\r\n    }\r\n    this.uInt32.be = this.container === 'RIFX';\r\n    this.chunkSize = this.readUInt32(buffer);\r\n    this.format = this.readString(buffer, 4);\r\n    // The RIFF file signature\r\n    this.signature = {\r\n      chunkId: this.container,\r\n      chunkSize: this.chunkSize,\r\n      format: this.format,\r\n      subChunks: this.getSubChunksIndex_(buffer)\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Find a chunk by its fourCC_ in a array of RIFF chunks.\r\n    * @param {string} chunkId The chunk fourCC_.\r\n    * @param {boolean} [multiple=false] True if there may be multiple chunks\r\n    *    with the same chunkId.\r\n    * @return {Object}\r\n    * @protected\r\n    */\r\n  findChunk(chunkId, multiple=false) {\r\n    /** @type {!Array<Object>} */\r\n    let chunks = this.signature.subChunks;\r\n    /** @type {!Array<Object>} */\r\n    let chunk = [];\r\n    for (let i=0; i<chunks.length; i++) {\r\n      if (chunks[i].chunkId == chunkId) {\r\n        if (multiple) {\r\n          chunk.push(chunks[i]);\r\n        } else {\r\n          return chunks[i];\r\n        }\r\n      }\r\n    }\r\n    if (chunkId == 'LIST') {\r\n      return chunk.length ? chunk : null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Read bytes as a string from a RIFF chunk.\r\n   * @param {!Uint8Array} bytes The bytes.\r\n   * @param {number} maxSize the max size of the string.\r\n   * @return {string} The string.\r\n   * @protected\r\n   */\r\n  readString(bytes, maxSize) {\r\n    /** @type {string} */\r\n    let str = '';\r\n    str = unpackString(bytes, this.head, this.head + maxSize);\r\n    this.head += maxSize;\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Read a number from a chunk.\r\n   * @param {!Uint8Array} bytes The chunk bytes.\r\n   * @return {number} The number.\r\n   * @protected\r\n   */\r\n  readUInt32(bytes) {\r\n    /** @type {number} */\r\n    let value = unpack(bytes, this.uInt32, this.head);\r\n    this.head += 4;\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Return the sub chunks of a RIFF file.\r\n   * @param {!Uint8Array} buffer the RIFF file bytes.\r\n   * @return {!Array<Object>} The subchunks of a RIFF/RIFX or LIST chunk.\r\n   * @private\r\n   */\r\n  getSubChunksIndex_(buffer) {\r\n    /** @type {!Array<!Object>} */\r\n    let chunks = [];\r\n    /** @type {number} */\r\n    let i = this.head;\r\n    while(i <= buffer.length - 8) {\r\n      chunks.push(this.getSubChunkIndex_(buffer, i));\r\n      i += 8 + chunks[chunks.length - 1].chunkSize;\r\n      i = i % 2 ? i + 1 : i;\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  /**\r\n   * Return a sub chunk from a RIFF file.\r\n   * @param {!Uint8Array} buffer the RIFF file bytes.\r\n   * @param {number} index The start index of the chunk.\r\n   * @return {!Object} A subchunk of a RIFF/RIFX or LIST chunk.\r\n   * @private\r\n   */\r\n  getSubChunkIndex_(buffer, index) {\r\n    /** @type {!Object} */\r\n    let chunk = {\r\n      chunkId: this.getChunkId_(buffer, index),\r\n      chunkSize: this.getChunkSize_(buffer, index),\r\n    };\r\n    if (chunk.chunkId == 'LIST') {\r\n      chunk.format = unpackString(buffer, index + 8, index + 12);\r\n      this.head += 4;\r\n      chunk.subChunks = this.getSubChunksIndex_(buffer);\r\n    } else {\r\n      /** @type {number} */\r\n      let realChunkSize = chunk.chunkSize % 2 ?\r\n        chunk.chunkSize + 1 : chunk.chunkSize;\r\n      this.head = index + 8 + realChunkSize;\r\n      chunk.chunkData = {\r\n        start: index + 8,\r\n        end: this.head\r\n      };\r\n    }\r\n    return chunk;\r\n  }\r\n\r\n  /**\r\n   * Return the fourCC_ of a chunk.\r\n   * @param {!Uint8Array} buffer the RIFF file bytes.\r\n   * @param {number} index The start index of the chunk.\r\n   * @return {string} The id of the chunk.\r\n   * @private\r\n   */\r\n  getChunkId_(buffer, index) {\r\n    this.head += 4;\r\n    return unpackString(buffer, index, index + 4);\r\n  }\r\n\r\n  /**\r\n   * Return the size of a chunk.\r\n   * @param {!Uint8Array} buffer the RIFF file bytes.\r\n   * @param {number} index The start index of the chunk.\r\n   * @return {number} The size of the chunk without the id and size fields.\r\n   * @private\r\n   */\r\n  getChunkSize_(buffer, index) {\r\n    this.head += 4;\r\n    return unpack(buffer, this.uInt32, index + 4);\r\n  }\r\n}\n\nexport { RIFFFile };\n","import { RIFFFile } from './riff-file.js';\nimport { unpackString, unpack } from './parsers/binary/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to read wav files.\r\n * @extends RIFFFile\r\n */\r\nclass WaveFileReader extends RIFFFile {\r\n\r\n  constructor() {\r\n    super();\r\n    // Include 'RF64' as a supported container format\r\n    this.supported_containers.push('RF64');\r\n    /**\r\n     * The data of the 'fmt' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.fmt = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {number} */\r\n      audioFormat: 0,\r\n      /** @type {number} */\r\n      numChannels: 0,\r\n      /** @type {number} */\r\n      sampleRate: 0,\r\n      /** @type {number} */\r\n      byteRate: 0,\r\n      /** @type {number} */\r\n      blockAlign: 0,\r\n      /** @type {number} */\r\n      bitsPerSample: 0,\r\n      /** @type {number} */\r\n      cbSize: 0,\r\n      /** @type {number} */\r\n      validBitsPerSample: 0,\r\n      /** @type {number} */\r\n      dwChannelMask: 0,\r\n      /**\r\n       * 4 32-bit values representing a 128-bit ID\r\n       * @type {!Array<number>}\r\n       */\r\n      subformat: []\r\n    };\r\n    /**\r\n     * The data of the 'fact' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.fact = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {number} */\r\n      dwSampleLength: 0\r\n    };\r\n    /**\r\n     * The data of the 'cue ' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.cue = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {number} */\r\n      dwCuePoints: 0,\r\n      /** @type {!Array<!Object>} */\r\n      points: [],\r\n    };\r\n    /**\r\n     * The data of the 'smpl' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.smpl = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {number} */\r\n      dwManufacturer: 0,\r\n      /** @type {number} */\r\n      dwProduct: 0,\r\n      /** @type {number} */\r\n      dwSamplePeriod: 0,\r\n      /** @type {number} */\r\n      dwMIDIUnityNote: 0,\r\n      /** @type {number} */\r\n      dwMIDIPitchFraction: 0,\r\n      /** @type {number} */\r\n      dwSMPTEFormat: 0,\r\n      /** @type {number} */\r\n      dwSMPTEOffset: 0,\r\n      /** @type {number} */\r\n      dwNumSampleLoops: 0,\r\n      /** @type {number} */\r\n      dwSamplerData: 0,\r\n      /** @type {!Array<!Object>} */\r\n      loops: []\r\n    };\r\n    /**\r\n     * The data of the 'bext' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.bext = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {string} */\r\n      description: '', //256\r\n      /** @type {string} */\r\n      originator: '', //32\r\n      /** @type {string} */\r\n      originatorReference: '', //32\r\n      /** @type {string} */\r\n      originationDate: '', //10\r\n      /** @type {string} */\r\n      originationTime: '', //8\r\n      /**\r\n       * 2 32-bit values, timeReference high and low\r\n       * @type {!Array<number>}\r\n       */\r\n      timeReference: [0, 0],\r\n      /** @type {number} */\r\n      version: 0, //WORD\r\n      /** @type {string} */\r\n      UMID: '', // 64 chars\r\n      /** @type {number} */\r\n      loudnessValue: 0, //WORD\r\n      /** @type {number} */\r\n      loudnessRange: 0, //WORD\r\n      /** @type {number} */\r\n      maxTruePeakLevel: 0, //WORD\r\n      /** @type {number} */\r\n      maxMomentaryLoudness: 0, //WORD\r\n      /** @type {number} */\r\n      maxShortTermLoudness: 0, //WORD\r\n      /** @type {string} */\r\n      reserved: '', //180\r\n      /** @type {string} */\r\n      codingHistory: '' // string, unlimited\r\n    };\r\n    /**\r\n     * The data of the 'iXML' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.iXML = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {string} */\r\n      value: ''\r\n    };\r\n    /**\r\n     * The data of the 'ds64' chunk.\r\n     * Used only with RF64 files.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.ds64 = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {number} */\r\n      riffSizeHigh: 0, // DWORD\r\n      /** @type {number} */\r\n      riffSizeLow: 0, // DWORD\r\n      /** @type {number} */\r\n      dataSizeHigh: 0, // DWORD\r\n      /** @type {number} */\r\n      dataSizeLow: 0, // DWORD\r\n      /** @type {number} */\r\n      originationTime: 0, // DWORD\r\n      /** @type {number} */\r\n      sampleCountHigh: 0, // DWORD\r\n      /** @type {number} */\r\n      sampleCountLow: 0 // DWORD\r\n      /** @type {number} */\r\n      //'tableLength': 0, // DWORD\r\n      /** @type {!Array<number>} */\r\n      //'table': []\r\n    };\r\n    /**\r\n     * The data of the 'data' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.data = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {!Uint8Array} */\r\n      samples: new Uint8Array(0)\r\n    };\r\n    /**\r\n     * The data of the 'LIST' chunks.\r\n     * Each item in this list look like this:\r\n     *  {\r\n     *      chunkId: '',\r\n     *      chunkSize: 0,\r\n     *      format: '',\r\n     *      subChunks: []\r\n     *   }\r\n     * @type {!Array<!Object>}\r\n     */\r\n    this.LIST = [];\r\n    /**\r\n     * The data of the 'junk' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.junk = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {!Array<number>} */\r\n      chunkData: []\r\n    };\r\n    /**\r\n     * The data of the '_PMX' chunk.\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this._PMX = {\r\n      /** @type {string} */\r\n      chunkId: '',\r\n      /** @type {number} */\r\n      chunkSize: 0,\r\n      /** @type {string} */\r\n      value: ''\r\n    };\r\n    /**\r\n     * @type {{be: boolean, bits: number, fp: boolean, signed: boolean}}\r\n     * @protected\r\n     */\r\n    this.uInt16 = {bits: 16, be: false, signed: false, fp: false};\r\n  }\r\n\r\n  /**\r\n   * Set up the WaveFileReader object from a byte buffer.\r\n   * @param {!Uint8Array} wavBuffer The buffer.\r\n   * @param {boolean=} [samples=true] True if the samples should be loaded.\r\n   * @throws {Error} If container is not RIFF, RIFX or RF64.\r\n   * @throws {Error} If format is not WAVE.\r\n   * @throws {Error} If no 'fmt ' chunk is found.\r\n   * @throws {Error} If no 'data' chunk is found.\r\n   */\r\n  fromBuffer(wavBuffer, samples=true) {\r\n    // Always should reset the chunks when reading from a buffer\r\n    this.clearHeaders();\r\n    this.setSignature(wavBuffer);\r\n    this.uInt16.be = this.uInt32.be;\r\n    if (this.format != 'WAVE') {\r\n      throw Error('Could not find the \"WAVE\" format identifier');\r\n    }\r\n    this.readDs64Chunk_(wavBuffer);\r\n    this.readFmtChunk_(wavBuffer);\r\n    this.readFactChunk_(wavBuffer);\r\n    this.readBextChunk_(wavBuffer);\r\n    this.readiXMLChunk_(wavBuffer);\r\n    this.readCueChunk_(wavBuffer);\r\n    this.readSmplChunk_(wavBuffer);\r\n    this.readDataChunk_(wavBuffer, samples);\r\n    this.readJunkChunk_(wavBuffer);\r\n    this.readLISTChunk_(wavBuffer);\r\n    this.read_PMXChunk_(wavBuffer);\r\n  }\r\n\r\n  /**\r\n   * Reset the chunks of the WaveFileReader instance.\r\n   * @protected\r\n   * @ignore\r\n   */\r\n  clearHeaders() {\r\n    /** @type {!Object} */\r\n    let tmpWav = new WaveFileReader();\r\n    Object.assign(this.fmt, tmpWav.fmt);\r\n    Object.assign(this.fact, tmpWav.fact);\r\n    Object.assign(this.cue, tmpWav.cue);\r\n    Object.assign(this.smpl, tmpWav.smpl);\r\n    Object.assign(this.bext, tmpWav.bext);\r\n    Object.assign(this.iXML, tmpWav.iXML);\r\n    Object.assign(this.ds64, tmpWav.ds64);\r\n    Object.assign(this.data, tmpWav.data);\r\n    this.LIST = [];\r\n    Object.assign(this.junk, tmpWav.junk);\r\n    Object.assign(this._PMX, tmpWav._PMX);\r\n  }\r\n  \r\n  /**\r\n   * Read the 'fmt ' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @throws {Error} If no 'fmt ' chunk is found.\r\n   * @private\r\n   */\r\n  readFmtChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('fmt ');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.fmt.chunkId = chunk.chunkId;\r\n      this.fmt.chunkSize = chunk.chunkSize;\r\n      this.fmt.audioFormat = this.readUInt16_(buffer);\r\n      this.fmt.numChannels = this.readUInt16_(buffer);\r\n      this.fmt.sampleRate = this.readUInt32(buffer);\r\n      this.fmt.byteRate = this.readUInt32(buffer);\r\n      this.fmt.blockAlign = this.readUInt16_(buffer);\r\n      this.fmt.bitsPerSample = this.readUInt16_(buffer);\r\n      this.readFmtExtension_(buffer);\r\n    } else {\r\n      throw Error('Could not find the \"fmt \" chunk');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'fmt ' chunk extension.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readFmtExtension_(buffer) {\r\n    if (this.fmt.chunkSize > 16) {\r\n      this.fmt.cbSize = this.readUInt16_(buffer);\r\n      if (this.fmt.chunkSize > 18) {\r\n        this.fmt.validBitsPerSample = this.readUInt16_(buffer);\r\n        if (this.fmt.chunkSize > 20) {\r\n          this.fmt.dwChannelMask = this.readUInt32(buffer);\r\n          this.fmt.subformat = [\r\n            this.readUInt32(buffer),\r\n            this.readUInt32(buffer),\r\n            this.readUInt32(buffer),\r\n            this.readUInt32(buffer)];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'fact' chunk of a wav file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readFactChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('fact');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.fact.chunkId = chunk.chunkId;\r\n      this.fact.chunkSize = chunk.chunkSize;\r\n      this.fact.dwSampleLength = this.readUInt32(buffer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'cue ' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readCueChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('cue ');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.cue.chunkId = chunk.chunkId;\r\n      this.cue.chunkSize = chunk.chunkSize;\r\n      this.cue.dwCuePoints = this.readUInt32(buffer);\r\n      for (let i = 0; i < this.cue.dwCuePoints; i++) {\r\n        this.cue.points.push({\r\n          dwName: this.readUInt32(buffer),\r\n          dwPosition: this.readUInt32(buffer),\r\n          fccChunk: this.readString(buffer, 4),\r\n          dwChunkStart: this.readUInt32(buffer),\r\n          dwBlockStart: this.readUInt32(buffer),\r\n          dwSampleOffset: this.readUInt32(buffer),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'smpl' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readSmplChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('smpl');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.smpl.chunkId = chunk.chunkId;\r\n      this.smpl.chunkSize = chunk.chunkSize;\r\n      this.smpl.dwManufacturer = this.readUInt32(buffer);\r\n      this.smpl.dwProduct = this.readUInt32(buffer);\r\n      this.smpl.dwSamplePeriod = this.readUInt32(buffer);\r\n      this.smpl.dwMIDIUnityNote = this.readUInt32(buffer);\r\n      this.smpl.dwMIDIPitchFraction = this.readUInt32(buffer);\r\n      this.smpl.dwSMPTEFormat = this.readUInt32(buffer);\r\n      this.smpl.dwSMPTEOffset = this.readUInt32(buffer);\r\n      this.smpl.dwNumSampleLoops = this.readUInt32(buffer);\r\n      this.smpl.dwSamplerData = this.readUInt32(buffer);\r\n      for (let i = 0; i < this.smpl.dwNumSampleLoops; i++) {\r\n        this.smpl.loops.push({\r\n          dwName: this.readUInt32(buffer),\r\n          dwType: this.readUInt32(buffer),\r\n          dwStart: this.readUInt32(buffer),\r\n          dwEnd: this.readUInt32(buffer),\r\n          dwFraction: this.readUInt32(buffer),\r\n          dwPlayCount: this.readUInt32(buffer),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'data' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @param {boolean} samples True if the samples should be loaded.\r\n   * @throws {Error} If no 'data' chunk is found.\r\n   * @private\r\n   */\r\n  readDataChunk_(buffer, samples) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('data');\r\n    if (chunk) {\r\n      this.data.chunkId = 'data';\r\n      this.data.chunkSize = chunk.chunkSize;\r\n      if (samples) {\r\n        this.data.samples = buffer.slice(\r\n          chunk.chunkData.start,\r\n          chunk.chunkData.end);\r\n      }\r\n    } else {\r\n      throw Error('Could not find the \"data\" chunk');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'bext' chunk of a wav file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readBextChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('bext');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.bext.chunkId = chunk.chunkId;\r\n      this.bext.chunkSize = chunk.chunkSize;\r\n      this.bext.description = this.readString(buffer, 256);\r\n      this.bext.originator = this.readString(buffer, 32);\r\n      this.bext.originatorReference = this.readString(buffer, 32);\r\n      this.bext.originationDate = this.readString(buffer, 10);\r\n      this.bext.originationTime = this.readString(buffer, 8);\r\n      this.bext.timeReference = [\r\n        this.readUInt32(buffer),\r\n        this.readUInt32(buffer)];\r\n      this.bext.version = this.readUInt16_(buffer);\r\n      this.bext.UMID = this.readString(buffer, 64);\r\n      this.bext.loudnessValue = this.readUInt16_(buffer);\r\n      this.bext.loudnessRange = this.readUInt16_(buffer);\r\n      this.bext.maxTruePeakLevel = this.readUInt16_(buffer);\r\n      this.bext.maxMomentaryLoudness = this.readUInt16_(buffer);\r\n      this.bext.maxShortTermLoudness = this.readUInt16_(buffer);\r\n      this.bext.reserved = this.readString(buffer, 180);\r\n      this.bext.codingHistory = this.readString(\r\n        buffer, this.bext.chunkSize - 602);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'iXML' chunk of a wav file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readiXMLChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('iXML');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.iXML.chunkId = chunk.chunkId;\r\n      this.iXML.chunkSize = chunk.chunkSize;\r\n      this.iXML.value = unpackString(\r\n        buffer, this.head, this.head + this.iXML.chunkSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'ds64' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @throws {Error} If no 'ds64' chunk is found and the file is RF64.\r\n   * @private\r\n   */\r\n  readDs64Chunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('ds64');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this.ds64.chunkId = chunk.chunkId;\r\n      this.ds64.chunkSize = chunk.chunkSize;\r\n      this.ds64.riffSizeHigh = this.readUInt32(buffer);\r\n      this.ds64.riffSizeLow = this.readUInt32(buffer);\r\n      this.ds64.dataSizeHigh = this.readUInt32(buffer);\r\n      this.ds64.dataSizeLow = this.readUInt32(buffer);\r\n      this.ds64.originationTime = this.readUInt32(buffer);\r\n      this.ds64.sampleCountHigh = this.readUInt32(buffer);\r\n      this.ds64.sampleCountLow = this.readUInt32(buffer);\r\n      //if (wav.ds64.chunkSize > 28) {\r\n      //  wav.ds64.tableLength = unpack(\r\n      //    chunkData.slice(28, 32), uInt32_);\r\n      //  wav.ds64.table = chunkData.slice(\r\n      //     32, 32 + wav.ds64.tableLength);\r\n      //}\r\n    } else {\r\n      if (this.container == 'RF64') {\r\n        throw Error('Could not find the \"ds64\" chunk');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the 'LIST' chunks of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readLISTChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let listChunks = this.findChunk('LIST', true);\r\n    if (listChunks !== null) {\r\n      for (let j=0; j < listChunks.length; j++) {\r\n        /** @type {!Object} */\r\n        let subChunk = listChunks[j];\r\n        this.LIST.push({\r\n          chunkId: subChunk.chunkId,\r\n          chunkSize: subChunk.chunkSize,\r\n          format: subChunk.format,\r\n          subChunks: []});\r\n        for (let x=0; x<subChunk.subChunks.length; x++) {\r\n          this.readLISTSubChunks_(subChunk.subChunks[x],\r\n            subChunk.format, buffer);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the sub chunks of a 'LIST' chunk.\r\n   * @param {!Object} subChunk The 'LIST' subchunks.\r\n   * @param {string} format The 'LIST' format, 'adtl' or 'INFO'.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readLISTSubChunks_(subChunk, format, buffer) {\r\n    if (format == 'adtl') {\r\n      if (['labl', 'note','ltxt'].indexOf(subChunk.chunkId) > -1) {\r\n        this.readLISTadtlSubChunks_(buffer, subChunk);\r\n      }\r\n    // RIFF INFO tags like ICRD, ISFT, ICMT\r\n    } else if(format == 'INFO') {\r\n      this.readLISTINFOSubChunks_(buffer, subChunk);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the sub chunks of a 'LIST' chunk of type 'adtl'.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @param {!Object} subChunk The 'LIST' subchunks.\r\n   * @private\r\n   */\r\n  readLISTadtlSubChunks_(buffer, subChunk) {\r\n    this.head = subChunk.chunkData.start;\r\n    /** @type {!Object<string, string|number>} */\r\n    let item = {\r\n      chunkId: subChunk.chunkId,\r\n      chunkSize: subChunk.chunkSize,\r\n      dwName: this.readUInt32(buffer)\r\n    };\r\n    if (subChunk.chunkId == 'ltxt') {\r\n      item.dwSampleLength = this.readUInt32(buffer);\r\n      item.dwPurposeID = this.readUInt32(buffer);\r\n      item.dwCountry = this.readUInt16_(buffer);\r\n      item.dwLanguage = this.readUInt16_(buffer);\r\n      item.dwDialect = this.readUInt16_(buffer);\r\n      item.dwCodePage = this.readUInt16_(buffer);\r\n      item.value = ''; // kept for compatibility\r\n    } else {\r\n      item.value = this.readZSTR_(buffer, this.head);\r\n    }\r\n    this.LIST[this.LIST.length - 1].subChunks.push(item);\r\n  }\r\n\r\n  /**\r\n   * Read the sub chunks of a 'LIST' chunk of type 'INFO'.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @param {!Object} subChunk The 'LIST' subchunks.\r\n   * @private\r\n   */\r\n  readLISTINFOSubChunks_(buffer, subChunk) {\r\n    this.head = subChunk.chunkData.start;\r\n    this.LIST[this.LIST.length - 1].subChunks.push({\r\n      chunkId: subChunk.chunkId,\r\n      chunkSize: subChunk.chunkSize,\r\n      value: this.readZSTR_(buffer, this.head)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Read the 'junk' chunk of a wave file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  readJunkChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('junk');\r\n    if (chunk) {\r\n      this.junk = {\r\n        chunkId: chunk.chunkId,\r\n        chunkSize: chunk.chunkSize,\r\n        chunkData: [].slice.call(buffer.slice(\r\n          chunk.chunkData.start,\r\n          chunk.chunkData.end))\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read the '_PMX' chunk of a wav file.\r\n   * @param {!Uint8Array} buffer The wav file buffer.\r\n   * @private\r\n   */\r\n  read_PMXChunk_(buffer) {\r\n    /** @type {?Object} */\r\n    let chunk = this.findChunk('_PMX');\r\n    if (chunk) {\r\n      this.head = chunk.chunkData.start;\r\n      this._PMX.chunkId = chunk.chunkId;\r\n      this._PMX.chunkSize = chunk.chunkSize;\r\n      this._PMX.value = unpackString(\r\n        buffer, this.head, this.head + this._PMX.chunkSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read bytes as a ZSTR string.\r\n   * @param {!Uint8Array} bytes The bytes.\r\n   * @param {number=} [index=0] the index to start reading.\r\n   * @return {string} The string.\r\n   * @private\r\n   */\r\n  readZSTR_(bytes, index=0) {\r\n    for (let i = index; i < bytes.length; i++) {\r\n      this.head++;\r\n      if (bytes[i] === 0) {\r\n        break;\r\n      }\r\n    }\r\n    return unpackString(bytes, index, this.head - 1);\r\n  }\r\n\r\n  /**\r\n   * Read a number from a chunk.\r\n   * @param {!Uint8Array} bytes The chunk bytes.\r\n   * @return {number} The number.\r\n   * @private\r\n   */\r\n  readUInt16_(bytes) {\r\n    /** @type {number} */\r\n    let value = unpack(bytes, this.uInt16, this.head);\r\n    this.head += 2;\r\n    return value;\r\n  }\r\n}\n\nexport { WaveFileReader };\n","import { packString } from './binary/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * Pack a string an array of bytes. If the packed string length is smaller\r\n * than the desired byte length the output array is filled with 0s.\r\n * @param {string} str The string to be written as bytes.\r\n * @param {number} byteLength the size of the string in bytes.\r\n * @return {!Array<number>} The packed string.\r\n */\r\nfunction writeString(str, byteLength) {\r\n  /** @type {!Array<number>} */   \r\n  let packedString = packString(str);\r\n  for (let i = packedString.length; i < byteLength; i++) {\r\n    packedString.push(0);\r\n  }\r\n  return packedString;\r\n}\n\nexport { writeString };\n","import { WaveFileReader } from './wavefile-reader.js';\nimport { writeString } from './parsers/write-string.js';\nimport { packString, pack, packStringTo, packTo } from './parsers/binary/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to read and write wav files.\r\n * @extends WaveFileReader\r\n */\r\nclass WaveFileParser extends WaveFileReader {\r\n\r\n  /**\r\n   * Return a byte buffer representig the WaveFileParser object as a .wav file.\r\n   * The return value of this method can be written straight to disk.\r\n   * @return {!Uint8Array} A wav file.\r\n   */\r\n  toBuffer() {\r\n    this.uInt16.be = this.container === 'RIFX';\r\n    this.uInt32.be = this.uInt16.be;\r\n    /** @type {!Array<!Array<number>>} */\r\n    let fileBody = [\r\n      this.getJunkBytes_(),\r\n      this.getDs64Bytes_(),\r\n      this.getBextBytes_(),\r\n      this.getiXMLBytes_(),\r\n      this.getFmtBytes_(),\r\n      this.getFactBytes_(),\r\n      packString(this.data.chunkId),\r\n      pack(this.data.samples.length, this.uInt32),\r\n      this.data.samples,\r\n      this.getCueBytes_(),\r\n      this.getSmplBytes_(),\r\n      this.getLISTBytes_(),\r\n      this.get_PMXBytes_()\r\n    ];\r\n    /** @type {number} */\r\n    let fileBodyLength = 0;\r\n    for (let i=0; i<fileBody.length; i++) {\r\n      fileBodyLength += fileBody[i].length;\r\n    }\r\n    /** @type {!Uint8Array} */\r\n    let file = new Uint8Array(fileBodyLength + 12);\r\n    /** @type {number} */\r\n    let index = 0;\r\n    index = packStringTo(this.container, file, index);\r\n    index = packTo(fileBodyLength + 4, this.uInt32, file, index);\r\n    index = packStringTo(this.format, file, index);\r\n    for (let i=0; i<fileBody.length; i++) {\r\n      file.set(fileBody[i], index);\r\n      index += fileBody[i].length;\r\n    }\r\n    return file;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'bext' chunk.\r\n   * @private\r\n   */\r\n  getBextBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    this.enforceBext_();\r\n    if (this.bext.chunkId) {\r\n      this.bext.chunkSize = 602 + this.bext.codingHistory.length;\r\n      bytes = bytes.concat(\r\n        packString(this.bext.chunkId),\r\n        pack(602 + this.bext.codingHistory.length, this.uInt32),\r\n        writeString(this.bext.description, 256),\r\n        writeString(this.bext.originator, 32),\r\n        writeString(this.bext.originatorReference, 32),\r\n        writeString(this.bext.originationDate, 10),\r\n        writeString(this.bext.originationTime, 8),\r\n        pack(this.bext.timeReference[0], this.uInt32),\r\n        pack(this.bext.timeReference[1], this.uInt32),\r\n        pack(this.bext.version, this.uInt16),\r\n        writeString(this.bext.UMID, 64),\r\n        pack(this.bext.loudnessValue, this.uInt16),\r\n        pack(this.bext.loudnessRange, this.uInt16),\r\n        pack(this.bext.maxTruePeakLevel, this.uInt16),\r\n        pack(this.bext.maxMomentaryLoudness, this.uInt16),\r\n        pack(this.bext.maxShortTermLoudness, this.uInt16),\r\n        writeString(this.bext.reserved, 180),\r\n        writeString(\r\n          this.bext.codingHistory, this.bext.codingHistory.length));\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Make sure a 'bext' chunk is created if BWF data was created in a file.\r\n   * @private\r\n   */\r\n  enforceBext_() {\r\n    for (let prop in this.bext) {\r\n      if (this.bext.hasOwnProperty(prop)) {\r\n        if (this.bext[prop] && prop != 'timeReference') {\r\n          this.bext.chunkId = 'bext';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (this.bext.timeReference[0] || this.bext.timeReference[1]) {\r\n      this.bext.chunkId = 'bext';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'iXML' chunk.\r\n   * @return {!Array<number>} The 'iXML' chunk bytes.\r\n   * @private\r\n   */\r\n  getiXMLBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.iXML.chunkId) {\r\n      /** @type {!Array<number>} */\r\n      let iXMLPackedValue = packString(this.iXML.value);\r\n      this.iXML.chunkSize = iXMLPackedValue.length;\r\n      bytes = bytes.concat(\r\n        packString(this.iXML.chunkId),\r\n        pack(this.iXML.chunkSize, this.uInt32),\r\n        iXMLPackedValue);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'ds64' chunk.\r\n   * @return {!Array<number>} The 'ds64' chunk bytes.\r\n   * @private\r\n   */\r\n  getDs64Bytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.ds64.chunkId) {\r\n      bytes = bytes.concat(\r\n        packString(this.ds64.chunkId),\r\n        pack(this.ds64.chunkSize, this.uInt32),\r\n        pack(this.ds64.riffSizeHigh, this.uInt32),\r\n        pack(this.ds64.riffSizeLow, this.uInt32),\r\n        pack(this.ds64.dataSizeHigh, this.uInt32),\r\n        pack(this.ds64.dataSizeLow, this.uInt32),\r\n        pack(this.ds64.originationTime, this.uInt32),\r\n        pack(this.ds64.sampleCountHigh, this.uInt32),\r\n        pack(this.ds64.sampleCountLow, this.uInt32));\r\n    }\r\n    //if (this.ds64.tableLength) {\r\n    //  ds64Bytes = ds64Bytes.concat(\r\n    //    pack(this.ds64.tableLength, this.uInt32),\r\n    //    this.ds64.table);\r\n    //}\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'cue ' chunk.\r\n   * @return {!Array<number>} The 'cue ' chunk bytes.\r\n   * @private\r\n   */\r\n  getCueBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.cue.chunkId) {\r\n      /** @type {!Array<number>} */\r\n      let cuePointsBytes = this.getCuePointsBytes_();\r\n      bytes = bytes.concat(\r\n        packString(this.cue.chunkId),\r\n        pack(cuePointsBytes.length + 4, this.uInt32), // chunkSize\r\n        pack(this.cue.dwCuePoints, this.uInt32),\r\n        cuePointsBytes);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'cue ' points.\r\n   * @return {!Array<number>} The 'cue ' points as an array of bytes.\r\n   * @private\r\n   */\r\n  getCuePointsBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let points = [];\r\n    for (let i=0; i<this.cue.dwCuePoints; i++) {\r\n      points = points.concat(\r\n        pack(this.cue.points[i].dwName, this.uInt32),\r\n        pack(this.cue.points[i].dwPosition, this.uInt32),\r\n        packString(this.cue.points[i].fccChunk),\r\n        pack(this.cue.points[i].dwChunkStart, this.uInt32),\r\n        pack(this.cue.points[i].dwBlockStart, this.uInt32),\r\n        pack(this.cue.points[i].dwSampleOffset, this.uInt32));\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'smpl' chunk.\r\n   * @return {!Array<number>} The 'smpl' chunk bytes.\r\n   * @private\r\n   */\r\n  getSmplBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.smpl.chunkId) {\r\n      /** @type {!Array<number>} */\r\n      let smplLoopsBytes = this.getSmplLoopsBytes_();\r\n      bytes = bytes.concat(\r\n        packString(this.smpl.chunkId),\r\n        pack(smplLoopsBytes.length + 36, this.uInt32), //chunkSize\r\n        pack(this.smpl.dwManufacturer, this.uInt32),\r\n        pack(this.smpl.dwProduct, this.uInt32),\r\n        pack(this.smpl.dwSamplePeriod, this.uInt32),\r\n        pack(this.smpl.dwMIDIUnityNote, this.uInt32),\r\n        pack(this.smpl.dwMIDIPitchFraction, this.uInt32),\r\n        pack(this.smpl.dwSMPTEFormat, this.uInt32),\r\n        pack(this.smpl.dwSMPTEOffset, this.uInt32),\r\n        pack(this.smpl.dwNumSampleLoops, this.uInt32),\r\n        pack(this.smpl.dwSamplerData, this.uInt32),\r\n        smplLoopsBytes);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'smpl' loops.\r\n   * @return {!Array<number>} The 'smpl' loops as an array of bytes.\r\n   * @private\r\n   */\r\n  getSmplLoopsBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let loops = [];\r\n    for (let i=0; i<this.smpl.dwNumSampleLoops; i++) {\r\n      loops = loops.concat(\r\n        pack(this.smpl.loops[i].dwName, this.uInt32),\r\n        pack(this.smpl.loops[i].dwType, this.uInt32),\r\n        pack(this.smpl.loops[i].dwStart, this.uInt32),\r\n        pack(this.smpl.loops[i].dwEnd, this.uInt32),\r\n        pack(this.smpl.loops[i].dwFraction, this.uInt32),\r\n        pack(this.smpl.loops[i].dwPlayCount, this.uInt32));\r\n    }\r\n    return loops;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'fact' chunk.\r\n   * @return {!Array<number>} The 'fact' chunk bytes.\r\n   * @private\r\n   */\r\n  getFactBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.fact.chunkId) {\r\n      bytes = bytes.concat(\r\n        packString(this.fact.chunkId),\r\n        pack(this.fact.chunkSize, this.uInt32),\r\n        pack(this.fact.dwSampleLength, this.uInt32));\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'fmt ' chunk.\r\n   * @return {!Array<number>} The 'fmt' chunk bytes.\r\n   * @throws {Error} if no 'fmt ' chunk is present.\r\n   * @private\r\n   */\r\n  getFmtBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let fmtBytes = [];\r\n    if (this.fmt.chunkId) {\r\n      /** @type {!Array<number>} */\r\n      let bytes  = fmtBytes.concat(\r\n        packString(this.fmt.chunkId),\r\n        pack(this.fmt.chunkSize, this.uInt32),\r\n        pack(this.fmt.audioFormat, this.uInt16),\r\n        pack(this.fmt.numChannels, this.uInt16),\r\n        pack(this.fmt.sampleRate, this.uInt32),\r\n        pack(this.fmt.byteRate, this.uInt32),\r\n        pack(this.fmt.blockAlign, this.uInt16),\r\n        pack(this.fmt.bitsPerSample, this.uInt16),\r\n        this.getFmtExtensionBytes_());\r\n      this.enforceByteLen_(bytes);\r\n      return bytes;\r\n    }\r\n    throw Error('Could not find the \"fmt \" chunk');\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the fmt extension fields.\r\n   * @return {!Array<number>} The fmt extension bytes.\r\n   * @private\r\n   */\r\n  getFmtExtensionBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let extension = [];\r\n    if (this.fmt.chunkSize > 16) {\r\n      extension = extension.concat(\r\n        pack(this.fmt.cbSize, this.uInt16));\r\n    }\r\n    if (this.fmt.chunkSize > 18) {\r\n      extension = extension.concat(\r\n        pack(this.fmt.validBitsPerSample, this.uInt16));\r\n    }\r\n    if (this.fmt.chunkSize > 20) {\r\n      extension = extension.concat(\r\n        pack(this.fmt.dwChannelMask, this.uInt32));\r\n    }\r\n    if (this.fmt.chunkSize > 24) {\r\n      extension = extension.concat(\r\n        pack(this.fmt.subformat[0], this.uInt32),\r\n        pack(this.fmt.subformat[1], this.uInt32),\r\n        pack(this.fmt.subformat[2], this.uInt32),\r\n        pack(this.fmt.subformat[3], this.uInt32));\r\n    }\r\n    return extension;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'LIST' chunk.\r\n   * @return {!Array<number>} The 'LIST' chunk bytes.\r\n   * @private\r\n   */\r\n  getLISTBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    for (let i=0; i<this.LIST.length; i++) {\r\n      /** @type {!Array<number>} */\r\n      let subChunksBytes = this.getLISTSubChunksBytes_(\r\n          this.LIST[i].subChunks, this.LIST[i].format);\r\n      bytes = bytes.concat(\r\n        packString(this.LIST[i].chunkId),\r\n        pack(subChunksBytes.length + 4, this.uInt32), //chunkSize\r\n        packString(this.LIST[i].format),\r\n        subChunksBytes);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the sub chunks of a 'LIST' chunk.\r\n   * @param {!Array<!Object>} subChunks The 'LIST' sub chunks.\r\n   * @param {string} format The format of the 'LIST' chunk.\r\n   *    Currently supported values are 'adtl' or 'INFO'.\r\n   * @return {!Array<number>} The sub chunk bytes.\r\n   * @private\r\n   */\r\n  getLISTSubChunksBytes_(subChunks, format) {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    for (let i = 0, len = subChunks.length; i < len; i++) {\r\n      if (format == 'INFO') {\r\n        bytes = bytes.concat(this.getLISTINFOSubChunksBytes_(subChunks[i]));\r\n      } else if (format == 'adtl') {\r\n        bytes = bytes.concat(this.getLISTadtlSubChunksBytes_(subChunks[i]));\r\n      }\r\n      this.enforceByteLen_(bytes);\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the sub chunks of a 'LIST' chunk of type 'INFO'.\r\n   * @param {!Object} subChunk The 'LIST' sub chunk.\r\n   * @return {!Array<number>}\r\n   * @private\r\n   */\r\n  getLISTINFOSubChunksBytes_(subChunk) {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    /** @type {!Array<number>} */\r\n    let LISTsubChunkValue = writeString(\r\n        subChunk.value, subChunk.value.length);\r\n    bytes = bytes.concat(\r\n      packString(subChunk.chunkId),\r\n      pack(LISTsubChunkValue.length + 1, this.uInt32), //chunkSize\r\n      LISTsubChunkValue);\r\n    bytes.push(0);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the sub chunks of a 'LIST' chunk of type 'INFO'.\r\n   * @param {!Object} subChunk The 'LIST' sub chunk.\r\n   * @return {!Array<number>}\r\n   * @private\r\n   */\r\n  getLISTadtlSubChunksBytes_(subChunk) {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (['labl', 'note'].indexOf(subChunk.chunkId) > -1) {\r\n      /** @type {!Array<number>} */\r\n      let LISTsubChunkValue = writeString(\r\n          subChunk.value,\r\n          subChunk.value.length);\r\n      bytes = bytes.concat(\r\n        packString(subChunk.chunkId),\r\n        pack(LISTsubChunkValue.length + 4 + 1, this.uInt32), //chunkSize\r\n        pack(subChunk.dwName, this.uInt32),\r\n        LISTsubChunkValue);\r\n      bytes.push(0);\r\n    } else if (subChunk.chunkId == 'ltxt') {\r\n      bytes = bytes.concat(\r\n        this.getLtxtChunkBytes_(subChunk));\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of a 'ltxt' chunk.\r\n   * @param {!Object} ltxt the 'ltxt' chunk.\r\n   * @return {!Array<number>}\r\n   * @private\r\n   */\r\n  getLtxtChunkBytes_(ltxt) {\r\n    return [].concat(\r\n      packString(ltxt.chunkId),\r\n      pack(ltxt.value.length + 20, this.uInt32),\r\n      pack(ltxt.dwName, this.uInt32),\r\n      pack(ltxt.dwSampleLength, this.uInt32),\r\n      pack(ltxt.dwPurposeID, this.uInt32),\r\n      pack(ltxt.dwCountry, this.uInt16),\r\n      pack(ltxt.dwLanguage, this.uInt16),\r\n      pack(ltxt.dwDialect, this.uInt16),\r\n      pack(ltxt.dwCodePage, this.uInt16),\r\n       // should always be a empty string;\r\n       // kept for compatibility\r\n      writeString(ltxt.value, ltxt.value.length));\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the '_PMX' chunk.\r\n   * @return {!Array<number>} The '_PMX' chunk bytes.\r\n   * @private\r\n   */\r\n  get_PMXBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this._PMX.chunkId) {\r\n      /** @type {!Array<number>} */\r\n      let _PMXPackedValue = packString(this._PMX.value);\r\n      this._PMX.chunkSize = _PMXPackedValue.length;\r\n      bytes = bytes.concat(\r\n        packString(this._PMX.chunkId),\r\n        pack(this._PMX.chunkSize, this.uInt32),\r\n        _PMXPackedValue);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Return the bytes of the 'junk' chunk.\r\n   * @private\r\n   */\r\n  getJunkBytes_() {\r\n    /** @type {!Array<number>} */\r\n    let bytes = [];\r\n    if (this.junk.chunkId) {\r\n      return bytes.concat(\r\n        packString(this.junk.chunkId),\r\n        pack(this.junk.chunkData.length, this.uInt32), //chunkSize\r\n        this.junk.chunkData);\r\n    }\r\n    this.enforceByteLen_(bytes);\r\n    return bytes;\r\n  }\r\n\r\n  /**\r\n   * Push a null byte into a byte array if\r\n   * the byte count is odd.\r\n   * @param {!Array<number>} bytes The byte array.\r\n   * @private\r\n   */\r\n  enforceByteLen_(bytes) {\r\n    if (bytes.length % 2) {\r\n      bytes.push(0);\r\n    }\r\n  }\r\n}\n\nexport { WaveFileParser };\n","/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The interleave function.\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Interleave de-interleaved samples.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @return {!(Array|TypedArray)}\r\n */\r\nfunction interleave(samples) {\r\n  /** @type {!(Array|TypedArray)} */\r\n  let finalSamples = [];\r\n  if (samples.length > 0) {\r\n    if (samples[0].constructor !== Number) {\r\n      finalSamples = new Float64Array(samples[0].length * samples.length);\r\n      for (let i = 0, len = samples[0].length, x = 0; i < len; i++) {\r\n        for (let j = 0, subLen = samples.length; j < subLen; j++, x++) {\r\n          finalSamples[x] = samples[j][i];\r\n        }\r\n      }\r\n    } else {\r\n      finalSamples = samples;\r\n    }\r\n  }\r\n  return finalSamples;\r\n}\r\n\r\n/**\r\n * De-interleave samples into multiple channels.\r\n * @param {!(Array|TypedArray)} samples The samples.\r\n * @param {number} numChannels The number of channels to split the samples.\r\n * @param {Function} [OutputObject=Float64Array] The type of object to\r\n *   write the de-interleaved samples.\r\n * @return {!(Array|TypedArray)}\r\n */\r\nfunction deInterleave(samples, numChannels, OutputObject=Float64Array) {\r\n  /** @type {!(Array|TypedArray)} */\r\n  let finalSamples = [];\r\n  for (let i = 0; i < numChannels; i++) {\r\n    finalSamples[i] = new OutputObject(samples.length / numChannels);\r\n  }\r\n  for (let i = 0; i < numChannels; i++) {\r\n    for (let j = i, s = 0; j < samples.length; j+= numChannels, s++) {\r\n      finalSamples[i][s] = samples[j];\r\n    }\r\n  }\r\n  return finalSamples;\r\n}\n\nexport { deInterleave, interleave };\n","/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The validateNumChannels function.\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Validate the number of channels in a wav file according to the\r\n * bit depth of the audio.\r\n * @param {number} channels The number of channels in the file.\r\n * @param {number} bits The number of bits per sample.\r\n * @return {boolean} True is the number of channels is valid.\r\n */\r\nfunction validateNumChannels(channels, bits) {\r\n  /** @type {number} */\r\n  let blockAlign = channels * bits / 8;\r\n  if (channels < 1 || blockAlign > 65535) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\n\nexport { validateNumChannels };\n","/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The validateSampleRate function.\r\n * @see https://github.com/rochars/wavefile\r\n */\r\n\r\n/**\r\n * Validate the sample rate value of a wav file according to the number of\r\n * channels and the bit depth of the audio.\r\n * @param {number} channels The number of channels in the file.\r\n * @param {number} bits The number of bits per sample.\r\n * @param {number} sampleRate The sample rate to be validated.\r\n * @return {boolean} True is the sample rate is valid, false otherwise.\r\n */\r\nfunction validateSampleRate(channels, bits, sampleRate) {\r\n  /** @type {number} */\r\n  let byteRate = channels * (bits / 8) * sampleRate;\r\n  if (sampleRate < 1 || byteRate > 4294967295) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\n\nexport { validateSampleRate };\n","import { WaveFileParser } from './wavefile-parser.js';\nimport { deInterleave, interleave } from './parsers/interleave.js';\nimport { validateNumChannels } from './validators/validate-num-channels.js';\nimport { validateSampleRate } from './validators/validate-sample-rate.js';\nimport { unpackArrayTo, unpack, packTo, packArrayTo } from './parsers/binary/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to read, write and create wav files.\r\n * @extends WaveFileParser\r\n * @ignore\r\n */\r\nclass WaveFileCreator extends WaveFileParser {\r\n\r\n  constructor() {\r\n    super();\r\n    /**\r\n     * The bit depth code according to the samples.\r\n     * @type {string}\r\n     */\r\n    this.bitDepth = '0';\r\n    /**\r\n     * @type {!{bits: number, be: boolean}}\r\n     * @protected\r\n     */\r\n    this.dataType = {bits: 0, be: false};\r\n    /**\r\n     * Audio formats.\r\n     * Formats not listed here should be set to 65534,\r\n     * the code for WAVE_FORMAT_EXTENSIBLE\r\n     * @enum {number}\r\n     * @protected\r\n     */\r\n    this.WAV_AUDIO_FORMATS = {\r\n      '4': 17,\r\n      '8': 1,\r\n      '8a': 6,\r\n      '8m': 7,\r\n      '16': 1,\r\n      '24': 1,\r\n      '32': 1,\r\n      '32f': 3,\r\n      '64': 3\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set up the WaveFileCreator object based on the arguments passed.\r\n   * Existing chunks are reset.\r\n   * @param {number} numChannels The number of channels.\r\n   * @param {number} sampleRate The sample rate.\r\n   *    Integers like 8000, 44100, 48000, 96000, 192000.\r\n   * @param {string} bitDepthCode The audio bit depth code.\r\n   *    One of '4', '8', '8a', '8m', '16', '24', '32', '32f', '64'\r\n   *    or any value between '8' and '32' (like '12').\r\n   * @param {!(Array|TypedArray)} samples The samples.\r\n   * @param {Object=} options Optional. Used to force the container\r\n   *    as RIFX with {'container': 'RIFX'}\r\n   * @throws {Error} If any argument does not meet the criteria.\r\n   */\r\n  fromScratch(numChannels, sampleRate, bitDepthCode, samples, options) {\r\n    options = options || {};\r\n    // reset all chunks\r\n    this.clearHeaders();\r\n    this.newWavFile_(numChannels, sampleRate, bitDepthCode, samples, options);\r\n  }\r\n\r\n  /**\r\n   * Set up the WaveFileParser object from a byte buffer.\r\n   * @param {!Uint8Array} wavBuffer The buffer.\r\n   * @param {boolean=} [samples=true] True if the samples should be loaded.\r\n   * @throws {Error} If container is not RIFF, RIFX or RF64.\r\n   * @throws {Error} If format is not WAVE.\r\n   * @throws {Error} If no 'fmt ' chunk is found.\r\n   * @throws {Error} If no 'data' chunk is found.\r\n   */\r\n  fromBuffer(wavBuffer, samples=true) {\r\n    super.fromBuffer(wavBuffer, samples);\r\n    this.bitDepthFromFmt_();\r\n    this.updateDataType_();\r\n  }\r\n\r\n  /**\r\n   * Return a byte buffer representig the WaveFileParser object as a .wav file.\r\n   * The return value of this method can be written straight to disk.\r\n   * @return {!Uint8Array} A wav file.\r\n   * @throws {Error} If bit depth is invalid.\r\n   * @throws {Error} If the number of channels is invalid.\r\n   * @throws {Error} If the sample rate is invalid.\r\n   */\r\n  toBuffer() {\r\n    this.validateWavHeader_();\r\n    return super.toBuffer();\r\n  }\r\n\r\n  /**\r\n   * Return the samples packed in a Float64Array.\r\n   * @param {boolean=} [interleaved=false] True to return interleaved samples,\r\n   *   false to return the samples de-interleaved.\r\n   * @param {Function=} [OutputObject=Float64Array] The sample container.\r\n   * @return {!(Array|TypedArray)} the samples.\r\n   */\r\n  getSamples(interleaved=false, OutputObject=Float64Array) {\r\n    /**\r\n     * A Float64Array created with a size to match the\r\n     * the length of the samples.\r\n     * @type {!(Array|TypedArray)}\r\n     */\r\n    let samples = new OutputObject(\r\n      this.data.samples.length / (this.dataType.bits / 8));\r\n    // Unpack all the samples\r\n    unpackArrayTo(this.data.samples, this.dataType, samples,\r\n      0, this.data.samples.length);\r\n    if (!interleaved && this.fmt.numChannels > 1) {\r\n      return deInterleave(samples, this.fmt.numChannels, OutputObject);\r\n    }\r\n    return samples;\r\n  }\r\n\r\n  /**\r\n   * Return the sample at a given index.\r\n   * @param {number} index The sample index.\r\n   * @return {number} The sample.\r\n   * @throws {Error} If the sample index is off range.\r\n   */\r\n  getSample(index) {\r\n    index = index * (this.dataType.bits / 8);\r\n    if (index + this.dataType.bits / 8 > this.data.samples.length) {\r\n      throw new Error('Range error');\r\n    }\r\n    return unpack(\r\n      this.data.samples.slice(index, index + this.dataType.bits / 8),\r\n      this.dataType);\r\n  }\r\n\r\n  /**\r\n   * Set the sample at a given index.\r\n   * @param {number} index The sample index.\r\n   * @param {number} sample The sample.\r\n   * @throws {Error} If the sample index is off range.\r\n   */\r\n  setSample(index, sample) {\r\n    index = index * (this.dataType.bits / 8);\r\n    if (index + this.dataType.bits / 8 > this.data.samples.length) {\r\n      throw new Error('Range error');\r\n    }\r\n    packTo(sample, this.dataType, this.data.samples, index);\r\n  }\r\n\r\n  /**\r\n   * Return the value of the iXML chunk.\r\n   * @return {string} The contents of the iXML chunk.\r\n   */\r\n  getiXML() {\r\n    return this.iXML.value;\r\n  }\r\n\r\n  /**\r\n   * Set the value of the iXML chunk.\r\n   * @param {string} iXMLValue The value for the iXML chunk.\r\n   * @throws {TypeError} If the value is not a string.\r\n   */\r\n  setiXML(iXMLValue) {\r\n    if (typeof iXMLValue !== 'string') {\r\n      throw new TypeError('iXML value must be a string.');\r\n    }\r\n    this.iXML.value = iXMLValue;\r\n    this.iXML.chunkId = 'iXML';\r\n  }\r\n\r\n  /**\r\n   * Get the value of the _PMX chunk.\r\n   * @return {string} The contents of the _PMX chunk.\r\n   */\r\n  get_PMX() {\r\n    return this._PMX.value;\r\n  }\r\n\r\n  /**\r\n   * Set the value of the _PMX chunk.\r\n   * @param {string} _PMXValue The value for the _PMX chunk.\r\n   * @throws {TypeError} If the value is not a string.\r\n   */\r\n  set_PMX(_PMXValue) {\r\n    if (typeof _PMXValue !== 'string') {\r\n      throw new TypeError('_PMX value must be a string.');\r\n    }\r\n    this._PMX.value = _PMXValue;\r\n    this._PMX.chunkId = '_PMX';\r\n  }\r\n\r\n  /**\r\n   * Set up the WaveFileCreator object based on the arguments passed.\r\n   * @param {number} numChannels The number of channels.\r\n   * @param {number} sampleRate The sample rate.\r\n   *   Integers like 8000, 44100, 48000, 96000, 192000.\r\n   * @param {string} bitDepthCode The audio bit depth code.\r\n   *   One of '4', '8', '8a', '8m', '16', '24', '32', '32f', '64'\r\n   *   or any value between '8' and '32' (like '12').\r\n   * @param {!(Array|TypedArray)} samples The samples.\r\n   * @param {Object} options Used to define the container.\r\n   * @throws {Error} If any argument does not meet the criteria.\r\n   * @private\r\n   */\r\n  newWavFile_(numChannels, sampleRate, bitDepthCode, samples, options) {\r\n    if (!options.container) {\r\n      options.container = 'RIFF';\r\n    }\r\n    this.container = options.container;\r\n    this.bitDepth = bitDepthCode;\r\n    samples = interleave(samples);\r\n    this.updateDataType_();\r\n    /** @type {number} */\r\n    let numBytes = this.dataType.bits / 8;\r\n    this.data.samples = new Uint8Array(samples.length * numBytes);\r\n    packArrayTo(samples, this.dataType, this.data.samples, 0);\r\n    this.makeWavHeader_(\r\n      bitDepthCode, numChannels, sampleRate,\r\n      numBytes, this.data.samples.length, options);\r\n    this.data.chunkId = 'data';\r\n    this.data.chunkSize = this.data.samples.length;\r\n    this.validateWavHeader_();\r\n  }\r\n\r\n  /**\r\n   * Define the header of a wav file.\r\n   * @param {string} bitDepthCode The audio bit depth\r\n   * @param {number} numChannels The number of channels\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} numBytes The number of bytes each sample use.\r\n   * @param {number} samplesLength The length of the samples in bytes.\r\n   * @param {!Object} options The extra options, like container defintion.\r\n   * @private\r\n   */\r\n  makeWavHeader_(\r\n    bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options) {\r\n    if (bitDepthCode == '4') {\r\n      this.createADPCMHeader_(\r\n        bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n\r\n    } else if (bitDepthCode == '8a' || bitDepthCode == '8m') {\r\n      this.createALawMulawHeader_(\r\n        bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n\r\n    } else if(Object.keys(this.WAV_AUDIO_FORMATS).indexOf(bitDepthCode) == -1 ||\r\n        numChannels > 2) {\r\n      this.createExtensibleHeader_(\r\n        bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n\r\n    } else {\r\n      this.createPCMHeader_(\r\n        bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);      \r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the header of a linear PCM wave file.\r\n   * @param {string} bitDepthCode The audio bit depth\r\n   * @param {number} numChannels The number of channels\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} numBytes The number of bytes each sample use.\r\n   * @param {number} samplesLength The length of the samples in bytes.\r\n   * @param {!Object} options The extra options, like container defintion.\r\n   * @private\r\n   */\r\n  createPCMHeader_(\r\n    bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options) {\r\n    this.container = options.container;\r\n    this.chunkSize = 36 + samplesLength;\r\n    this.format = 'WAVE';\r\n    this.bitDepth = bitDepthCode;\r\n    this.fmt = {\r\n      chunkId: 'fmt ',\r\n      chunkSize: 16,\r\n      audioFormat: this.WAV_AUDIO_FORMATS[bitDepthCode] || 65534,\r\n      numChannels: numChannels,\r\n      sampleRate: sampleRate,\r\n      byteRate: (numChannels * numBytes) * sampleRate,\r\n      blockAlign: numChannels * numBytes,\r\n      bitsPerSample: parseInt(bitDepthCode, 10),\r\n      cbSize: 0,\r\n      validBitsPerSample: 0,\r\n      dwChannelMask: 0,\r\n      subformat: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create the header of a ADPCM wave file.\r\n   * @param {string} bitDepthCode The audio bit depth\r\n   * @param {number} numChannels The number of channels\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} numBytes The number of bytes each sample use.\r\n   * @param {number} samplesLength The length of the samples in bytes.\r\n   * @param {!Object} options The extra options, like container defintion.\r\n   * @private\r\n   */\r\n  createADPCMHeader_(\r\n    bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options) {\r\n    this.createPCMHeader_(\r\n      bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n    this.chunkSize = 40 + samplesLength;\r\n    this.fmt.chunkSize = 20;\r\n    this.fmt.byteRate = 4055;\r\n    this.fmt.blockAlign = 256;\r\n    this.fmt.bitsPerSample = 4;\r\n    this.fmt.cbSize = 2;\r\n    this.fmt.validBitsPerSample = 505;\r\n    this.fact = {\r\n      chunkId: 'fact',\r\n      chunkSize: 4,\r\n      dwSampleLength: samplesLength * 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create the header of WAVE_FORMAT_EXTENSIBLE file.\r\n   * @param {string} bitDepthCode The audio bit depth\r\n   * @param {number} numChannels The number of channels\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} numBytes The number of bytes each sample use.\r\n   * @param {number} samplesLength The length of the samples in bytes.\r\n   * @param {!Object} options The extra options, like container defintion.\r\n   * @private\r\n   */\r\n  createExtensibleHeader_(\r\n      bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options) {\r\n    this.createPCMHeader_(\r\n      bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n    this.chunkSize = 36 + 24 + samplesLength;\r\n    this.fmt.chunkSize = 40;\r\n    this.fmt.bitsPerSample = ((parseInt(bitDepthCode, 10) - 1) | 7) + 1;\r\n    this.fmt.cbSize = 22;\r\n    this.fmt.validBitsPerSample = parseInt(bitDepthCode, 10);\r\n    this.fmt.dwChannelMask = dwChannelMask_(numChannels);\r\n    // subformat 128-bit GUID as 4 32-bit values\r\n    // only supports uncompressed integer PCM samples\r\n    this.fmt.subformat = [1, 1048576, 2852126848, 1905997824];\r\n  }\r\n\r\n  /**\r\n   * Create the header of mu-Law and A-Law wave files.\r\n   * @param {string} bitDepthCode The audio bit depth\r\n   * @param {number} numChannels The number of channels\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} numBytes The number of bytes each sample use.\r\n   * @param {number} samplesLength The length of the samples in bytes.\r\n   * @param {!Object} options The extra options, like container defintion.\r\n   * @private\r\n   */\r\n  createALawMulawHeader_(\r\n      bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options) {\r\n    this.createPCMHeader_(\r\n      bitDepthCode, numChannels, sampleRate, numBytes, samplesLength, options);\r\n    this.chunkSize = 40 + samplesLength;\r\n    this.fmt.chunkSize = 20;\r\n    this.fmt.cbSize = 2;\r\n    this.fmt.validBitsPerSample = 8;\r\n    this.fact = {\r\n      chunkId: 'fact',\r\n      chunkSize: 4,\r\n      dwSampleLength: samplesLength\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set the string code of the bit depth based on the 'fmt ' chunk.\r\n   * @private\r\n   */\r\n  bitDepthFromFmt_() {\r\n    if (this.fmt.audioFormat === 3 && this.fmt.bitsPerSample === 32) {\r\n      this.bitDepth = '32f';\r\n    } else if (this.fmt.audioFormat === 6) {\r\n      this.bitDepth = '8a';\r\n    } else if (this.fmt.audioFormat === 7) {\r\n      this.bitDepth = '8m';\r\n    } else {\r\n      this.bitDepth = this.fmt.bitsPerSample.toString();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate the bit depth.\r\n   * @return {boolean} True is the bit depth is valid.\r\n   * @throws {Error} If bit depth is invalid.\r\n   * @private\r\n   */\r\n  validateBitDepth_() {\r\n    if (!this.WAV_AUDIO_FORMATS[this.bitDepth]) {\r\n      if (parseInt(this.bitDepth, 10) > 8 &&\r\n          parseInt(this.bitDepth, 10) < 54) {\r\n        return true;\r\n      }\r\n      throw new Error('Invalid bit depth.');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Update the type definition used to read and write the samples.\r\n   * @private\r\n   */\r\n  updateDataType_() {\r\n    this.dataType = {\r\n      bits: ((parseInt(this.bitDepth, 10) - 1) | 7) + 1,\r\n      fp: this.bitDepth == '32f' || this.bitDepth == '64',\r\n      signed: this.bitDepth != '8',\r\n      be: this.container == 'RIFX'\r\n    };\r\n    if (['4', '8a', '8m'].indexOf(this.bitDepth) > -1 ) {\r\n      this.dataType.bits = 8;\r\n      this.dataType.signed = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate the header of the file.\r\n   * @throws {Error} If bit depth is invalid.\r\n   * @throws {Error} If the number of channels is invalid.\r\n   * @throws {Error} If the sample rate is invalid.\r\n   * @ignore\r\n   * @private\r\n   */\r\n  validateWavHeader_() {\r\n    this.validateBitDepth_();\r\n    if (!validateNumChannels(this.fmt.numChannels, this.fmt.bitsPerSample)) {\r\n      throw new Error('Invalid number of channels.');\r\n    }\r\n    if (!validateSampleRate(\r\n        this.fmt.numChannels, this.fmt.bitsPerSample, this.fmt.sampleRate)) {\r\n      throw new Error('Invalid sample rate.');\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Return the value for dwChannelMask according to the number of channels.\r\n * @param {number} numChannels the number of channels.\r\n * @return {number} the dwChannelMask value.\r\n * @private\r\n */\r\nfunction dwChannelMask_(numChannels) {\r\n  /** @type {number} */\r\n  let mask = 0;\r\n  // mono = FC\r\n  if (numChannels === 1) {\r\n    mask = 0x4;\r\n  // stereo = FL, FR\r\n  } else if (numChannels === 2) {\r\n    mask = 0x3;\r\n  // quad = FL, FR, BL, BR\r\n  } else if (numChannels === 4) {\r\n    mask = 0x33;\r\n  // 5.1 = FL, FR, FC, LF, BL, BR\r\n  } else if (numChannels === 6) {\r\n    mask = 0x3F;\r\n  // 7.1 = FL, FR, FC, LF, BL, BR, SL, SR\r\n  } else if (numChannels === 8) {\r\n    mask = 0x63F;\r\n  }\r\n  return mask;\r\n}\n\nexport { WaveFileCreator };\n","import { WaveFileCreator } from './wavefile-creator.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to edit meta information in wav files.\r\n * @extends WaveFileCreator\r\n * @ignore\r\n */\r\nclass WaveFileTagEditor extends WaveFileCreator {\r\n\r\n  /**\r\n   * Return the value of a RIFF tag in the INFO chunk.\r\n   * @param {string} tag The tag name.\r\n   * @return {?string} The value if the tag is found, null otherwise.\r\n   */\r\n  getTag(tag) {\r\n    /** @type {!Object} */\r\n    let index = this.getTagIndex_(tag);\r\n    if (index.TAG !== null) {\r\n      return this.LIST[index.LIST].subChunks[index.TAG].value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Write a RIFF tag in the INFO chunk. If the tag do not exist,\r\n   * then it is created. It if exists, it is overwritten.\r\n   * @param {string} tag The tag name.\r\n   * @param {string} value The tag value.\r\n   * @throws {Error} If the tag name is not valid.\r\n   */\r\n  setTag(tag, value) {\r\n    tag = fixRIFFTag_(tag);\r\n    /** @type {!Object} */\r\n    let index = this.getTagIndex_(tag);\r\n    if (index.TAG !== null) {\r\n      this.LIST[index.LIST].subChunks[index.TAG].chunkSize =\r\n        value.length + 1;\r\n      this.LIST[index.LIST].subChunks[index.TAG].value = value;\r\n    } else if (index.LIST !== null) {\r\n      this.LIST[index.LIST].subChunks.push({\r\n        chunkId: tag,\r\n        chunkSize: value.length + 1,\r\n        value: value});\r\n    } else {\r\n      this.LIST.push({\r\n        chunkId: 'LIST',\r\n        chunkSize: 8 + value.length + 1,\r\n        format: 'INFO',\r\n        subChunks: []});\r\n      this.LIST[this.LIST.length - 1].subChunks.push({\r\n        chunkId: tag,\r\n        chunkSize: value.length + 1,\r\n        value: value});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a RIFF tag from the INFO chunk.\r\n   * @param {string} tag The tag name.\r\n   * @return {boolean} True if a tag was deleted.\r\n   */\r\n  deleteTag(tag) {\r\n    /** @type {!Object} */\r\n    let index = this.getTagIndex_(tag);\r\n    if (index.TAG !== null) {\r\n      this.LIST[index.LIST].subChunks.splice(index.TAG, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Return a Object<tag, value> with the RIFF tags in the file.\r\n   * @return {!Object<string, string>} The file tags.\r\n   */\r\n  listTags() {\r\n    /** @type {?number} */\r\n    let index = this.getLISTIndex('INFO');\r\n    /** @type {!Object} */\r\n    let tags = {};\r\n    if (index !== null) {\r\n      for (let i = 0, len = this.LIST[index].subChunks.length; i < len; i++) {\r\n        tags[this.LIST[index].subChunks[i].chunkId] =\r\n          this.LIST[index].subChunks[i].value;\r\n      }\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  /**\r\n   * Return the index of a list by its type.\r\n   * @param {string} listType The list type ('adtl', 'INFO')\r\n   * @return {?number}\r\n   * @protected\r\n   */\r\n  getLISTIndex(listType) {\r\n    for (let i = 0, len = this.LIST.length; i < len; i++) {\r\n      if (this.LIST[i].format == listType) {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return the index of a tag in a FILE chunk.\r\n   * @param {string} tag The tag name.\r\n   * @return {!Object<string, ?number>}\r\n   *    Object.LIST is the INFO index in LIST\r\n   *    Object.TAG is the tag index in the INFO\r\n   * @private\r\n   */\r\n  getTagIndex_(tag) {\r\n    /** @type {!Object<string, ?number>} */\r\n    let index = {LIST: null, TAG: null};\r\n    for (let i = 0, len = this.LIST.length; i < len; i++) {\r\n      if (this.LIST[i].format == 'INFO') {\r\n        index.LIST = i;\r\n        for (let j=0, subLen = this.LIST[i].subChunks.length; j < subLen; j++) {\r\n          if (this.LIST[i].subChunks[j].chunkId == tag) {\r\n            index.TAG = j;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n}\r\n\r\n/**\r\n * Fix a RIFF tag format if possible, throw an error otherwise.\r\n * @param {string} tag The tag name.\r\n * @return {string} The tag name in proper fourCC format.\r\n * @private\r\n */\r\nfunction fixRIFFTag_(tag) {\r\n  if (tag.constructor !== String) {\r\n    throw new Error('Invalid tag name.');\r\n  } else if (tag.length < 4) {\r\n    for (let i = 0, len = 4 - tag.length; i < len; i++) {\r\n      tag += ' ';\r\n    }\r\n  }\r\n  return tag;\r\n}\n\nexport { WaveFileTagEditor };\n","import { WaveFileTagEditor } from './wavefile-tag-editor.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to edit meta information in wav files.\r\n * @extends WaveFileTagEditor\r\n * @ignore\r\n */\r\nclass WaveFileCueEditor extends WaveFileTagEditor {\r\n\r\n  /**\r\n   * Return an array with all cue points in the file, in the order they appear\r\n   * in the file.\r\n   * Objects representing cue points/regions look like this:\r\n   *   {\r\n   *     position: 500, // the position in milliseconds\r\n   *     label: 'cue marker 1',\r\n   *     end: 1500, // the end position in milliseconds\r\n   *     dwName: 1,\r\n   *     dwPosition: 0,\r\n   *     fccChunk: 'data',\r\n   *     dwChunkStart: 0,\r\n   *     dwBlockStart: 0,\r\n   *     dwSampleOffset: 22050, // the position as a sample offset\r\n   *     dwSampleLength: 3646827, // length as a sample count, 0 if not a region\r\n   *     dwPurposeID: 544106354,\r\n   *     dwCountry: 0,\r\n   *     dwLanguage: 0,\r\n   *     dwDialect: 0,\r\n   *     dwCodePage: 0,\r\n   *   }\r\n   * @return {!Array<Object>}\r\n   */\r\n  listCuePoints() {\r\n    /** @type {!Array<!Object>} */\r\n    let points = this.getCuePoints_();\r\n    for (let i = 0, len = points.length; i < len; i++) {\r\n\r\n      // Add attrs that should exist in the object\r\n      points[i].position =\r\n        (points[i].dwSampleOffset / this.fmt.sampleRate) * 1000;\r\n\r\n      // If it is a region, calc the end\r\n      // position in milliseconds\r\n      if (points[i].dwSampleLength) {\r\n        points[i].end =\r\n          (points[i].dwSampleLength / this.fmt.sampleRate) * 1000;\r\n        points[i].end += points[i].position;\r\n      // If its not a region, end should be null\r\n      } else {\r\n        points[i].end = null;\r\n      }\r\n\r\n      // Remove attrs that should not go in the results\r\n      delete points[i].value;\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * Create a cue point in the wave file.\r\n   * @param {!{\r\n   *   position: number,\r\n   *   label: ?string,\r\n   *   end: ?number,\r\n   *   dwPurposeID: ?number,\r\n   *   dwCountry: ?number,\r\n   *   dwLanguage: ?number,\r\n   *   dwDialect: ?number,\r\n   *   dwCodePage: ?number\r\n   * }} pointData A object with the data of the cue point.\r\n   *\r\n   * # Only required attribute to create a cue point:\r\n   * pointData.position: The position of the point in milliseconds\r\n   *\r\n   * # Optional attribute for cue points:\r\n   * pointData.label: A string label for the cue point\r\n   *\r\n   * # Extra data used for regions\r\n   * pointData.end: A number representing the end of the region,\r\n   *   in milliseconds, counting from the start of the file. If\r\n   *   no end attr is specified then no region is created.\r\n   *\r\n   * # You may also specify the following attrs for regions, all optional:\r\n   * pointData.dwPurposeID\r\n   * pointData.dwCountry\r\n   * pointData.dwLanguage\r\n   * pointData.dwDialect\r\n   * pointData.dwCodePage\r\n   */\r\n  setCuePoint(pointData) {\r\n    this.cue.chunkId = 'cue ';\r\n\r\n    // label attr should always exist\r\n    if (!pointData.label) {\r\n      pointData.label = '';\r\n    }\r\n\r\n    /**\r\n     * Load the existing points before erasing\r\n     * the LIST 'adtl' chunk and the cue attr\r\n     * @type {!Array<!Object>}\r\n     */\r\n    let existingPoints = this.getCuePoints_();\r\n\r\n    // Clear any LIST labeled 'adtl'\r\n    // The LIST chunk should be re-written\r\n    // after the new cue point is created\r\n    this.clearLISTadtl_();\r\n\r\n    // Erase this.cue so it can be re-written\r\n    // after the point is added\r\n    this.cue.points = [];\r\n\r\n    /**\r\n     * Cue position param is informed in milliseconds,\r\n     * here its value is converted to the sample offset\r\n     * @type {number}\r\n     */\r\n    pointData.dwSampleOffset =\r\n      (pointData.position * this.fmt.sampleRate) / 1000;\r\n    /**\r\n     * end param is informed in milliseconds, counting\r\n     * from the start of the file.\r\n     * here its value is converted to the sample length\r\n     * of the region.\r\n     * @type {number}\r\n     */\r\n    pointData.dwSampleLength = 0;\r\n    if (pointData.end) {\r\n      pointData.dwSampleLength = \r\n        ((pointData.end * this.fmt.sampleRate) / 1000) -\r\n        pointData.dwSampleOffset;\r\n    }\r\n\r\n    // If there were no cue points in the file,\r\n    // insert the new cue point as the first\r\n    if (existingPoints.length === 0) {\r\n      this.setCuePoint_(pointData, 1);\r\n\r\n    // If the file already had cue points, This new one\r\n    // must be added in the list according to its position.\r\n    } else {\r\n      this.setCuePointInOrder_(existingPoints, pointData);\r\n    }\r\n    this.cue.dwCuePoints = this.cue.points.length;\r\n  }\r\n\r\n  /**\r\n   * Remove a cue point from a wave file.\r\n   * @param {number} index the index of the point. First is 1,\r\n   *    second is 2, and so on.\r\n   */\r\n  deleteCuePoint(index) {\r\n    this.cue.chunkId = 'cue ';\r\n    /** @type {!Array<!Object>} */\r\n    let existingPoints = this.getCuePoints_();\r\n    this.clearLISTadtl_();\r\n    /** @type {number} */\r\n    let len = this.cue.points.length;\r\n    this.cue.points = [];\r\n    for (let i = 0; i < len; i++) {\r\n      if (i + 1 !== index) {\r\n        this.setCuePoint_(existingPoints[i], i + 1);\r\n      }\r\n    }\r\n    this.cue.dwCuePoints = this.cue.points.length;\r\n    if (this.cue.dwCuePoints) {\r\n      this.cue.chunkId = 'cue ';\r\n    } else {\r\n      this.cue.chunkId = '';\r\n      this.clearLISTadtl_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the label of a cue point.\r\n   * @param {number} pointIndex The ID of the cue point.\r\n   * @param {string} label The new text for the label.\r\n   */\r\n  updateLabel(pointIndex, label) {\r\n    /** @type {?number} */\r\n    let cIndex = this.getLISTIndex('adtl');\r\n    if (cIndex !== null) {\r\n      for (let i = 0, len = this.LIST[cIndex].subChunks.length; i < len; i++) {\r\n        if (this.LIST[cIndex].subChunks[i].dwName ==\r\n            pointIndex) {\r\n          this.LIST[cIndex].subChunks[i].value = label;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return an array with all cue points in the file, in the order they appear\r\n   * in the file.\r\n   * @return {!Array<!Object>}\r\n   * @private\r\n   */\r\n  getCuePoints_() {\r\n    /** @type {!Array<!Object>} */\r\n    let points = [];\r\n    for (let i = 0; i < this.cue.points.length; i++) {\r\n      /** @type {!Object} */\r\n      let chunk = this.cue.points[i];\r\n      /** @type {!Object} */\r\n      let pointData = this.getDataForCuePoint_(chunk.dwName);\r\n      pointData.label = pointData.value ? pointData.value : '';\r\n      pointData.dwPosition = chunk.dwPosition;\r\n      pointData.fccChunk = chunk.fccChunk;\r\n      pointData.dwChunkStart = chunk.dwChunkStart;\r\n      pointData.dwBlockStart = chunk.dwBlockStart;\r\n      pointData.dwSampleOffset = chunk.dwSampleOffset;\r\n      points.push(pointData);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * Return the associated data of a cue point.\r\n   * @param {number} pointDwName The ID of the cue point.\r\n   * @return {!Object}\r\n   * @private\r\n   */\r\n  getDataForCuePoint_(pointDwName) {\r\n    /** @type {?number} */\r\n    let LISTindex = this.getLISTIndex('adtl');\r\n    /** @type {!Object} */\r\n    let pointData = {};\r\n    // If there is a adtl LIST in the file, look for\r\n    // LIST subchunks with data referencing this point\r\n    if (LISTindex !== null) {\r\n      this.getCueDataFromLIST_(pointData, LISTindex, pointDwName);\r\n    }\r\n    return pointData;\r\n  }\r\n\r\n  /**\r\n   * Get all data associated to a cue point in a LIST chunk.\r\n   * @param {!Object} pointData A object to hold the point data.\r\n   * @param {number} index The index of the adtl LIST chunk.\r\n   * @param {number} pointDwName The ID of the cue point.\r\n   * @private\r\n   */\r\n  getCueDataFromLIST_(pointData, index, pointDwName) {\r\n    // got through all chunks in the adtl LIST checking\r\n    // for references to this cue point\r\n    for (let i = 0, len = this.LIST[index].subChunks.length; i < len; i++) {\r\n      if (this.LIST[index].subChunks[i].dwName == pointDwName) {\r\n        /** @type {!Object} */\r\n        let chunk = this.LIST[index].subChunks[i];\r\n        // Some chunks may reference the point but\r\n        // have a empty text; this is to ensure that if\r\n        // one chunk that reference the point has a text,\r\n        // this value will be kept as the associated data label\r\n        // for the cue point.\r\n        // If different values are present, the last value found\r\n        // will be considered the label for the cue point.\r\n        pointData.value = chunk.value || pointData.value;\r\n        pointData.dwName = chunk.dwName || 0;\r\n        pointData.dwSampleLength = chunk.dwSampleLength || 0;\r\n        pointData.dwPurposeID = chunk.dwPurposeID || 0;\r\n        pointData.dwCountry = chunk.dwCountry || 0;\r\n        pointData.dwLanguage = chunk.dwLanguage || 0;\r\n        pointData.dwDialect = chunk.dwDialect || 0;\r\n        pointData.dwCodePage = chunk.dwCodePage || 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Push a new cue point in this.cue.points.\r\n   * @param {!Object} pointData A object with data of the cue point.\r\n   * @param {number} dwName the dwName of the cue point\r\n   * @private\r\n   */\r\n  setCuePoint_(pointData, dwName) {\r\n    this.cue.points.push({\r\n      dwName: dwName,\r\n      dwPosition: pointData.dwPosition ? pointData.dwPosition : 0,\r\n      fccChunk: pointData.fccChunk ? pointData.fccChunk : 'data',\r\n      dwChunkStart: pointData.dwChunkStart ? pointData.dwChunkStart : 0,\r\n      dwBlockStart: pointData.dwBlockStart ? pointData.dwBlockStart : 0,\r\n      dwSampleOffset: pointData.dwSampleOffset\r\n    });\r\n    this.setLabl_(pointData, dwName);\r\n  }\r\n\r\n  /**\r\n   * Push a new cue point in this.cue.points according to existing cue points.\r\n   * @param {!Array} existingPoints Array with the existing points.\r\n   * @param {!Object} pointData A object with data of the cue point.\r\n   * @private\r\n   */\r\n  setCuePointInOrder_(existingPoints, pointData) {\r\n    /** @type {boolean} */\r\n    let hasSet = false;\r\n\r\n    // Iterate over the cue points that existed\r\n    // before this one was added\r\n    for (let i = 0; i < existingPoints.length; i++) {\r\n\r\n      // If the new point is located before this original point\r\n      // and the new point have not been created, create the\r\n      // new point and then the original point\r\n      if (existingPoints[i].dwSampleOffset > \r\n        pointData.dwSampleOffset && !hasSet) {\r\n        // create the new point\r\n        this.setCuePoint_(pointData, i + 1);\r\n\r\n        // create the original point\r\n        this.setCuePoint_(existingPoints[i], i + 2);\r\n        hasSet = true;\r\n\r\n      // Otherwise, re-create the original point\r\n      } else {\r\n        this.setCuePoint_(existingPoints[i], hasSet ? i + 2 : i + 1);\r\n      }\r\n    }\r\n    // If no point was created in the above loop,\r\n    // create the new point as the last one\r\n    if (!hasSet) {\r\n      this.setCuePoint_(pointData, this.cue.points.length + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear any LIST chunk labeled as 'adtl'.\r\n   * @private\r\n   */\r\n  clearLISTadtl_() {\r\n    for (let i = 0, len = this.LIST.length; i < len; i++) {\r\n      if (this.LIST[i].format == 'adtl') {\r\n        this.LIST.splice(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new 'labl' subchunk in a 'LIST' chunk of type 'adtl'.\r\n   * This method creates a LIST adtl chunk in the file if one\r\n   * is not present.\r\n   * @param {!Object} pointData A object with data of the cue point.\r\n   * @param {number} dwName The ID of the cue point.\r\n   * @private\r\n   */\r\n  setLabl_(pointData, dwName) {\r\n    /**\r\n     * Get the index of the LIST chunk labeled as adtl.\r\n     * A file can have many LIST chunks with unique labels.\r\n     * @type {?number}\r\n     */\r\n    let adtlIndex = this.getLISTIndex('adtl');\r\n    // If there is no adtl LIST, create one\r\n    if (adtlIndex === null) {\r\n      // Include a new item LIST chunk\r\n      this.LIST.push({\r\n        chunkId: 'LIST',\r\n        chunkSize: 4,\r\n        format: 'adtl',\r\n        subChunks: []});\r\n      // Get the index of the new LIST chunk\r\n      adtlIndex = this.LIST.length - 1;\r\n    }\r\n    this.setLabelText_(adtlIndex, pointData, dwName);\r\n    if (pointData.dwSampleLength) {\r\n      this.setLtxtChunk_(adtlIndex, pointData, dwName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new 'labl' subchunk in a 'LIST' chunk of type 'adtl'.\r\n   * @param {number} adtlIndex The index of the 'adtl' LIST in this.LIST.\r\n   * @param {!Object} pointData A object with data of the cue point.\r\n   * @param {number} dwName The ID of the cue point.\r\n   * @private\r\n   */\r\n  setLabelText_(adtlIndex, pointData, dwName) {\r\n    this.LIST[adtlIndex].subChunks.push({\r\n      chunkId: 'labl',\r\n      chunkSize: 4, // should be 4 + label length in bytes\r\n      dwName: dwName,\r\n      value: pointData.label\r\n    });\r\n    this.LIST[adtlIndex].chunkSize += 12; // should be 4 + label byte length\r\n  }\r\n  /**\r\n   * Create a new 'ltxt' subchunk in a 'LIST' chunk of type 'adtl'.\r\n   * @param {number} adtlIndex The index of the 'adtl' LIST in this.LIST.\r\n   * @param {!Object} pointData A object with data of the cue point.\r\n   * @param {number} dwName The ID of the cue point.\r\n   * @private\r\n   */\r\n  setLtxtChunk_(adtlIndex, pointData, dwName) {\r\n    this.LIST[adtlIndex].subChunks.push({\r\n      chunkId: 'ltxt',\r\n      chunkSize: 20,  // should be 12 + label byte length\r\n      dwName: dwName,\r\n      dwSampleLength: pointData.dwSampleLength,\r\n      dwPurposeID: pointData.dwPurposeID || 0,\r\n      dwCountry: pointData.dwCountry || 0,\r\n      dwLanguage: pointData.dwLanguage || 0,\r\n      dwDialect: pointData.dwDialect || 0,\r\n      dwCodePage: pointData.dwCodePage || 0,\r\n      value: pointData.label // kept for compatibility\r\n    });\r\n    this.LIST[adtlIndex].chunkSize += 28;\r\n  }\r\n}\n\nexport { WaveFileCueEditor };\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright 2012 Spencer Cohen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The Interpolator class. Based on Smooth.js by Spencer Cohen.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/osuushi/Smooth.js\r\n */\r\n\r\n/**\r\n * A class to get scaled values out of arrays.\r\n * @extends WaveFileReader\r\n */\r\nclass Interpolator {\r\n  \r\n  /**\r\n   * @param {number} scaleFrom the length of the original array.\r\n   * @param {number} scaleTo The length of the new array.\r\n   * @param {!Object} details The extra configuration, if needed.\r\n   */\r\n  constructor(scaleFrom, scaleTo, details) {\r\n    /**\r\n     * The length of the original array.\r\n     * @type {number}\r\n     */\r\n    this.length_ = scaleFrom;\r\n    /**\r\n     * The scaling factor.\r\n     * @type {number}\r\n     */\r\n    this.scaleFactor_ = (scaleFrom - 1) / scaleTo;\r\n    /**\r\n     * The interpolation function.\r\n     * @type {Function}\r\n     */\r\n    this.interpolate = this.sinc;\r\n    if (details.method === 'point') {\r\n    \tthis.interpolate = this.point;\r\n    } else if(details.method === 'linear') {\r\n    \tthis.interpolate = this.linear;\r\n    } else if(details.method === 'cubic') {\r\n    \tthis.interpolate = this.cubic;\r\n    }\r\n    /**\r\n     * The tanget factor for cubic interpolation.\r\n     * @type {number}\r\n     */\r\n    this.tangentFactor_ = 1 - Math.max(0, Math.min(1, details.tension || 0));\r\n    // Configure the kernel for sinc\r\n    /**\r\n     * The sinc filter size.\r\n     * @type {number}\r\n     */\r\n    this.sincFilterSize_ = details.sincFilterSize || 1;\r\n    /**\r\n     * The sinc kernel.\r\n     * @type {Function}\r\n     */\r\n    this.kernel_ = sincKernel_(details.sincWindow || window_);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  point(t, samples) {\r\n    return this.getClippedInput_(Math.round(this.scaleFactor_ * t), samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  linear(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    /** @type {number} */\r\n    let k = Math.floor(t);\r\n    t -= k;\r\n    return (1 - t) *\r\n    \tthis.getClippedInput_(k, samples) + t *\r\n    \tthis.getClippedInput_(k + 1, samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  cubic(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    /** @type {number} */\r\n    let k = Math.floor(t);\r\n    /** @type {Array<number>} */\r\n    let m = [this.getTangent_(k, samples), this.getTangent_(k + 1, samples)];\r\n    /** @type {Array<number>} */\r\n    let p = [this.getClippedInput_(k, samples),\r\n      this.getClippedInput_(k + 1, samples)];\r\n    t -= k;\r\n    /** @type {number} */\r\n    let t2 = t * t;\r\n    /** @type {number} */\r\n    let t3 = t * t2;\r\n    return (2 * t3 - 3 * t2 + 1) *\r\n      p[0] + (t3 - 2 * t2 + t) *\r\n      m[0] + (-2 * t3 + 3 * t2) *\r\n      p[1] + (t3 - t2) * m[1];\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  sinc(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    /** @type {number} */\r\n    let k = Math.floor(t);\r\n    /** @type {number} */\r\n    let ref = k - this.sincFilterSize_ + 1;\r\n    /** @type {number} */\r\n    let ref1 = k + this.sincFilterSize_;\r\n    /** @type {number} */\r\n    let sum = 0;\r\n    for (let n = ref; n <= ref1; n++) {\r\n      sum += this.kernel_(t - n) * this.getClippedInput_(n, samples);\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * @param {number} k The scaled index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The tangent.\r\n   * @private\r\n   */\r\n  getTangent_(k, samples) {\r\n    return this.tangentFactor_ *\r\n      (this.getClippedInput_(k + 1, samples) -\r\n        this.getClippedInput_(k - 1, samples)) / 2;\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The scaled index to interpolate.\r\n   * @param {Array<number>|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   * @private\r\n   */\r\n  getClippedInput_(t, samples) {\r\n    if ((0 <= t && t < this.length_)) {\r\n      return samples[t];\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n/**\r\n * The default window function.\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction window_(x) {\r\n  return Math.exp(-x / 2 * x / 2);\r\n}\r\n\r\n/**\r\n * @param {Function} window The window function.\r\n * @return {Function}\r\n * @private\r\n */\r\nfunction sincKernel_(window) {\r\n  return function(x) { return sinc_(x) * window(x); };\r\n}\r\n\r\n/**\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction sinc_(x) {\r\n  if (x === 0) {\r\n    return 1;\r\n  }\r\n  return Math.sin(Math.PI * x) / (Math.PI * x);\r\n}\n\nexport { Interpolator };\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * A FIR low pass filter.\r\n */\r\nclass FIRLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    /** @type {number} */\r\n    let omega = 2 * Math.PI * cutOff / sampleRate;\r\n    /** @type {number} */\r\n    let dc = 0;\r\n    this.filters = [];\r\n    for (let i = 0; i <= order; i++) {\r\n      if (i - order / 2 === 0) {\r\n        this.filters[i] = omega;\r\n      } else {\r\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\r\n        // Hamming window\r\n        this.filters[i] *= (0.54 - 0.46 * Math.cos(2 * Math.PI * i / order));\r\n      }\r\n      dc = dc + this.filters[i];\r\n    }\r\n    // normalize\r\n    for (let i = 0; i <= order; i++) {\r\n      this.filters[i] /= dc;\r\n    }\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    this.z.buf[this.z.pointer] = sample;\r\n    /** @type {number} */\r\n    let out = 0;\r\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\r\n      out += (\r\n        this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length]);\r\n    }\r\n    this.z.pointer = (this.z.pointer + 1) % (this.z.buf.length);\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\r\n  initZ_() {\r\n    /** @type {!Array} */\r\n    let r = [];\r\n    for (let i = 0; i < this.filters.length - 1; i++) {\r\n      r.push(0);\r\n    }\r\n    return {\r\n      buf: r,\r\n      pointer: 0\r\n    };\r\n  }\r\n}\n\nexport { FIRLPF };\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Butterworth LPF. Based on the Butterworth LPF from Fili.js.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * Butterworth LPF.\r\n */\r\nclass ButterworthLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    /** @type {!Array} */\r\n    let filters = [];\r\n    for (let i = 0; i < order; i++) {\r\n      filters.push(this.getCoeffs_({\r\n        Fs: sampleRate,\r\n        Fc: cutOff,\r\n        Q: 0.5 / (Math.sin((Math.PI / (order * 2)) * (i + 0.5)))\r\n      }));\r\n    }\r\n    this.stages = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      this.stages[i] = {\r\n        b0 : filters[i].b[0],\r\n        b1 : filters[i].b[1],\r\n        b2 : filters[i].b[2],\r\n        a1 : filters[i].a[0],\r\n        a2 : filters[i].a[1],\r\n        k : filters[i].k,\r\n        z : [0, 0]\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    /** @type {number} */\r\n    let out = sample;\r\n    for (let i = 0, len = this.stages.length; i < len; i++) {\r\n      out = this.runStage_(i, out);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @return {!Object}\r\n   */\r\n  getCoeffs_(params) {\r\n    /** @type {!Object} */\r\n    let coeffs = {};\r\n    coeffs.a = [];\r\n    coeffs.b = [];\r\n    /** @type {!Object} */\r\n    let p = this.preCalc_(params, coeffs);\r\n    coeffs.k = 1;\r\n    coeffs.b.push((1 - p.cw) / (2 * p.a0));\r\n    coeffs.b.push(2 * coeffs.b[0]);\r\n    coeffs.b.push(coeffs.b[0]);\r\n    return coeffs;\r\n  }\r\n\r\n  /**\r\n   * @param {!Object} params The filter params.\r\n   * @param {!Object} coeffs The coefficients template.\r\n   * @return {!Object}\r\n   */\r\n  preCalc_(params, coeffs) {\r\n    /** @type {!Object} */\r\n    let pre = {};\r\n    /** @type {number} */\r\n    let w = 2 * Math.PI * params.Fc / params.Fs;\r\n    pre.alpha = Math.sin(w) / (2 * params.Q);\r\n    pre.cw = Math.cos(w);\r\n    pre.a0 = 1 + pre.alpha;\r\n    coeffs.a0 = pre.a0;\r\n    coeffs.a.push((-2 * pre.cw) / pre.a0);\r\n    coeffs.k = 1;\r\n    coeffs.a.push((1 - pre.alpha) / pre.a0);\r\n    return pre;\r\n  }\r\n  \r\n  /**\r\n   * @param {number} i The stage index.\r\n   * @param {number} sample The sample.\r\n   * @return {number}\r\n   */\r\n  runStage_(i, sample) {\r\n    /** @type {number} */\r\n    let temp = sample * this.stages[i].k - this.stages[i].a1 *\r\n      this.stages[i].z[0] - this.stages[i].a2 * this.stages[i].z[1];\r\n    /** @type {number} */\r\n    let out = this.stages[i].b0 * temp + this.stages[i].b1 *\r\n      this.stages[i].z[0] + this.stages[i].b2 * this.stages[i].z[1];\r\n    this.stages[i].z[1] = this.stages[i].z[0];\r\n    this.stages[i].z[0] = temp;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    for (let i = 0; i < this.stages.length; i++) {\r\n      this.stages[i].z = [0, 0];\r\n    }\r\n  }\r\n}\n\nexport { ButterworthLPF };\n","import { Interpolator } from './interpolator.js';\nimport { FIRLPF } from './fir-lpf.js';\nimport { ButterworthLPF } from './butterworth-lpf.js';\n\n/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * Default use of LPF for each resampling method.\r\n * @readonly\r\n * @enum {boolean}\r\n * @private\r\n */\r\nconst DEFAULT_LPF_USE = {\r\n  'point': false,\r\n  'linear': false,\r\n  'cubic': true,\r\n  'sinc': true\r\n};\r\n\r\n/**\r\n * Default LPF order for each type of LPF.\r\n * @readonly\r\n * @enum {number}\r\n * @private\r\n */\r\nconst DEFAULT_LPF_ORDER = {\r\n  'IIR': 16,\r\n  'FIR': 71\r\n};\r\n\r\n/**\r\n * Default LPF class for each type of LPF.\r\n * @readonly\r\n * @enum {!Function}\r\n * @private\r\n */\r\nconst DEFAULT_LPF = {\r\n  'IIR': ButterworthLPF,\r\n  'FIR': FIRLPF\r\n};\r\n\r\n/**\r\n * Change the sample rate of the samples to a new sample rate.\r\n * @param {!Array<number>|!TypedArray} samples The original samples.\r\n * @param {number} oldSampleRate The original sample rate.\r\n * @param {number} sampleRate The target sample rate.\r\n * @param {Object=} options The extra configuration, if needed.\r\n * @return {!Float64Array} the new samples.\r\n */\r\nfunction resample(samples, oldSampleRate, sampleRate, options=null) {\r\n  options = options || {};\r\n  // Make the new sample container\r\n  /** @type {number} */\r\n  let rate = ((sampleRate - oldSampleRate) / oldSampleRate) + 1;\r\n  /** @type {!Float64Array} */\r\n  let newSamples = new Float64Array(samples.length * (rate));\r\n  // Create the interpolator\r\n  options.method = options.method || 'cubic';\r\n  /** @type {!Object} */\r\n  let interpolator = new Interpolator(\r\n    samples.length,\r\n    newSamples.length,\r\n    {\r\n      method: options.method,\r\n      tension: options.tension || 0,\r\n      sincFilterSize: options.sincFilterSize || 6,\r\n      sincWindow: options.sincWindow || undefined,\r\n      clip: options.clip || 'mirror'\r\n    });\r\n  // Resample + LPF\r\n  if (options.LPF === undefined) {\r\n    options.LPF = DEFAULT_LPF_USE[options.method];\r\n  } \r\n  if (options.LPF) {\r\n    options.LPFType = options.LPFType || 'IIR';\r\n    const LPF = DEFAULT_LPF[options.LPFType];\r\n    // Upsampling\r\n    if (sampleRate > oldSampleRate) {\r\n      /** @type {!Object} */\r\n      let filter = new LPF(\r\n        options.LPForder || DEFAULT_LPF_ORDER[options.LPFType],\r\n        sampleRate,\r\n        (oldSampleRate / 2));\r\n      upsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    // Downsampling\r\n    } else {\r\n      /** @type {!Object} */\r\n      let filter = new LPF(\r\n        options.LPForder || DEFAULT_LPF_ORDER[options.LPFType],\r\n        oldSampleRate,\r\n        sampleRate / 2);\r\n      downsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    }\r\n  // Resample, no LPF\r\n  } else {\r\n    resample_(samples, newSamples, interpolator);\r\n  }\r\n  return newSamples;\r\n}\r\n\r\n/**\r\n * Resample.\r\n * @param {!Array<number>|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @private\r\n */\r\nfunction resample_(samples, newSamples, interpolator) {\r\n  // Resample\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = interpolator.interpolate(i, samples);\r\n  }\r\n}\r\n\r\n/**\r\n * Upsample with LPF.\r\n * @param {!Array<number>|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction upsample_(samples, newSamples, interpolator, filter) {\r\n  // Resample and filter\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = filter.filter(interpolator.interpolate(i, samples));\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = newSamples.length - 1; i >= 0; i--) {\r\n    newSamples[i]  = filter.filter(newSamples[i]);\r\n  }\r\n}\r\n\r\n/**\r\n * Downsample with LPF.\r\n * @param {!Array<number>|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction downsample_(samples, newSamples, interpolator, filter) {\r\n  // Filter\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = samples.length - 1; i >= 0; i--) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Resample\r\n  resample_(samples, newSamples, interpolator);\r\n}\n\nexport { resample };\n","import { changeBitDepth } from './codecs/bitdepth.js';\nimport { encode, decode } from './codecs/imaadpcm.js';\nimport { encode as encode$1, decode as decode$1 } from './codecs/alaw.js';\nimport { encode as encode$2, decode as decode$2 } from './codecs/mulaw.js';\nimport { unpackArrayTo } from './parsers/binary/index.js';\nimport { WaveFileCueEditor } from './wavefile-cue-editor.js';\nimport { validateSampleRate } from './validators/validate-sample-rate.js';\nimport { resample } from './resampler/index.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to convert wav files to other types of wav files.\r\n * @extends WaveFileCueEditor\r\n * @ignore\r\n */\r\nclass WaveFileConverter extends WaveFileCueEditor {\r\n\r\n  /**\r\n   * Force a file as RIFF.\r\n   */\r\n  toRIFF() {\r\n    /** @type {!Float64Array} */\r\n    let output = new Float64Array(\r\n      outputSize_(this.data.samples.length, this.dataType.bits / 8));\r\n    unpackArrayTo(this.data.samples, this.dataType, output,\r\n      0, this.data.samples.length);\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      this.bitDepth,\r\n      output,\r\n      {container: 'RIFF'});\r\n  }\r\n\r\n  /**\r\n   * Force a file as RIFX.\r\n   */\r\n  toRIFX() {\r\n    /** @type {!Float64Array} */\r\n    let output = new Float64Array(\r\n      outputSize_(this.data.samples.length, this.dataType.bits / 8));\r\n    unpackArrayTo(this.data.samples, this.dataType, output,\r\n      0, this.data.samples.length);\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      this.bitDepth,\r\n      output,\r\n      {container: 'RIFX'});\r\n  }\r\n\r\n  /**\r\n   * Encode a 16-bit wave file as 4-bit IMA ADPCM.\r\n   * @throws {Error} If sample rate is not 8000.\r\n   * @throws {Error} If number of channels is not 1.\r\n   */\r\n  toIMAADPCM() {\r\n    if (this.fmt.sampleRate !== 8000) {\r\n      throw new Error(\r\n        'Only 8000 Hz files can be compressed as IMA-ADPCM.');\r\n    } else if (this.fmt.numChannels !== 1) {\r\n      throw new Error(\r\n        'Only mono files can be compressed as IMA-ADPCM.');\r\n    } else {\r\n      this.assure16Bit_();\r\n      /** @type {!Int16Array} */\r\n      let output = new Int16Array(\r\n        outputSize_(this.data.samples.length, 2));\r\n      unpackArrayTo(this.data.samples, this.dataType, output,\r\n        0, this.data.samples.length);\r\n      this.fromExisting_(\r\n        this.fmt.numChannels,\r\n        this.fmt.sampleRate,\r\n        '4',\r\n        encode(output),\r\n        {container: this.correctContainer_()});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decode a 4-bit IMA ADPCM wave file as a 16-bit wave file.\r\n   * @param {string=} [bitDepthCode='16'] The new bit depth of the samples.\r\n   *    One of '8' ... '32' (integers), '32f' or '64' (floats).\r\n   */\r\n  fromIMAADPCM(bitDepthCode='16') {\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      '16',\r\n      decode(this.data.samples, this.fmt.blockAlign),\r\n      {container: this.correctContainer_()});\r\n    if (bitDepthCode != '16') {\r\n      this.toBitDepth(bitDepthCode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encode a 16-bit wave file as 8-bit A-Law.\r\n   */\r\n  toALaw() {\r\n    this.assure16Bit_();\r\n    /** @type {!Int16Array} */\r\n    let output = new Int16Array(\r\n      outputSize_(this.data.samples.length, 2));\r\n    unpackArrayTo(this.data.samples, this.dataType, output,\r\n        0, this.data.samples.length);\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      '8a',\r\n      encode$1(output),\r\n      {container: this.correctContainer_()});\r\n  }\r\n\r\n  /**\r\n   * Decode a 8-bit A-Law wave file into a 16-bit wave file.\r\n   * @param {string=} [bitDepthCode='16'] The new bit depth of the samples.\r\n   *    One of '8' ... '32' (integers), '32f' or '64' (floats).\r\n   */\r\n  fromALaw(bitDepthCode='16') {\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      '16',\r\n      decode$1(this.data.samples),\r\n      {container: this.correctContainer_()});\r\n    if (bitDepthCode != '16') {\r\n      this.toBitDepth(bitDepthCode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encode 16-bit wave file as 8-bit mu-Law.\r\n   */\r\n  toMuLaw() {\r\n    this.assure16Bit_();\r\n    /** @type {!Int16Array} */\r\n    let output = new Int16Array(\r\n      outputSize_(this.data.samples.length, 2));\r\n    unpackArrayTo(this.data.samples, this.dataType, output,\r\n        0, this.data.samples.length);\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      '8m',\r\n      encode$2(output),\r\n      {container: this.correctContainer_()});\r\n  }\r\n\r\n  /**\r\n   * Decode a 8-bit mu-Law wave file into a 16-bit wave file.\r\n   * @param {string=} [bitDepthCode='16'] The new bit depth of the samples.\r\n   *    One of '8' ... '32' (integers), '32f' or '64' (floats).\r\n   */\r\n  fromMuLaw(bitDepthCode='16') {\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      '16',\r\n      decode$2(this.data.samples),\r\n      {container: this.correctContainer_()});\r\n    if (bitDepthCode != '16') {\r\n      this.toBitDepth(bitDepthCode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change the bit depth of the samples.\r\n   * @param {string} newBitDepth The new bit depth of the samples.\r\n   *    One of '8' ... '32' (integers), '32f' or '64' (floats)\r\n   * @param {boolean=} [changeResolution=true] A boolean indicating if the\r\n   *    resolution of samples should be actually changed or not.\r\n   * @throws {Error} If the bit depth is not valid.\r\n   */\r\n  toBitDepth(newBitDepth, changeResolution=true) {\r\n    /** @type {string} */\r\n    let toBitDepth = newBitDepth;\r\n    /** @type {string} */\r\n    let thisBitDepth = this.bitDepth;\r\n    if (!changeResolution) {\r\n      if (newBitDepth != '32f') {\r\n        toBitDepth = this.dataType.bits.toString();\r\n      }\r\n      thisBitDepth = '' + this.dataType.bits;\r\n    }\r\n    // If the file is compressed, make it\r\n    // PCM before changing the bit depth\r\n    this.assureUncompressed_();\r\n    /**\r\n     * The original samples, interleaved.\r\n     * @type {!(Array|TypedArray)}\r\n     */\r\n    let samples = this.getSamples(true);\r\n    /**\r\n     * The container for the new samples.\r\n     * @type {!Float64Array}\r\n     */\r\n    let newSamples = new Float64Array(samples.length);\r\n    // Change the bit depth\r\n    changeBitDepth(samples, thisBitDepth, newSamples, toBitDepth);\r\n    // Re-create the file\r\n    this.fromExisting_(\r\n      this.fmt.numChannels,\r\n      this.fmt.sampleRate,\r\n      newBitDepth,\r\n      newSamples,\r\n      {container: this.correctContainer_()});\r\n  }\r\n\r\n  /**\r\n   * Convert the sample rate of the file.\r\n   * @param {number} sampleRate The target sample rate.\r\n   * @param {Object=} options The extra configuration, if needed.\r\n   */\r\n  toSampleRate(sampleRate, options) {\r\n    this.validateResample_(sampleRate);\r\n    /** @type {!(Array|TypedArray)} */\r\n    let samples = this.getSamples();\r\n    /** @type {!(Array|Float64Array)} */\r\n    let newSamples = [];\r\n    // Mono files\r\n    if (samples.constructor === Float64Array) {\r\n      newSamples = resample(samples, this.fmt.sampleRate, sampleRate, options);\r\n    // Multi-channel files\r\n    } else {\r\n      for (let i = 0; i < samples.length; i++) {\r\n        newSamples.push(resample(\r\n          samples[i], this.fmt.sampleRate, sampleRate, options));\r\n      }\r\n    }\r\n    // Recreate the file\r\n    this.fromExisting_(\r\n      this.fmt.numChannels, sampleRate, this.bitDepth, newSamples,\r\n      {'container': this.correctContainer_()});\r\n  }\r\n\r\n  /**\r\n   * Validate the conditions for resampling.\r\n   * @param {number} sampleRate The target sample rate.\r\n   * @throws {Error} If the file cant be resampled.\r\n   * @private\r\n   */\r\n  validateResample_(sampleRate) {\r\n    if (!validateSampleRate(\r\n        this.fmt.numChannels, this.fmt.bitsPerSample, sampleRate)) {\r\n      throw new Error('Invalid sample rate.');\r\n    } else if (['4','8a','8m'].indexOf(this.bitDepth) > -1) {\r\n      throw new Error(\r\n        'wavefile can\\'t change the sample rate of compressed files.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make the file 16-bit if it is not.\r\n   * @private\r\n   */\r\n  assure16Bit_() {\r\n    this.assureUncompressed_();\r\n    if (this.bitDepth != '16') {\r\n      this.toBitDepth('16');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Uncompress the samples in case of a compressed file.\r\n   * @private\r\n   */\r\n  assureUncompressed_() {\r\n    if (this.bitDepth == '8a') {\r\n      this.fromALaw();\r\n    } else if (this.bitDepth == '8m') {\r\n      this.fromMuLaw();\r\n    } else if (this.bitDepth == '4') {\r\n      this.fromIMAADPCM();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return 'RIFF' if the container is 'RF64', the current container name\r\n   * otherwise. Used to enforce 'RIFF' when RF64 is not allowed.\r\n   * @return {string}\r\n   * @private\r\n   */\r\n  correctContainer_() {\r\n    return this.container == 'RF64' ? 'RIFF' : this.container;\r\n  }\r\n\r\n  /**\r\n   * Set up the WaveFileCreator object based on the arguments passed.\r\n   * This method only reset the fmt , fact, ds64 and data chunks.\r\n   * @param {number} numChannels The number of channels\r\n   *    (Integer numbers: 1 for mono, 2 stereo and so on).\r\n   * @param {number} sampleRate The sample rate.\r\n   *    Integer numbers like 8000, 44100, 48000, 96000, 192000.\r\n   * @param {string} bitDepthCode The audio bit depth code.\r\n   *    One of '4', '8', '8a', '8m', '16', '24', '32', '32f', '64'\r\n   *    or any value between '8' and '32' (like '12').\r\n   * @param {!(Array|TypedArray)} samples\r\n   *    The samples. Must be in the correct range according to the bit depth.\r\n   * @param {Object} options Used to define the container. Uses RIFF by default.\r\n   * @throws {Error} If any argument does not meet the criteria.\r\n   * @private\r\n   */\r\n  fromExisting_(numChannels, sampleRate, bitDepthCode, samples, options) {\r\n    /** @type {!Object} */\r\n    let tmpWav = new WaveFileCueEditor();\r\n    Object.assign(this.fmt, tmpWav.fmt);\r\n    Object.assign(this.fact, tmpWav.fact);\r\n    Object.assign(this.ds64, tmpWav.ds64);\r\n    Object.assign(this.data, tmpWav.data);\r\n    this.newWavFile_(numChannels, sampleRate, bitDepthCode, samples, options);\r\n  }\r\n}\r\n\r\n/**\r\n * Return the size in bytes of the output sample array when applying\r\n * compression to 16-bit samples.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction outputSize_(byteLen, byteOffset) {\r\n  /** @type {number} */\r\n  let outputSize = byteLen / byteOffset;\r\n  if (outputSize % 2) {\r\n    outputSize++;\r\n  }\r\n  return outputSize;\r\n}\n\nexport { WaveFileConverter };\n","import { decode, encode } from './lib/parsers/base64-arraybuffer.js';\nimport { WaveFileConverter } from './lib/wavefile-converter.js';\n\n/*\r\n * Copyright (c) 2017-2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n\r\n/**\r\n * A class to manipulate wav files.\r\n * @extends WaveFileConverter\r\n */\r\nclass WaveFile extends WaveFileConverter {\r\n\r\n  /**\r\n   * @param {Uint8Array=} wav A wave file buffer.\r\n   * @throws {Error} If container is not RIFF, RIFX or RF64.\r\n   * @throws {Error} If format is not WAVE.\r\n   * @throws {Error} If no 'fmt ' chunk is found.\r\n   * @throws {Error} If no 'data' chunk is found.\r\n   */\r\n  constructor(wav) {\r\n    super();\r\n    if (wav) {\r\n      this.fromBuffer(wav);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use a .wav file encoded as a base64 string to load the WaveFile object.\r\n   * @param {string} base64String A .wav file as a base64 string.\r\n   * @throws {Error} If any property of the object appears invalid.\r\n   */\r\n  fromBase64(base64String) {\r\n    this.fromBuffer(decode(base64String));\r\n  }\r\n\r\n  /**\r\n   * Return a base64 string representig the WaveFile object as a .wav file.\r\n   * @return {string} A .wav file as a base64 string.\r\n   * @throws {Error} If any property of the object appears invalid.\r\n   */\r\n  toBase64() {\r\n    return encode(this.toBuffer());\r\n  }\r\n\r\n  /**\r\n   * Return a DataURI string representig the WaveFile object as a .wav file.\r\n   * The return of this method can be used to load the audio in browsers.\r\n   * @return {string} A .wav file as a DataURI.\r\n   * @throws {Error} If any property of the object appears invalid.\r\n   */\r\n  toDataURI() {\r\n    return 'data:audio/wav;base64,' + this.toBase64();\r\n  }\r\n\r\n  /**\r\n   * Use a .wav file encoded as a DataURI to load the WaveFile object.\r\n   * @param {string} dataURI A .wav file as DataURI.\r\n   * @throws {Error} If any property of the object appears invalid.\r\n   */\r\n  fromDataURI(dataURI) {\r\n    this.fromBase64(dataURI.replace('data:audio/wav;base64,', ''));\r\n  }\r\n}\n\nexport { WaveFile };\n","import '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { createEngine as createEngine$1 } from '../../../WebPd_compiler/dist/src/engine-assemblyscript/run/index.js';\nimport { createEngine as createEngine$2 } from '../../../WebPd_compiler/dist/src/engine-javascript/run/index.js';\nimport { getFloatArrayType } from '../../../WebPd_compiler/dist/src/run/run-helpers.js';\nimport { WaveFile } from '../../node_modules/wavefile/index.js';\nimport { getArtefact } from './helpers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst renderWav = async (durationSeconds, artefacts, audioSettings) => {\n    let target = 'assemblyscript';\n    if (!artefacts.wasm && !artefacts.javascript) {\n        throw new Error(`Need compiled wasm or compiled js to render wav`);\n    }\n    if (!artefacts.wasm) {\n        target = 'javascript';\n    }\n    const engine = await createEngine(artefacts, target);\n    const audioData = await renderAudioData(engine, durationSeconds, audioSettings);\n    return audioDataToWav(audioData, audioSettings.sampleRate);\n};\nconst audioDataToWav = (audioData, sampleRate) => {\n    const channelCount = audioData.length;\n    let wav = new WaveFile();\n    wav.fromScratch(channelCount, sampleRate, '32f', audioData.map((channelData) => channelData.map((v) => v)));\n    return wav.toBuffer();\n};\nconst createEngine = async (artefacts, target) => {\n    switch (target) {\n        case 'javascript':\n            return createEngine$2(getArtefact(artefacts, 'javascript'));\n        case 'assemblyscript':\n            return createEngine$1(getArtefact(artefacts, 'wasm'));\n    }\n};\nconst renderAudioData = (engine, durationSeconds, audioSettings) => {\n    const { channelCount, sampleRate, blockSize } = audioSettings;\n    const durationSamples = Math.round(durationSeconds * sampleRate);\n    const blockInput = _makeBlock('in', audioSettings);\n    const blockOutput = _makeBlock('out', audioSettings);\n    const output = _makeBlock('out', audioSettings, durationSamples);\n    engine.initialize(sampleRate, blockSize);\n    let frame = 0;\n    while (frame < durationSamples) {\n        engine.dspLoop(blockInput, blockOutput);\n        for (let channel = 0; channel < channelCount.out; channel++) {\n            output[channel].set(blockOutput[channel].slice(0, Math.min(blockSize, durationSamples - frame)), frame);\n        }\n        frame += blockSize;\n    }\n    return output;\n};\nconst _makeBlock = (inOrOut, audioSettings, blockSize) => {\n    const { channelCount, blockSize: defaultBlockSize, bitDepth, } = audioSettings;\n    if (blockSize === undefined) {\n        blockSize = defaultBlockSize;\n    }\n    const floatArrayType = getFloatArrayType(bitDepth);\n    const block = [];\n    for (let channel = 0; channel < channelCount[inOrOut]; channel++) {\n        block.push(new floatArrayType(Math.round(blockSize)));\n    }\n    return block;\n};\n\nexport { renderWav };\n","import { Sequence } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertNumber } from '../validation.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : set message not supported\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode, patch) => {\n        let channelMapping;\n        if (pdNode.args.length) {\n            // Channels are provided as 1-indexed, so we translate them back to 0-indexed.\n            channelMapping = pdNode.args.map((channel) => assertNumber(channel) - 1);\n        }\n        else {\n            // If no channel is provided, since a patch doesn't contain the channel count info,\n            // we just guess the `channelMapping` according to inlets that are defined on the dac.\n            const dacInletIds = new Set();\n            patch.connections.forEach((connection) => {\n                if (connection.sink.nodeId === pdNode.id) {\n                    dacInletIds.add(connection.sink.portletId);\n                }\n            });\n            const maxInlet = Math.max(...dacInletIds);\n            channelMapping = [];\n            for (let channel = 0; channel <= maxInlet; channel++) {\n                channelMapping.push(channel);\n            }\n        }\n        return { channelMapping };\n    },\n    build: (nodeArgs) => ({\n        inlets: mapArray(nodeArgs.channelMapping, (_, i) => [`${i}`, { type: 'signal', id: `${i}` }]),\n        outlets: {},\n        isPullingSignal: true,\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'dac_t',\n    },\n    dsp: ({ ins, node }, { core }, { audio, target }) => Sequence([\n        node.args.channelMapping\n            // Save the original index\n            .map((destination, i) => [destination, i])\n            // Ignore channels that are out of bounds\n            .filter(([destination]) => 0 <= destination && destination < audio.channelCount.out)\n            .map(([destination, i]) => target === 'javascript'\n            ? `${core.OUTPUT}[${destination}][${core.IT_FRAME}] = ${ins[`${i}`]}`\n            : `${core.OUTPUT}[${core.IT_FRAME} + ${core.BLOCK_SIZE} * ${destination}] = ${ins[`${i}`]}`)\n    ])\n};\n\nexport { builder, nodeImplementation };\n","import { Sequence } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertNumber } from '../validation.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : set message not supported\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode, patch) => {\n        let channelMapping;\n        if (pdNode.args.length) {\n            // Channels are provided as 1-indexed, so we translate them back to 0-indexed.\n            channelMapping = pdNode.args.map((channel) => assertNumber(channel) - 1);\n        }\n        else {\n            // If no channel is provided, since a patch doesn't contain the channel count info,\n            // we just guess the `channelMapping` according to inlets that are defined on the dac.\n            const adcOutletIds = new Set();\n            patch.connections.forEach((connection) => {\n                if (connection.source.nodeId === pdNode.id) {\n                    adcOutletIds.add(connection.source.portletId);\n                }\n            });\n            const maxOutlet = Math.max(...adcOutletIds);\n            channelMapping = [];\n            for (let channel = 0; channel <= maxOutlet; channel++) {\n                channelMapping.push(channel);\n            }\n        }\n        return { channelMapping };\n    },\n    build: (nodeArgs) => ({\n        inlets: {},\n        outlets: mapArray(nodeArgs.channelMapping, (_, i) => [`${i}`, { type: 'signal', id: `${i}` }]),\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'adc_t',\n    },\n    dsp: ({ outs, node }, { core }, { audio, target }) => Sequence([\n        node.args.channelMapping\n            // Save the original index \n            .map((source, i) => [source, i])\n            // Ignore channels that are out of bounds\n            .filter(([source]) => 0 <= source && source < audio.channelCount.in)\n            .map(([source, i]) => target === 'javascript'\n            ? `${outs[`${i}`]} = ${core.INPUT}[${source}][${core.IT_FRAME}]`\n            : `${outs[`${i}`]} = ${core.INPUT}[${core.IT_FRAME} + ${core.BLOCK_SIZE} * ${source}]`)\n    ])\n};\n\nexport { builder, nodeImplementation };\n","import { bangUtils } from '../global-code/core.js';\nimport { AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// --------------------------- node implementation --------------------------- //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'samplerate_t',\n    },\n    messageReceivers: ({ snds }, { core, msg, bangUtils }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) { \n                ${snds.$0}(${msg.floats}([${core.SAMPLE_RATE}])) \n                return\n            }\n        `,\n    }),\n    dependencies: [\n        bangUtils\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        frequency: assertOptionalNumber(pdNode.args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, { frequency }) => {\n        if (inletId === '0') {\n            return { initialSignalValue: frequency };\n        }\n        return undefined;\n    },\n};\n// ------------------------------ node implementation ------------------------------ //\nconst makeNodeImplementation = ({ alphaName, coeff, generateOperation, }) => {\n    const nodeImplementation = {\n        flags: {\n            alphaName,\n        },\n        state: ({ ns }) => Class(ns.State, [\n            Var(`Float`, `phase`, 0),\n            Var(`Float`, `step`, 0),\n        ]),\n        initialization: ({ ns, state }) => ast `\n            ${ns.setStep}(${state}, 0)\n        `,\n        messageReceivers: ({ ns, state }, { msg }) => ({\n            '1': coldFloatInletWithSetter(ns.setPhase, state, msg),\n        }),\n        dsp: ({ ns, state, outs, ins }) => ({\n            inlets: {\n                '0': ast `${ns.setStep}(${state}, ${ins.$0})`\n            },\n            loop: ast `\n                ${outs.$0} = ${generateOperation(`${state}.phase`)}\n                ${state}.phase += ${state}.step\n            `\n        }),\n        core: ({ ns }, { core }) => Sequence([\n            Func(ns.setStep, [\n                Var(ns.State, `state`),\n                Var(`Float`, `freq`),\n            ]) `\n                    state.step = (${coeff} / ${core.SAMPLE_RATE}) * freq\n                `,\n            Func(ns.setPhase, [\n                Var(ns.State, `state`),\n                Var(`Float`, `phase`),\n            ]) `\n                    state.phase = phase % 1.0${coeff ? ` * ${coeff}` : ''}\n                `,\n        ]),\n    };\n    return nodeImplementation;\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    'osc~': makeNodeImplementation({\n        alphaName: 'osc_t',\n        coeff: '2 * Math.PI',\n        generateOperation: (phase) => `Math.cos(${phase})`\n    }),\n    'phasor~': makeNodeImplementation({\n        alphaName: 'phasor_t',\n        coeff: '1',\n        generateOperation: (phase) => `${phase} % 1`\n    }),\n};\nconst builders = {\n    'osc~': builder,\n    'phasor~': builder,\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInlet } from '../standard-message-receivers.js';\nimport { Class, Var, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        minValue: assertOptionalNumber(args[0]) || 0,\n        maxValue: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    })\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        isPureFunction: true,\n        isDspInline: true,\n        alphaName: 'clip_t',\n    },\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `minValue`, args.minValue),\n        Var(`Float`, `maxValue`, args.maxValue),\n    ]),\n    dsp: ({ ins, state }) => ast `Math.max(Math.min(${state}.maxValue, ${ins.$0}), ${state}.minValue)`,\n    messageReceivers: ({ state }, { msg }) => ({\n        '1': coldFloatInlet(`${state}.minValue`, msg),\n        '2': coldFloatInlet(`${state}.maxValue`, msg),\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'samphold_t',\n    },\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `signalMemory`, 0),\n        Var(`Float`, `controlMemory`, 0),\n    ]),\n    dsp: ({ ins, outs, state }) => ast `\n        ${state}.signalMemory = ${outs.$0} = ${ins.$1} < ${state}.controlMemory ? ${ins.$0}: ${state}.signalMemory\n        ${state}.controlMemory = ${ins.$1}\n    `,\n    messageReceivers: ({ state }, { msg }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)], `void`) `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${state}.signalMemory = ${msg.readFloatToken}(m, 1)\n                return\n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'reset'\n            ) {\n                ${state}.controlMemory = ${msg.readFloatToken}(m, 1)\n                return\n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'reset'\n            ) {\n                ${state}.controlMemory = 1e20\n                return\n            }\n        `,\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { bangUtils } from '../global-code/core.js';\nimport { Class, Var, ast, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPullingSignal: true,\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'snapshot_t',\n    },\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `currentValue`, 0)\n    ]),\n    dsp: ({ ins, state }) => ast `\n        ${state}.currentValue = ${ins.$0}\n    `,\n    messageReceivers: ({ state, snds }, { msg, bangUtils }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)], `void`) `\n            if (${bangUtils.isBang}(m)) {\n                ${snds.$0}(${msg.floats}([${state}.currentValue]))\n                return \n            }\n        `,\n    }),\n    dependencies: [\n        bangUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { Func, Var, Class } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst point = {\n    namespace: 'points',\n    // prettier-ignore\n    code: ({ ns: points }) => Class(points.Point, [\n        Var(`Float`, `x`),\n        Var(`Float`, `y`),\n    ])\n};\nconst interpolateLin = {\n    namespace: 'points',\n    // prettier-ignore\n    code: ({ ns: points }) => Func(points.interpolateLin, [\n        Var(`Float`, `x`),\n        Var(points.Point, `p0`),\n        Var(points.Point, `p1`)\n    ], 'Float') `\n        return p0.y + (x - p0.x) * (p1.y - p0.y) / (p1.x - p0.x)\n    `,\n    dependencies: [point],\n};\n\nexport { interpolateLin, point };\n","import { interpolateLin } from './points.js';\nimport { Sequence, Class, Var, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\nconst linesUtils = {\n    namespace: 'linesUtils',\n    // prettier-ignore\n    code: ({ ns: linesUtils }, { points }) => Sequence([\n        Class(linesUtils.LineSegment, [\n            Var(points.Point, `p0`),\n            Var(points.Point, `p1`),\n            Var(`Float`, `dx`),\n            Var(`Float`, `dy`),\n        ]),\n        Func(linesUtils.computeSlope, [\n            Var(points.Point, `p0`),\n            Var(points.Point, `p1`)\n        ], 'Float') `\n            return p1.x !== p0.x ? (p1.y - p0.y) / (p1.x - p0.x) : 0\n        `,\n        Func(linesUtils.removePointsBeforeFrame, [\n            Var(`Array<${points.Point}>`, `points`),\n            Var(`Float`, `frame`)\n        ], `Array<${points.Point}>`) `\n            ${ConstVar(`Array<${points.Point}>`, `newPoints`, `[]`)}\n            ${Var(`Int`, `i`, `0`)}\n            while (i < points.length) {\n                if (frame <= points[i].x) {\n                    newPoints.push(points[i])\n                }\n                i++\n            }\n            return newPoints\n        `,\n        Func(linesUtils.insertNewLinePoints, [\n            Var(`Array<${points.Point}>`, `points`),\n            Var(points.Point, `p0`),\n            Var(points.Point, `p1`)\n        ], `Array<${points.Point}>`) `\n            ${ConstVar(`Array<${points.Point}>`, `newPoints`, `[]`)}\n            ${Var(`Int`, `i`, `0`)}\n            \n            // Keep the points that are before the new points added\n            while (i < points.length && points[i].x <= p0.x) {\n                newPoints.push(points[i])\n                i++\n            }\n            \n            // Find the start value of the start point :\n            \n            // 1. If there is a previous point and that previous point\n            // is on the same frame, we don't modify the start point value.\n            // (represents a vertical line).\n            if (0 < i - 1 && points[i - 1].x === p0.x) {\n\n            // 2. If new points are inserted in between already existing points \n            // we need to interpolate the existing line to find the startValue.\n            } else if (0 < i && i < points.length) {\n                newPoints.push({\n                    x: p0.x,\n                    y: ${points.interpolateLin}(p0.x, points[i - 1], points[i])\n                })\n\n            // 3. If new line is inserted after all existing points, \n            // we just take the value of the last point\n            } else if (i >= points.length && points.length) {\n                newPoints.push({\n                    x: p0.x,\n                    y: points[points.length - 1].y,\n                })\n\n            // 4. If new line placed in first position, we take the defaultStartValue.\n            } else if (i === 0) {\n                newPoints.push({\n                    x: p0.x,\n                    y: p0.y,\n                })\n            }\n            \n            newPoints.push({\n                x: p1.x,\n                y: p1.y,\n            })\n            return newPoints\n        `,\n        Func(linesUtils.computeFrameAjustedPoints, [\n            Var(`Array<${points.Point}>`, `points`)\n        ], `Array<${points.Point}>`) `\n            if (points.length < 2) {\n                throw new Error('invalid length for points')\n            }\n\n            ${ConstVar(`Array<${points.Point}>`, `newPoints`, `[]`)}\n            ${Var(`Int`, `i`, `0`)}\n            ${Var(points.Point, `p`, `points[0]`)}\n            ${Var(`Float`, `frameLower`, `0`)}\n            ${Var(`Float`, `frameUpper`, `0`)}\n            \n            while(i < points.length) {\n                p = points[i]\n                frameLower = Math.floor(p.x)\n                frameUpper = frameLower + 1\n\n                // I. Placing interpolated point at the lower bound of the current frame\n                // ------------------------------------------------------------------------\n                // 1. Point is already on an exact frame,\n                if (p.x === frameLower) {\n                    newPoints.push({ x: p.x, y: p.y })\n\n                    // 1.a. if several of the next points are also on the same X,\n                    // we find the last one to draw a vertical line.\n                    while (\n                        (i + 1) < points.length\n                        && points[i + 1].x === frameLower\n                    ) {\n                        i++\n                    }\n                    if (points[i].y !== newPoints[newPoints.length - 1].y) {\n                        newPoints.push({ x: points[i].x, y: points[i].y })\n                    }\n\n                    // 1.b. if last point, we quit\n                    if (i + 1 >= points.length) {\n                        break\n                    }\n\n                    // 1.c. if next point is in a different frame we can move on to next iteration\n                    if (frameUpper <= points[i + 1].x) {\n                        i++\n                        continue\n                    }\n                \n                // 2. Point isn't on an exact frame\n                // 2.a. There's a previous point, the we use it to interpolate the value.\n                } else if (newPoints.length) {\n                    newPoints.push({\n                        x: frameLower,\n                        y: ${points.interpolateLin}(frameLower, points[i - 1], p),\n                    })\n                \n                // 2.b. It's the very first point, then we don't change its value.\n                } else {\n                    newPoints.push({ x: frameLower, y: p.y })\n                }\n\n                // II. Placing interpolated point at the upper bound of the current frame\n                // ---------------------------------------------------------------------------\n                // First, we find the closest point from the frame upper bound (could be the same p).\n                // Or could be a point that is exactly placed on frameUpper.\n                while (\n                    (i + 1) < points.length \n                    && (\n                        Math.ceil(points[i + 1].x) === frameUpper\n                        || Math.floor(points[i + 1].x) === frameUpper\n                    )\n                ) {\n                    i++\n                }\n                p = points[i]\n\n                // 1. If the next point is directly in the next frame, \n                // we do nothing, as this corresponds with next iteration frameLower.\n                if (Math.floor(p.x) === frameUpper) {\n                    continue\n                \n                // 2. If there's still a point after p, we use it to interpolate the value\n                } else if (i < points.length - 1) {\n                    newPoints.push({\n                        x: frameUpper,\n                        y: ${points.interpolateLin}(frameUpper, p, points[i + 1]),\n                    })\n\n                // 3. If it's the last point, we dont change the value\n                } else {\n                    newPoints.push({ x: frameUpper, y: p.y })\n                }\n\n                i++\n            }\n\n            return newPoints\n        `,\n        Func(linesUtils.computeLineSegments, [\n            Var(`Array<${points.Point}>`, `points`)\n        ], `Array<${linesUtils.LineSegment}>`) `\n            ${ConstVar(`Array<${linesUtils.LineSegment}>`, `lineSegments`, `[]`)}\n            ${Var(`Int`, `i`, `0`)}\n            ${Var(points.Point, `p0`)}\n            ${Var(points.Point, `p1`)}\n\n            while(i < points.length - 1) {\n                p0 = points[i]\n                p1 = points[i + 1]\n                lineSegments.push({\n                    p0, p1, \n                    dy: ${linesUtils.computeSlope}(p0, p1),\n                    dx: 1,\n                })\n                i++\n            }\n            return lineSegments\n        `,\n    ]),\n    dependencies: [interpolateLin],\n};\n\nexport { linesUtils };\n","import { Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst computeUnitInSamples = {\n    namespace: 'timing',\n    // prettier-ignore\n    code: () => Func('computeUnitInSamples', [\n        Var(`Float`, `sampleRate`),\n        Var(`Float`, `amount`),\n        Var(`string`, `unit`),\n    ], 'Float') `\n        if (unit.slice(0, 3) === 'per') {\n            if (amount !== 0) {\n                amount = 1 / amount\n            }\n            unit = unit.slice(3)\n        }\n\n        if (unit === 'msec' || unit === 'milliseconds' || unit === 'millisecond') {\n            return amount / 1000 * sampleRate\n        } else if (unit === 'sec' || unit === 'seconds' || unit === 'second') {\n            return amount * sampleRate\n        } else if (unit === 'min' || unit === 'minutes' || unit === 'minute') {\n            return amount * 60 * sampleRate\n        } else if (unit === 'samp' || unit === 'samples' || unit === 'sample') {\n            return amount\n        } else {\n            throw new Error(\"invalid time unit : \" + unit)\n        }\n    `\n};\n\nexport { computeUnitInSamples };\n","import { actionUtils } from '../global-code/core.js';\nimport { linesUtils } from '../global-code/lines.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'vline_t',\n    },\n    state: ({ ns }, { linesUtils, points }) => Class(ns.State, [\n        Var(`Array<${points.Point}>`, `points`, `[]`),\n        Var(`Array<${linesUtils.LineSegment}>`, `lineSegments`, `[]`),\n        Var(`Float`, `currentValue`, 0),\n        Var(`Float`, `nextDurationSamp`, 0),\n        Var(`Float`, `nextDelaySamp`, 0),\n    ]),\n    dsp: ({ outs, state }, { core }) => ast `\n        if (${state}.lineSegments.length) {\n            if (toFloat(${core.FRAME}) < ${state}.lineSegments[0].p0.x) {\n\n            // This should come first to handle vertical lines\n            } else if (toFloat(${core.FRAME}) === ${state}.lineSegments[0].p1.x) {\n                ${state}.currentValue = ${state}.lineSegments[0].p1.y\n                ${state}.lineSegments.shift()\n\n            } else if (toFloat(${core.FRAME}) === ${state}.lineSegments[0].p0.x) {\n                ${state}.currentValue = ${state}.lineSegments[0].p0.y\n\n            } else if (toFloat(${core.FRAME}) < ${state}.lineSegments[0].p1.x) {\n                ${state}.currentValue += ${state}.lineSegments[0].dy\n\n            }\n        }\n        ${outs.$0} = ${state}.currentValue\n    `,\n    messageReceivers: ({ ns, state }, { actionUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n        if (\n            ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])\n            || ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])\n            || ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])\n        ) {\n            switch (${msg.getLength}(m)) {\n                case 3:\n                    ${ns.setNextDelay}(${state}, ${msg.readFloatToken}(m, 2))\n                case 2:\n                    ${ns.setNextDuration}(${state}, ${msg.readFloatToken}(m, 1))\n                case 1:\n                    ${ns.setNewLine}(${state}, ${msg.readFloatToken}(m, 0))\n            }\n            return\n    \n        } else if (${actionUtils.isAction}(m, 'stop')) {\n            ${state}.points = []\n            ${state}.lineSegments = []\n            return\n        }\n        `,\n        '1': coldFloatInletWithSetter(ns.setNextDuration, state, msg),\n        '2': coldFloatInletWithSetter(ns.setNextDelay, state, msg),\n    }),\n    core: ({ ns }, { linesUtils, core }) => Sequence([\n        Func(ns.setNewLine, [\n            Var(ns.State, `state`),\n            Var(`Float`, `targetValue`),\n        ], 'void') `\n                state.points = ${linesUtils.removePointsBeforeFrame}(state.points, toFloat(${core.FRAME}))\n                ${ConstVar(`Float`, `startFrame`, `toFloat(${core.FRAME}) + state.nextDelaySamp`)}\n                ${ConstVar(`Float`, `endFrame`, `startFrame + state.nextDurationSamp`)}\n                if (endFrame === toFloat(${core.FRAME})) {\n                    state.currentValue = targetValue\n                    state.lineSegments = []\n                } else {\n                    state.points = ${linesUtils.insertNewLinePoints}(\n                        state.points, \n                        {x: startFrame, y: state.currentValue},\n                        {x: endFrame, y: targetValue}\n                    )\n                    state.lineSegments = ${linesUtils.computeLineSegments}(\n                        ${linesUtils.computeFrameAjustedPoints}(state.points))\n                }\n                state.nextDurationSamp = 0\n                state.nextDelaySamp = 0\n            `,\n        Func(ns.setNextDuration, [\n            Var(ns.State, `state`),\n            Var(`Float`, `durationMsec`),\n        ], 'void') `\n                state.nextDurationSamp = computeUnitInSamples(${core.SAMPLE_RATE}, durationMsec, 'msec')\n            `,\n        Func(ns.setNextDelay, [\n            Var(ns.State, `state`),\n            Var(`Float`, `delayMsec`),\n        ], 'void') `\n                state.nextDelaySamp = computeUnitInSamples(${core.SAMPLE_RATE}, delayMsec, 'msec')\n            `,\n    ]),\n    dependencies: [\n        linesUtils,\n        computeUnitInSamples,\n        actionUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { actionUtils } from '../global-code/core.js';\nimport { linesUtils } from '../global-code/lines.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, AnonFunc, ast, Sequence, ConstVar, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'line_t',\n    },\n    state: ({ node: { args }, ns }, { linesUtils }) => Class(ns.State, [\n        Var(linesUtils.LineSegment, `currentLine`, ns.defaultLine),\n        Var(`Float`, `currentValue`, args.initValue),\n        Var(`Float`, `nextDurationSamp`, 0),\n    ]),\n    messageReceivers: ({ ns, state }, { actionUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])\n                || ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])\n            ) {\n                switch (${msg.getLength}(m)) {\n                    case 2:\n                        ${ns.setNextDuration}(${state}, ${msg.readFloatToken}(m, 1))\n                    case 1:\n                        ${ns.setNewLine}(${state}, ${msg.readFloatToken}(m, 0))\n                }\n                return\n    \n            } else if (${actionUtils.isAction}(m, 'stop')) {\n                ${ns.stop}(${state})\n                return\n    \n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setNextDuration, state, msg),\n    }),\n    dsp: ({ outs, state }, { core }) => ast `\n        ${outs.$0} = ${state}.currentValue\n        if (toFloat(${core.FRAME}) < ${state}.currentLine.p1.x) {\n            ${state}.currentValue += ${state}.currentLine.dy\n            if (toFloat(${core.FRAME} + 1) >= ${state}.currentLine.p1.x) {\n                ${state}.currentValue = ${state}.currentLine.p1.y\n            }\n        }\n    `,\n    core: ({ ns }, { linesUtils, core }) => Sequence([\n        ConstVar(linesUtils.LineSegment, ns.defaultLine, `{\n                p0: {x: -1, y: 0},\n                p1: {x: -1, y: 0},\n                dx: 1,\n                dy: 0,\n            }`),\n        Func(ns.setNewLine, [\n            Var(ns.State, `state`),\n            Var(`Float`, `targetValue`),\n        ], 'void') `\n                ${ConstVar(`Float`, `startFrame`, `toFloat(${core.FRAME})`)}\n                ${ConstVar(`Float`, `endFrame`, `toFloat(${core.FRAME}) + state.nextDurationSamp`)}\n                if (endFrame === toFloat(${core.FRAME})) {\n                    state.currentLine = ${ns.defaultLine}\n                    state.currentValue = targetValue\n                    state.nextDurationSamp = 0\n                } else {\n                    state.currentLine = {\n                        p0: {\n                            x: startFrame, \n                            y: state.currentValue,\n                        }, \n                        p1: {\n                            x: endFrame, \n                            y: targetValue,\n                        }, \n                        dx: 1,\n                        dy: 0,\n                    }\n                    state.currentLine.dy = ${linesUtils.computeSlope}(state.currentLine.p0, state.currentLine.p1)\n                    state.nextDurationSamp = 0\n                }\n            `,\n        Func(ns.setNextDuration, [\n            Var(ns.State, `state`),\n            Var(`Float`, `durationMsec`),\n        ], 'void') `\n                state.nextDurationSamp = computeUnitInSamples(${core.SAMPLE_RATE}, durationMsec, 'msec')\n            `,\n        Func(ns.stop, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                state.currentLine.p1.x = -1\n                state.currentLine.p1.y = state.currentValue\n            `\n    ]),\n    dependencies: [\n        actionUtils,\n        computeUnitInSamples,\n        linesUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { actionUtils } from '../global-code/core.js';\nimport { linesUtils } from '../global-code/lines.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, ast, AnonFunc, ConstVar, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst MIN_GRAIN_MSEC = 20;\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n        timeGrainMsec: Math.max(assertOptionalNumber(args[1]) || MIN_GRAIN_MSEC, MIN_GRAIN_MSEC),\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true,\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }, { sked, msg, linesUtils }) => Class(ns.State, [\n        Var(linesUtils.LineSegment, `currentLine`, `{\n                p0: {x: -1, y: 0},\n                p1: {x: -1, y: 0},\n                dx: 1,\n                dy: 0,\n            }`),\n        Var(`Float`, `currentValue`, args.initValue),\n        Var(`Float`, `nextSamp`, -1),\n        Var(`Int`, `nextSampInt`, -1),\n        Var(`Float`, `grainSamp`, 0),\n        Var(`Float`, `nextDurationSamp`, 0),\n        Var(sked.Id, `skedId`, sked.ID_NULL),\n        Var(msg.Handler, `snd0`, ast `${AnonFunc([Var(msg.Message, `m`)]) ``}`),\n        Var(sked.Callback, `tickCallback`, ast `${AnonFunc() ``}`),\n    ]),\n    initialization: ({ ns, node: { args }, state, snds }) => ast `\n            ${ns.setGrain}(${state}, ${args.timeGrainMsec})\n            ${state}.snd0 = ${snds.$0}\n            ${state}.tickCallback = ${AnonFunc() `\n                ${ns.tick}(${state})\n            `}\n        `,\n    messageReceivers: ({ ns, snds, state, }, { actionUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])\n                || ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])\n                || ${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])\n            ) {\n                ${ns.stopCurrentLine}(${state})\n                switch (${msg.getLength}(m)) {\n                    case 3:\n                        ${ns.setGrain}(${state}, ${msg.readFloatToken}(m, 2))\n                    case 2:\n                        ${ns.setNextDuration}(${state}, ${msg.readFloatToken}(m, 1))\n                    case 1:\n                        ${ConstVar(`Float`, `targetValue`, `${msg.readFloatToken}(m, 0)`)}\n                        if (${state}.nextDurationSamp === 0) {\n                            ${state}.currentValue = targetValue\n                            ${snds.$0}(${msg.floats}([targetValue]))\n                        } else {\n                            ${snds.$0}(${msg.floats}([${state}.currentValue]))\n                            ${ns.setNewLine}(${state}, targetValue)\n                            ${ns.incrementTime}(${state}, ${state}.currentLine.dx)\n                            ${ns.scheduleNextTick}(${state})\n                        }\n                        \n                }\n                return\n    \n            } else if (${actionUtils.isAction}(m, 'stop')) {\n                ${ns.stopCurrentLine}(${state})\n                return\n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.stopCurrentLine}(${state})\n                ${state}.currentValue = ${msg.readFloatToken}(m, 1)\n                return\n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setNextDuration, state, msg),\n        '2': coldFloatInletWithSetter(ns.setGrain, state, msg),\n    }),\n    core: ({ ns }, { commons, core, sked, msg, linesUtils, points }) => Sequence([\n        Func(ns.setNewLine, [\n            Var(ns.State, `state`),\n            Var(`Float`, `targetValue`),\n        ], 'void') `\n                state.currentLine = {\n                    p0: {\n                        x: toFloat(${core.FRAME}), \n                        y: state.currentValue,\n                    }, \n                    p1: {\n                        x: toFloat(${core.FRAME}) + state.nextDurationSamp, \n                        y: targetValue,\n                    }, \n                    dx: state.grainSamp\n                }\n                state.nextDurationSamp = 0\n                state.currentLine.dy = ${linesUtils.computeSlope}(state.currentLine.p0, state.currentLine.p1) * state.grainSamp\n            `,\n        Func(ns.setNextDuration, [\n            Var(ns.State, `state`),\n            Var(`Float`, `durationMsec`),\n        ], 'void') `\n                state.nextDurationSamp = computeUnitInSamples(${core.SAMPLE_RATE}, durationMsec, 'msec')\n            `,\n        Func(ns.setGrain, [\n            Var(ns.State, `state`),\n            Var(`Float`, `grainMsec`),\n        ], 'void') `\n                state.grainSamp = computeUnitInSamples(${core.SAMPLE_RATE}, Math.max(grainMsec, ${MIN_GRAIN_MSEC}), 'msec')\n            `,\n        Func(ns.stopCurrentLine, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                if (state.skedId !== ${sked.ID_NULL}) {\n                    ${commons.cancelWaitFrame}(state.skedId)\n                    state.skedId = ${sked.ID_NULL}\n                }\n                if (${core.FRAME} < state.nextSampInt) {\n                    ${ns.incrementTime}(state, -1 * (state.nextSamp - toFloat(${core.FRAME})))\n                }\n                ${ns.setNextSamp}(state, -1)\n            `,\n        Func(ns.setNextSamp, [\n            Var(ns.State, `state`),\n            Var(`Float`, `currentSamp`),\n        ], 'void') `\n                state.nextSamp = currentSamp\n                state.nextSampInt = toInt(Math.round(currentSamp))\n            `,\n        Func(ns.incrementTime, [\n            Var(ns.State, `state`),\n            Var(`Float`, `incrementSamp`),\n        ], 'void') `\n                if (incrementSamp === state.currentLine.dx) {\n                    state.currentValue += state.currentLine.dy\n                } else {\n                    state.currentValue += ${points.interpolateLin}(\n                        incrementSamp,\n                        {x: 0, y: 0},\n                        {x: state.currentLine.dx, y: state.currentLine.dy},\n                    )\n                }\n                ${ns.setNextSamp}(\n                    state, \n                    (state.nextSamp !== -1 ? state.nextSamp: toFloat(${core.FRAME})) + incrementSamp\n                )\n            `,\n        Func(ns.tick, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                state.snd0(${msg.floats}([state.currentValue]))\n                if (toFloat(${core.FRAME}) >= state.currentLine.p1.x) {\n                    state.currentValue = state.currentLine.p1.y\n                    ${ns.stopCurrentLine}(state)\n                } else {\n                    ${ns.incrementTime}(state, state.currentLine.dx)\n                    ${ns.scheduleNextTick}(state)\n                }\n            `,\n        Func(ns.scheduleNextTick, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                state.skedId = ${commons.waitFrame}(state.nextSampInt, state.tickCallback)\n            `\n    ]),\n    dependencies: [\n        actionUtils,\n        computeUnitInSamples,\n        linesUtils,\n        commonsWaitFrame,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\nconst MAX_MIDI_FREQ = Math.pow(2, (1499 - 69) / 12) * 440;\n// Also possible to use optimized version, but gives approximate results : 8.17579891564 * Math.exp(0.0577622650 * value)\nconst mtof = {\n    namespace: 'funcs',\n    // prettier-ignore\n    code: ({ ns: funcs }) => Func(funcs.mtof, [\n        Var(`Float`, `value`),\n    ], 'Float') `\n        return value <= -1500 ? 0: (value > 1499 ? ${MAX_MIDI_FREQ} : Math.pow(2, (value - 69) / 12) * 440)\n    `,\n};\n// optimized version of formula : 12 * Math.log(freq / 440) / Math.LN2 + 69\n// which is the same as : Math.log(freq / mtof(0)) * (12 / Math.LN2)\n// which is the same as : Math.log(freq / 8.1757989156) * (12 / Math.LN2)\nconst ftom = {\n    namespace: 'funcs',\n    // prettier-ignore\n    code: ({ ns: funcs }) => Func(funcs.ftom, [\n        Var(`Float`, `value`),\n    ], 'Float') `\n        return value <= 0 ? -1500: 12 * Math.log(value / 440) / Math.LN2 + 69\n    `,\n};\n// TODO : tests (see in binop)\nconst pow = {\n    namespace: 'funcs',\n    // prettier-ignore\n    code: ({ ns: funcs }) => Func(funcs.pow, [\n        Var(`Float`, `leftOp`),\n        Var(`Float`, `rightOp`),\n    ], 'Float') `\n        return leftOp > 0 || (Math.round(rightOp) === rightOp) ? Math.pow(leftOp, rightOp): 0\n    `,\n};\n\nexport { ftom, mtof, pow };\n","import { mtof, ftom } from '../global-code/funcs.js';\nimport { ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ---------------------------- node implementation -------------------------- //\nconst nodeImplementations = {\n    'abs~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'abs_t',\n        },\n        dsp: ({ ins }) => ast `Math.abs(${ins.$0})`,\n    },\n    'cos~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'cos_t',\n        },\n        dsp: ({ ins }) => ast `Math.cos(${ins.$0} * 2 * Math.PI)`,\n    },\n    'wrap~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'wrap_t',\n        },\n        dsp: ({ ins }) => ast `(1 + (${ins.$0} % 1)) % 1`,\n    },\n    'sqrt~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'sqrt_t',\n        },\n        dsp: ({ ins }) => ast `${ins.$0} >= 0 ? Math.pow(${ins.$0}, 0.5): 0`,\n    },\n    'mtof~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'mtof_t',\n        },\n        dsp: ({ ins }, { funcs }) => ast `${funcs.mtof}(${ins.$0})`,\n        dependencies: [mtof],\n    },\n    'ftom~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'ftom_t',\n        },\n        dsp: ({ ins }, { funcs }) => ast `${funcs.ftom}(${ins.$0})`,\n        dependencies: [ftom],\n    },\n};\nconst builders = {\n    'abs~': builder,\n    'cos~': builder,\n    'wrap~': builder,\n    'sqrt~': builder,\n    'mtof~': builder,\n    'ftom~': builder,\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalString } from '../validation.js';\nimport { Sequence, ConstVar, Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst translateArgsTabBase = (pdNode) => ({\n    arrayName: assertOptionalString(pdNode.args[0]) || '',\n});\nconst nodeCoreTabBase = (ns, { sked, commons }) => Sequence([\n    ConstVar(`FloatArray`, ns.emptyArray, `createFloatArray(1)`),\n    Func(ns.createState, [\n        Var(`string`, `arrayName`),\n    ], ns.State) `\n            return {\n                array: ${ns.emptyArray},\n                arrayName,\n                arrayChangesSubscription: ${sked.ID_NULL},\n                readPosition: 0,\n                readUntil: 0,\n                writePosition: 0,\n            }\n        `,\n    Func(ns.setArrayName, [\n        Var(ns.State, `state`),\n        Var(`string`, `arrayName`),\n        Var(sked.Callback, `callback`),\n    ], 'void') `\n            if (state.arrayChangesSubscription != ${sked.ID_NULL}) {\n                ${commons.cancelArrayChangesSubscription}(state.arrayChangesSubscription)\n            }\n            state.arrayName = arrayName\n            state.array = ${ns.emptyArray}\n            ${commons.subscribeArrayChanges}(arrayName, callback)\n        `,\n    Func(ns.prepareIndex, [\n        Var(`Float`, `index`),\n        Var(`Int`, `arrayLength`),\n    ], 'Int') `\n            return toInt(Math.min(\n                Math.max(\n                    0, Math.floor(index)\n                ), toFloat(arrayLength - 1)\n            ))\n        `\n]);\n\nexport { nodeCoreTabBase, translateArgsTabBase };\n","import { translateArgsTabBase, nodeCoreTabBase } from './tab-base.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: translateArgsTabBase,\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }, { sked }) => Class(ns.State, [\n        Var(`FloatArray`, `array`, ns.emptyArray),\n        Var(`string`, `arrayName`, `\"${args.arrayName}\"`),\n        Var(sked.Id, `arrayChangesSubscription`, sked.ID_NULL),\n        Var(`Int`, `readPosition`, 0),\n        Var(`Int`, `readUntil`, 0),\n        Var(`Int`, `writePosition`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        if (${state}.arrayName.length) {\n            ${ns.setArrayName}(\n                ${state}, \n                ${state}.arrayName,\n                () => ${ns.setArrayNameFinalize}(${state})\n            )\n        }\n    `,\n    messageReceivers: ({ ns, snds, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {        \n                if (${state}.array.length === 0) {\n                    ${snds.$0}(${msg.floats}([0]))\n\n                } else {\n                    ${snds.$0}(${msg.floats}([${state}.array[\n                        ${ns.prepareIndex}(\n                            ${msg.readFloatToken}(m, 0), \n                            ${state}.array.length\n                        )\n                    ]]))\n                }\n                return \n\n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setArrayName}(\n                    ${state}, \n                    ${msg.readStringToken}(m, 1),\n                    () => ${ns.setArrayNameFinalize}(${state})\n                )\n                return\n        \n            }\n        `,\n    }),\n    core: ({ ns }, globals) => {\n        const { commons } = globals;\n        return Sequence([\n            nodeCoreTabBase(ns, globals),\n            Func(ns.setArrayNameFinalize, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.array = ${commons.getArray}(state.arrayName)\n            `,\n        ]);\n    },\n    dependencies: [\n        commonsArrays,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { translateArgsTabBase, nodeCoreTabBase } from './tab-base.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: translateArgsTabBase,\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {},\n    }),\n};\n// ------------------------------ generateDeclarations ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }, { sked }) => Class(ns.State, [\n        Var(`FloatArray`, `array`, ns.emptyArray),\n        Var(`string`, `arrayName`, `\"${args.arrayName}\"`),\n        Var(sked.Id, `arrayChangesSubscription`, sked.ID_NULL),\n        Var(`Int`, `readPosition`, 0),\n        Var(`Int`, `readUntil`, 0),\n        Var(`Int`, `writePosition`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        if (${state}.arrayName.length) {\n            ${ns.setArrayName}(\n                ${state}, \n                ${state}.arrayName,\n                () => ${ns.setArrayNameFinalize}(${state})\n            )\n        }\n    `,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {        \n                if (${state}.array.length === 0) {\n                    return\n\n                } else {\n                    ${state}.array[${state}.writePosition] = ${msg.readFloatToken}(m, 0)\n                    return\n                }\n\n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setArrayName}(\n                    ${state}, \n                    ${msg.readStringToken}(m, 1),\n                    () => ${ns.setArrayNameFinalize}(${state}),\n                )\n                return\n        \n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setWritePosition, state, msg)\n    }),\n    core: ({ ns }, globals) => {\n        const { commons } = globals;\n        return Sequence([\n            nodeCoreTabBase(ns, globals),\n            Func(ns.setArrayNameFinalize, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.array = ${commons.getArray}(state.arrayName)\n            `,\n            Func(ns.setWritePosition, [\n                Var(ns.State, `state`),\n                Var(`Float`, `writePosition`)\n            ], 'void') `\n                state.writePosition = ${ns.prepareIndex}(writePosition, state.array.length)\n            `\n        ]);\n    },\n    dependencies: [\n        commonsArrays,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalString } from '../validation.js';\nimport { actionUtils, bangUtils } from '../global-code/core.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { nodeCoreTabBase } from './tab-base.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        arrayName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        isPullingSignal: true,\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {}\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'tabwrite_t',\n    },\n    state: ({ node: { args }, ns }, { sked }) => Class(ns.State, [\n        Var(`FloatArray`, `array`, ns.emptyArray),\n        Var(`string`, `arrayName`, `\"${args.arrayName}\"`),\n        Var(sked.Id, `arrayChangesSubscription`, sked.ID_NULL),\n        Var(`Int`, `writePosition`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        if (${state}.arrayName.length) {\n            ${ns.setArrayName}(\n                ${state}, \n                ${state}.arrayName,\n                () => ${ns.setArrayNameFinalize}(${state})\n            )\n        }\n    `,\n    messageReceivers: ({ ns, state }, { msg, bangUtils, actionUtils }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${ns.start}(${state}, 0)\n                return \n                \n            } else if (${actionUtils.isAction}(m, 'stop')) {\n                ${ns.stop}(${state})\n                return \n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setArrayName}(\n                    ${state},\n                    ${msg.readStringToken}(m, 1),\n                    () => ${ns.setArrayNameFinalize}(${state}),\n                )\n                return\n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'start'\n            ) {\n                ${ns.start}(\n                    ${state},\n                    toInt(${msg.readFloatToken}(m, 1))\n                )\n                return \n    \n            }\n        `,\n    }),\n    dsp: ({ state, ins }) => ast `\n        if (${state}.writePosition < ${state}.array.length) {\n            ${state}.array[${state}.writePosition++] = ${ins.$0}\n        }\n    `,\n    core: ({ ns }, globals) => {\n        const { commons } = globals;\n        return Sequence([\n            nodeCoreTabBase(ns, globals),\n            Func(ns.setArrayNameFinalize, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.array = ${commons.getArray}(state.arrayName)\n                state.writePosition = state.array.length\n            `,\n            Func(ns.start, [\n                Var(ns.State, `state`),\n                Var(`Int`, `writeFrom`),\n            ], 'void') `\n                state.writePosition = writeFrom\n            `,\n            Func(ns.stop, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.writePosition = state.array.length\n            `,\n        ]);\n    },\n    dependencies: [\n        commonsArrays,\n        actionUtils,\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalString } from '../validation.js';\nimport { bangUtils, actionUtils } from '../global-code/core.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { nodeCoreTabBase } from './tab-base.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : tabread4 interpolation algorithm\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        arrayName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        isDspInline: true,\n        alphaName: 'tabread_t',\n    },\n    state: ({ node: { args }, ns }, { sked }) => Class(ns.State, [\n        Var(`FloatArray`, `array`, ns.emptyArray),\n        Var(`string`, `arrayName`, `\"${args.arrayName}\"`),\n        Var(sked.Id, `arrayChangesSubscription`, sked.ID_NULL),\n        Var(`Int`, `readPosition`, 0),\n        Var(`Int`, `readUntil`, 0),\n        Var(`Int`, `writePosition`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        if (${state}.arrayName.length) {\n            ${ns.setArrayName}(\n                ${state}, \n                ${state}.arrayName,\n                () => ${ns.setArrayNameFinalize}(${state})\n            )\n        }\n    `,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setArrayName}(\n                    ${state},\n                    ${msg.readStringToken}(m, 1),\n                    () => ${ns.setArrayNameFinalize}(${state}),\n                )\n                return\n    \n            }\n        `,\n    }),\n    dsp: ({ ins, state }) => ast `${state}.array[toInt(Math.max(Math.min(Math.floor(${ins.$0}), toFloat(${state}.array.length - 1)), 0))]`,\n    core: ({ ns }, globals) => {\n        const { commons } = globals;\n        return Sequence([\n            nodeCoreTabBase(ns, globals),\n            Func(ns.setArrayNameFinalize, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.array = ${commons.getArray}(state.arrayName)\n            `,\n        ]);\n    },\n    dependencies: [\n        bangUtils,\n        commonsArrays,\n        actionUtils,\n    ],\n};\nconst builders = {\n    'tabread~': builder,\n    'tabread4~': builder,\n};\nconst nodeImplementations = {\n    'tabread~': nodeImplementation,\n    'tabread4~': nodeImplementation,\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalString } from '../validation.js';\nimport { bangUtils, actionUtils } from '../global-code/core.js';\nimport { Class, Var, ast, AnonFunc, ConstVar, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { nodeCoreTabBase } from './tab-base.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : Should work also if array was set the play started\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        arrayName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'tabplay_t',\n    },\n    state: ({ node: { args }, ns }, { sked }) => Class(ns.State, [\n        Var(`FloatArray`, `array`, ns.emptyArray),\n        Var(`string`, `arrayName`, `\"${args.arrayName}\"`),\n        Var(sked.Id, `arrayChangesSubscription`, sked.ID_NULL),\n        Var(`Int`, `readPosition`, 0),\n        Var(`Int`, `readUntil`, 0),\n        Var(`Int`, `writePosition`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        if (${state}.arrayName.length) {\n            ${ns.setArrayName}(\n                ${state}, \n                ${state}.arrayName,\n                () => ${ns.setArrayNameFinalize}(${state})\n            )\n        }\n    `,\n    messageReceivers: ({ ns, state }, { msg, bangUtils, actionUtils }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${ns.play}(${state}, 0, ${state}.array.length)\n                return \n                \n            } else if (${actionUtils.isAction}(m, 'stop')) {\n                ${ns.stop}(${state})\n                return \n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setArrayName}(\n                    ${state},\n                    ${msg.readStringToken}(m, 1),\n                    () => ${ns.setArrayNameFinalize}(${state}),\n                )\n                return\n    \n            } else if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${ns.play}(\n                    ${state},\n                    toInt(${msg.readFloatToken}(m, 0)), \n                    ${state}.array.length\n                )\n                return \n    \n            } else if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}, ${msg.FLOAT_TOKEN}])) {\n                ${ConstVar(`Int`, `fromSample`, `toInt(${msg.readFloatToken}(m, 0))`)}\n                ${ns.play}(\n                    ${state},\n                    fromSample,\n                    fromSample + toInt(${msg.readFloatToken}(m, 1)),\n                )\n                return\n            }\n        `,\n    }),\n    dsp: ({ state, snds, outs }, { bangUtils }) => ast `\n        if (${state}.readPosition < ${state}.readUntil) {\n            ${outs.$0} = ${state}.array[${state}.readPosition]\n            ${state}.readPosition++\n            if (${state}.readPosition >= ${state}.readUntil) {\n                ${snds.$1}(${bangUtils.bang}())\n            }\n        } else {\n            ${outs.$0} = 0\n        }\n    `,\n    core: ({ ns }, globals) => {\n        const { commons } = globals;\n        return Sequence([\n            nodeCoreTabBase(ns, globals),\n            Func(ns.setArrayNameFinalize, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.array = ${commons.getArray}(state.arrayName)\n                state.readPosition = state.array.length\n                state.readUntil = state.array.length\n            `,\n            Func(ns.play, [\n                Var(ns.State, `state`),\n                Var(`Int`, `playFrom`),\n                Var(`Int`, `playTo`),\n            ], 'void') `\n                state.readPosition = playFrom\n                state.readUntil = toInt(Math.min(\n                    toFloat(playTo), \n                    toFloat(state.array.length),\n                ))\n            `,\n            Func(ns.stop, [\n                Var(ns.State, `state`),\n            ], 'void') `\n                state.readPosition = 0\n                state.readUntil = 0\n            `,\n        ]);\n    },\n    dependencies: [\n        bangUtils,\n        commonsArrays,\n        actionUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Sequence, Func, Var, Class, ConstVar } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'buf';\nconst bufCore = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: buf }) => Sequence([\n        /**\n         * Ring buffer\n         */\n        Class(buf.SoundBuffer, [\n            Var(`FloatArray`, `data`),\n            Var(`Int`, `length`),\n            Var(`Int`, `writeCursor`),\n            Var(`Int`, `pullAvailableLength`),\n        ]),\n        /** Erases all the content from the buffer */\n        Func(buf.clear, [\n            Var(buf.SoundBuffer, `buffer`)\n        ], 'void') `\n            buffer.data.fill(0)\n        `,\n        /** Erases all the content from the buffer */\n        Func(buf.create, [\n            Var(`Int`, `length`)\n        ], buf.SoundBuffer) `\n            return {\n                data: createFloatArray(length),\n                length: length,\n                writeCursor: 0,\n                pullAvailableLength: 0,\n            }\n        `\n    ]),\n};\nconst bufPushPull = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: buf }) => Sequence([\n        /**\n         * Pushes a block to the buffer, throwing an error if the buffer is full.\n         * If the block is written successfully, {@link buf.SoundBuffer#writeCursor}\n         * is moved corresponding with the length of data written.\n         *\n         * @todo : Optimize by allowing to read/write directly from host\n         */\n        Func(buf.pushBlock, [\n            Var(buf.SoundBuffer, `buffer`),\n            Var(`FloatArray`, `block`)\n        ], 'Int') `\n            if (buffer.pullAvailableLength + block.length > buffer.length) {\n                throw new Error('buffer full')\n            }\n\n            ${Var(`Int`, `left`, `block.length`)}\n            while (left > 0) {\n                ${ConstVar(`Int`, `lengthToWrite`, `toInt(Math.min(\n                    toFloat(buffer.length - buffer.writeCursor), \n                    toFloat(left),\n                ))`)}\n                buffer.data.set(\n                    block.subarray(\n                        block.length - left, \n                        block.length - left + lengthToWrite\n                    ), \n                    buffer.writeCursor\n                )\n                left -= lengthToWrite\n                buffer.writeCursor = (buffer.writeCursor + lengthToWrite) % buffer.length\n                buffer.pullAvailableLength += lengthToWrite\n            }\n            return buffer.pullAvailableLength\n        `,\n        /**\n         * Pulls a single sample from the buffer.\n         * This is a destructive operation, and the sample will be\n         * unavailable for subsequent readers with the same operation.\n         */\n        Func(buf.pullSample, [\n            Var(buf.SoundBuffer, `buffer`)\n        ], 'Float') `\n            if (buffer.pullAvailableLength <= 0) {\n                return 0\n            }\n            ${ConstVar(`Int`, `readCursor`, `buffer.writeCursor - buffer.pullAvailableLength`)}\n            buffer.pullAvailableLength -= 1\n            return buffer.data[readCursor >= 0 ? readCursor : buffer.length + readCursor]\n        `\n    ]),\n    dependencies: [bufCore],\n};\nconst bufWriteRead = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: buf }) => Sequence([\n        /**\n         * Writes a sample at \\`@link writeCursor\\` and increments \\`writeCursor\\` by one.\n         */\n        Func(buf.writeSample, [\n            Var(buf.SoundBuffer, `buffer`),\n            Var(`Float`, `value`)\n        ], 'void') `\n            buffer.data[buffer.writeCursor] = value\n            buffer.writeCursor = (buffer.writeCursor + 1) % buffer.length\n        `,\n        /**\n         * Reads the sample at position \\`writeCursor - offset\\`.\n         * @param offset Must be between 0 (for reading the last written sample)\n         *  and {@link buf.SoundBuffer#length} - 1. A value outside these bounds will not cause\n         *  an error, but might cause unexpected results.\n         */\n        Func(buf.readSample, [\n            Var(buf.SoundBuffer, `buffer`),\n            Var(`Int`, `offset`)\n        ], 'Float') `\n            // R = (buffer.writeCursor - 1 - offset) -> ideal read position\n            // W = R % buffer.length -> wrap it so that its within buffer length bounds (but could be negative)\n            // (W + buffer.length) % buffer.length -> if W negative, (W + buffer.length) shifts it back to positive.\n            return buffer.data[(buffer.length + ((buffer.writeCursor - 1 - offset) % buffer.length)) % buffer.length]\n        `\n    ]),\n    dependencies: [bufCore],\n};\n\nexport { bufCore, bufPushPull, bufWriteRead };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst FS_OPERATION_SUCCESS = 0;\nconst FS_OPERATION_FAILURE = 1;\n\nexport { FS_OPERATION_FAILURE, FS_OPERATION_SUCCESS };\n","import { bufPushPull, bufCore } from '../buf/buf.js';\nimport { msg } from '../msg/msg.js';\nimport { Sequence, Func, Var, ConstVar, Class } from '../../ast/declare.js';\nimport { FS_OPERATION_SUCCESS, FS_OPERATION_FAILURE } from './constants.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NAMESPACE = 'fs';\nconst fsCore = {\n    namespace: NAMESPACE,\n    code: ({ ns: fs }, { msg }, { target }) => {\n        const content = [];\n        if (target === 'assemblyscript') {\n            content.push(`\n                type ${fs.OperationId} = Int\n                type ${fs.OperationStatus} = Int\n                type ${fs.OperationCallback} = (\n                    id: ${fs.OperationId}, \n                    status: ${fs.OperationStatus}\n                ) => void\n                type ${fs.OperationSoundCallback} = (\n                    id: ${fs.OperationId}, \n                    status: ${fs.OperationStatus}, \n                    sound: FloatArray[]\n                ) => void\n                type ${fs.Url} = string\n            `);\n        }\n        // prettier-ignore\n        return Sequence([\n            ...content,\n            ConstVar('Int', fs.OPERATION_SUCCESS, FS_OPERATION_SUCCESS.toString()),\n            ConstVar('Int', fs.OPERATION_FAILURE, FS_OPERATION_FAILURE.toString()),\n            ConstVar(`Set<${fs.OperationId}>`, fs._OPERATIONS_IDS, 'new Set()'),\n            ConstVar(`Map<${fs.OperationId}, ${fs.OperationCallback}>`, fs._OPERATIONS_CALLBACKS, 'new Map()'),\n            ConstVar(`Map<${fs.OperationId}, ${fs.OperationSoundCallback}>`, fs._OPERATIONS_SOUND_CALLBACKS, 'new Map()'),\n            // We start at 1, because 0 is what ASC uses when host forgets to pass an arg to \n            // a function. Therefore we can get false negatives when a test happens to expect a 0.\n            Var(`Int`, fs._OPERATIONS_COUNTER, `1`),\n            Class(fs.SoundInfo, [\n                Var(`Int`, `channelCount`),\n                Var(`Int`, `sampleRate`),\n                Var(`Int`, `bitDepth`),\n                Var(`string`, `encodingFormat`),\n                Var(`string`, `endianness`),\n                Var(`string`, `extraOptions`),\n            ]),\n            Func(fs.soundInfoToMessage, [\n                Var(fs.SoundInfo, `soundInfo`)\n            ], msg.Message) `\n                ${ConstVar(msg.Message, `info`, `${msg.create}([\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.STRING_TOKEN},\n                    soundInfo.encodingFormat.length,\n                    ${msg.STRING_TOKEN},\n                    soundInfo.endianness.length,\n                    ${msg.STRING_TOKEN},\n                    soundInfo.extraOptions.length\n                ])`)}\n                ${msg.writeFloatToken}(info, 0, toFloat(soundInfo.channelCount))\n                ${msg.writeFloatToken}(info, 1, toFloat(soundInfo.sampleRate))\n                ${msg.writeFloatToken}(info, 2, toFloat(soundInfo.bitDepth))\n                ${msg.writeStringToken}(info, 3, soundInfo.encodingFormat)\n                ${msg.writeStringToken}(info, 4, soundInfo.endianness)\n                ${msg.writeStringToken}(info, 5, soundInfo.extraOptions)\n                return info\n            `,\n            Func(fs._assertOperationExists, [\n                Var(fs.OperationId, `id`),\n                Var(`string`, `operationName`),\n            ], 'void') `\n                if (!${fs._OPERATIONS_IDS}.has(id)) {\n                    throw new Error(operationName + ' operation unknown : ' + id.toString())\n                }\n            `,\n            Func(fs._createOperationId, [], fs.OperationId) `\n                ${ConstVar(fs.OperationId, 'id', `${fs._OPERATIONS_COUNTER}++`)}\n                ${fs._OPERATIONS_IDS}.add(id)\n                return id\n            `\n        ]);\n    },\n    dependencies: [msg],\n};\nconst fsReadSoundFile = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: fs }) => Sequence([\n        Func(fs.readSoundFile, [\n            Var(fs.Url, `url`),\n            Var(fs.SoundInfo, `soundInfo`),\n            Var(fs.OperationSoundCallback, `callback`),\n        ], fs.OperationId) `\n            ${ConstVar(fs.OperationId, 'id', `${fs._createOperationId}()`)}\n            ${fs._OPERATIONS_SOUND_CALLBACKS}.set(id, callback)\n            ${fs.i_readSoundFile}(id, url, ${fs.soundInfoToMessage}(soundInfo))\n            return id\n        `,\n        // =========================== EXPORTED API\n        Func(fs.x_onReadSoundFileResponse, [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n            Var(`FloatArray[]`, `sound`),\n        ], 'void') `\n            ${fs._assertOperationExists}(id, \"${fs.x_onReadSoundFileResponse}\")\n            ${fs._OPERATIONS_IDS}.delete(id)\n            // Finish cleaning before calling the callback in case it would throw an error.\n            const callback = ${fs._OPERATIONS_SOUND_CALLBACKS}.get(id)\n            callback(id, status, sound)\n            ${fs._OPERATIONS_SOUND_CALLBACKS}.delete(id)\n        `\n    ]),\n    exports: ({ ns: fs }) => [fs.x_onReadSoundFileResponse],\n    imports: ({ ns: fs }, { msg }) => [\n        Func(fs.i_readSoundFile, [\n            Var(fs.OperationId, `id`),\n            Var(fs.Url, `url`),\n            Var(msg.Message, `info`),\n        ], 'void') ``,\n    ],\n    dependencies: [fsCore],\n};\nconst fsWriteSoundFile = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: fs }) => Sequence([\n        Func(fs.writeSoundFile, [\n            Var(`FloatArray[]`, `sound`),\n            Var(fs.Url, `url`),\n            Var(fs.SoundInfo, `soundInfo`),\n            Var(fs.OperationCallback, `callback`),\n        ], fs.OperationId) `\n            ${ConstVar(fs.OperationId, 'id', `${fs._createOperationId}()`)}\n            ${fs._OPERATIONS_CALLBACKS}.set(id, callback)\n            ${fs.i_writeSoundFile}(id, sound, url, ${fs.soundInfoToMessage}(soundInfo))\n            return id\n        `,\n        // =========================== EXPORTED API\n        Func(fs.x_onWriteSoundFileResponse, [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n        ], 'void') `\n            ${fs._assertOperationExists}(id, \"${fs.x_onWriteSoundFileResponse}\")\n            ${fs._OPERATIONS_IDS}.delete(id)\n            // Finish cleaning before calling the callback in case it would throw an error.\n            ${ConstVar(fs.OperationCallback, `callback`, `${fs._OPERATIONS_CALLBACKS}.get(id)`)}\n            callback(id, status)\n            ${fs._OPERATIONS_CALLBACKS}.delete(id)\n        `\n    ]),\n    exports: ({ ns: fs }) => [fs.x_onWriteSoundFileResponse],\n    imports: ({ ns: fs }, { msg }) => [\n        Func(fs.i_writeSoundFile, [\n            Var(fs.OperationId, `id`),\n            Var(`FloatArray[]`, `sound`),\n            Var(fs.Url, `url`),\n            Var(msg.Message, `info`),\n        ], 'void') ``,\n    ],\n    dependencies: [fsCore],\n};\nconst fsSoundStreamCore = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: fs }, { buf }) => Sequence([\n        ConstVar(`Map<${fs.OperationId}, Array<${buf.SoundBuffer}>>`, fs.SOUND_STREAM_BUFFERS, 'new Map()'),\n        ConstVar('Int', fs._SOUND_BUFFER_LENGTH, '20 * 44100'),\n        Func(fs.closeSoundStream, [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n        ], 'void') `\n            if (!${fs._OPERATIONS_IDS}.has(id)) {\n                return\n            }\n            ${fs._OPERATIONS_IDS}.delete(id)\n            ${fs._OPERATIONS_CALLBACKS}.get(id)(id, status)\n            ${fs._OPERATIONS_CALLBACKS}.delete(id)\n            // Delete this last, to give the callback \n            // a chance to save a reference to the buffer\n            // If write stream, there won't be a buffer\n            if (${fs.SOUND_STREAM_BUFFERS}.has(id)) {\n                ${fs.SOUND_STREAM_BUFFERS}.delete(id)\n            }\n            ${fs.i_closeSoundStream}(id, status)\n        `,\n        // =========================== EXPORTED API\n        Func(fs.x_onCloseSoundStream, [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n        ], 'void') `\n            ${fs.closeSoundStream}(id, status)\n        `\n    ]),\n    exports: ({ ns: fs }) => [fs.x_onCloseSoundStream],\n    // prettier-ignore\n    imports: ({ ns: fs }) => [\n        Func(fs.i_closeSoundStream, [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`)\n        ], 'void') ``,\n    ],\n    dependencies: [bufCore, fsCore],\n};\nconst fsReadSoundStream = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: fs }, { buf }) => Sequence([\n        Func(fs.openSoundReadStream, [\n            Var(fs.Url, `url`),\n            Var(fs.SoundInfo, `soundInfo`),\n            Var(fs.OperationCallback, `callback`),\n        ], fs.OperationId) `\n            ${ConstVar(fs.OperationId, 'id', `${fs._createOperationId}()`)}\n            ${ConstVar(`Array<${buf.SoundBuffer}>`, 'buffers', '[]')}\n            for (${Var(`Int`, `channel`, `0`)}; channel < soundInfo.channelCount; channel++) {\n                buffers.push(${buf.create}(${fs._SOUND_BUFFER_LENGTH}))\n            }\n            ${fs.SOUND_STREAM_BUFFERS}.set(id, buffers)\n            ${fs._OPERATIONS_CALLBACKS}.set(id, callback)\n            ${fs.i_openSoundReadStream}(id, url, ${fs.soundInfoToMessage}(soundInfo))\n            return id\n        `,\n        // =========================== EXPORTED API\n        Func(fs.x_onSoundStreamData, [\n            Var(fs.OperationId, `id`),\n            Var(`FloatArray[]`, `block`),\n        ], 'Int') `\n            ${fs._assertOperationExists}(id, \"${fs.x_onSoundStreamData}\")\n            const buffers = ${fs.SOUND_STREAM_BUFFERS}.get(id)\n            for (${Var(`Int`, `i`, `0`)}; i < buffers.length; i++) {\n                ${buf.pushBlock}(buffers[i], block[i])\n            }\n            return buffers[0].pullAvailableLength\n        `\n    ]),\n    exports: ({ ns: fs }) => [fs.x_onSoundStreamData],\n    // prettier-ignore\n    imports: ({ ns: fs }, { msg }) => [\n        Func(fs.i_openSoundReadStream, [\n            Var(fs.OperationId, `id`),\n            Var(fs.Url, `url`),\n            Var(msg.Message, `info`),\n        ], 'void') ``,\n    ],\n    dependencies: [fsSoundStreamCore, bufPushPull],\n};\nconst fsWriteSoundStream = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: fs }) => Sequence([\n        Func(fs.openSoundWriteStream, [\n            Var(fs.Url, `url`),\n            Var(fs.SoundInfo, `soundInfo`),\n            Var(fs.OperationCallback, `callback`),\n        ], fs.OperationId) `\n            const id = ${fs._createOperationId}()\n            ${fs.SOUND_STREAM_BUFFERS}.set(id, [])\n            ${fs._OPERATIONS_CALLBACKS}.set(id, callback)\n            ${fs.i_openSoundWriteStream}(id, url, ${fs.soundInfoToMessage}(soundInfo))\n            return id\n        `,\n        Func(fs.sendSoundStreamData, [\n            Var(fs.OperationId, `id`),\n            Var(`FloatArray[]`, `block`)\n        ], 'void') `\n            ${fs._assertOperationExists}(id, \"${fs.sendSoundStreamData}\")\n            ${fs.i_sendSoundStreamData}(id, block)\n        `\n    ]),\n    // prettier-ignore\n    imports: ({ ns: fs }, { msg }) => [\n        Func(fs.i_openSoundWriteStream, [\n            Var(fs.OperationId, `id`),\n            Var(fs.Url, `url`),\n            Var(msg.Message, `info`),\n        ], 'void') ``,\n        Func(fs.i_sendSoundStreamData, [\n            Var(fs.OperationId, `id`),\n            Var(`FloatArray[]`, `block`)\n        ], 'void') ``,\n    ],\n    dependencies: [fsSoundStreamCore],\n};\n\nexport { fsCore, fsReadSoundFile, fsReadSoundStream, fsSoundStreamCore, fsWriteSoundFile, fsWriteSoundStream };\n","import { Func, Var, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { msg } from '../../../../WebPd_compiler/dist/src/stdlib/msg/msg.js';\nimport { fsCore } from '../../../../WebPd_compiler/dist/src/stdlib/fs/fs.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : support for -raw (see soundfiler help)\n// TODO : find a better way to factorize this code\n// TODO : unit testing\nconst soundFileOpenOpts = {\n    namespace: 'soundFileOpenOpts',\n    // prettier-ignore\n    code: ({ ns: soundFileOpenOpts }, { msg, fs }) => Func(soundFileOpenOpts.parse, [\n        Var(msg.Message, `m`),\n        Var(fs.SoundInfo, `soundInfo`)\n    ], 'Set<Int>') `\n            ${ConstVar(`Set<Int>`, `unhandled`, `new Set()`)}\n            ${Var(`Int`, `i`, `0`)}\n            while (i < ${msg.getLength}(m)) {\n                if (${msg.isStringToken}(m, i)) {\n                    ${ConstVar(`string`, `str`, `${msg.readStringToken}(m, i)`)}\n                    if (['-wave', '-aiff', '-caf', '-next', '-ascii'].includes(str)) {\n                        soundInfo.encodingFormat = str.slice(1)\n\n                    } else if (str === '-raw') {\n                        console.log('-raw format not yet supported')\n                        i += 4\n                        \n                    } else if (str === '-big') {\n                        soundInfo.endianness = 'b'\n\n                    } else if (str === '-little') {\n                        soundInfo.endianness = 'l'\n\n                    } else if (str === '-bytes') {\n                        if (i < ${msg.getLength}(m) && ${msg.isFloatToken}(m, i + 1)) {\n                            soundInfo.bitDepth = toInt(${msg.readFloatToken}(m, i + 1) * 8)\n                            i++\n                        } else {\n                            console.log('failed to parse -bytes <value>')\n                        }\n\n                    } else if (str === '-rate') {\n                        if (i < ${msg.getLength}(m) && ${msg.isFloatToken}(m, i + 1)) {\n                            soundInfo.sampleRate = toInt(${msg.readFloatToken}(m, i + 1))\n                            i++\n                        } else {\n                            console.log('failed to parse -rate <value>')\n                        }\n\n                    } else {\n                        unhandled.add(i)\n                    }\n                    \n                } else {\n                    unhandled.add(i)\n                }\n                i++\n            }\n            return unhandled\n        `,\n    dependencies: [msg, fsCore],\n};\n// TODO : unit testing\nconst readWriteFsOpts = {\n    namespace: 'readWriteFsOpts',\n    // prettier-ignore\n    code: ({ ns: readWriteFsOpts }, { msg, fs }) => Func(readWriteFsOpts.parse, [\n        Var(msg.Message, `m`),\n        Var(fs.SoundInfo, `soundInfo`),\n        Var(`Set<Int>`, `unhandledOptions`),\n    ], 'string') `\n            // Remove the \"open\" token\n            unhandledOptions.delete(0)\n\n            ${Var(`string`, `url`, `\"\"`)}\n            ${Var(`boolean`, `urlFound`, `false`)}\n            ${Var(`boolean`, `errored`, `false`)}\n            ${Var(`Int`, `i`, `1`)}\n            while (i < ${msg.getLength}(m)) {\n                if (!unhandledOptions.has(i)) {\n\n                } else if (${msg.isStringToken}(m, i)) {\n                    url = ${msg.readStringToken}(m, i)\n                    urlFound = true\n\n                } else {\n                    console.log(\"[writesf/readsf~] invalid option index \" + i.toString())\n                    errored = true\n                }\n                i++\n            }\n            if (!urlFound) {\n                console.log(\"[writesf/readsf~] invalid options, file url not found\")\n                return ''\n            }\n            if (errored) {\n                return ''\n            }\n            return url\n        `,\n    dependencies: [msg, fsCore],\n};\n\nexport { readWriteFsOpts, soundFileOpenOpts };\n","import { Class, Var, AnonFunc, ast, Sequence, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { fsReadSoundStream } from '../../../../WebPd_compiler/dist/src/stdlib/fs/fs.js';\nimport { assertOptionalNumber } from '../validation.js';\nimport { bangUtils, actionUtils } from '../global-code/core.js';\nimport { soundFileOpenOpts, readWriteFsOpts } from '../global-code/fs.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : check the real state machine of readsf\n//      - what happens when start / stopping / start stream ?\n//      - what happens when stream ended and starting again ?\n//      - etc ...\n// TODO : second arg : \"buffer channel size\" not implemented\n// TODO : implement raw\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertOptionalNumber(pdNode.args[0]) || 1,\n    }),\n    build: (nodeArgs) => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            ...mapArray(countTo(nodeArgs.channelCount), (channel) => [`${channel}`, { type: 'signal', id: `${channel}` }]),\n            [`${nodeArgs.channelCount}`]: {\n                type: 'message',\n                id: `${nodeArgs.channelCount}`,\n            }\n        },\n    })\n};\n// ------------------------------ node implementations ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'readsf_t',\n    },\n    state: ({ ns }, { buf, fs }) => Class(ns.State, [\n        Var(`Array<${buf.SoundBuffer}>`, `buffers`, `[]`),\n        Var(fs.OperationId, `streamOperationId`, -1),\n        Var(`Int`, `readingStatus`, 0),\n    ]),\n    messageReceivers: ({ ns, node, state, }, { actionUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.getLength}(m) >= 2) {\n                if (${msg.isStringToken}(m, 0) \n                    && ${msg.readStringToken}(m, 0) === 'open'\n                ) {\n                    ${ns.openStream}(\n                        ${state},\n                        m,\n                        ${node.args.channelCount},\n                        ${AnonFunc() `\n                            ${state}.streamOperationId = -1\n                            if (${state}.readingStatus === 1) {\n                                ${state}.readingStatus = 2\n                            } else {\n                                ${state}.readingStatus = 3\n                            }\n                        `}\n                    )\n                    return\n                }\n    \n            } else if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                if (${msg.readFloatToken}(m, 0) === 0) {\n                    ${state}.readingStatus = 3\n                    return\n    \n                } else {\n                    if (${state}.streamOperationId !== -1) {\n                        ${state}.readingStatus = 1\n                    } else {\n                        console.log('[readsf~] start requested without prior open')\n                    }\n                    return\n    \n                }\n                \n            } else if (${actionUtils.isAction}(m, 'print')) {\n                console.log('[readsf~] reading = ' + ${state}.readingStatus.toString())\n                return\n            }\n        `,\n    }),\n    dsp: ({ state, snds, outs, node: { args: { channelCount }, }, }, { buf, bangUtils }) => ast `\n        switch(${state}.readingStatus) {\n            case 1: \n                ${countTo(channelCount).map((i) => `${outs[i]} = ${buf.pullSample}(${state}.buffers[${i}])`)}\n                break\n                \n            case 2: \n                ${countTo(channelCount).map((i) => `${outs[i]} = ${buf.pullSample}(${state}.buffers[${i}])`)}\n                if (${state}.buffers[0].pullAvailableLength === 0) {\n                    ${snds[channelCount]}(${bangUtils.bang}())\n                    ${state}.readingStatus = 3\n                }\n                break\n    \n            case 3: \n                ${countTo(channelCount).map((i) => `${outs[i]} = 0`)}\n                ${state}.readingStatus = 0\n                break\n        }\n    `,\n    core: ({ ns }, { msg, fs, core, soundFileOpenOpts, readWriteFsOpts }) => Sequence([\n        Func(ns.openStream, [\n            Var(ns.State, `state`),\n            Var(msg.Message, `m`),\n            Var(`Int`, `channelCount`),\n            Var(fs.OperationCallback, `onStreamClose`),\n        ], 'void') `\n                if (state.streamOperationId !== -1) {\n                    state.readingStatus = 3\n                    ${fs.closeSoundStream}(state.streamOperationId, ${fs.OPERATION_SUCCESS})\n                }\n        \n                ${ConstVar(fs.SoundInfo, `soundInfo`, `{\n                    channelCount,\n                    sampleRate: toInt(${core.SAMPLE_RATE}),\n                    bitDepth: 32,\n                    encodingFormat: '',\n                    endianness: '',\n                    extraOptions: '',\n                }`)}\n                ${ConstVar(`Set<Int>`, `unhandledOptions`, `${soundFileOpenOpts.parse}(\n                    m,\n                    soundInfo,\n                )`)}\n                ${ConstVar(`string`, `url`, `${readWriteFsOpts.parse}(\n                    m,\n                    soundInfo,\n                    unhandledOptions\n                )`)}\n                if (url.length === 0) {\n                    return\n                }\n                state.streamOperationId = ${fs.openSoundReadStream}(\n                    url,\n                    soundInfo,\n                    onStreamClose,\n                )\n                state.buffers = ${fs.SOUND_STREAM_BUFFERS}.get(state.streamOperationId)\n            `\n    ]),\n    dependencies: [\n        soundFileOpenOpts,\n        readWriteFsOpts,\n        bangUtils,\n        actionUtils,\n        fsReadSoundStream,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc, ConstVar, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { fsWriteSoundStream } from '../../../../WebPd_compiler/dist/src/stdlib/fs/fs.js';\nimport { assertOptionalNumber } from '../validation.js';\nimport { actionUtils } from '../global-code/core.js';\nimport { soundFileOpenOpts, readWriteFsOpts } from '../global-code/fs.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst BLOCK_SIZE = 44100 * 5;\n// TODO: lots of things left to implement\n// TODO : check the real state machine of writesf\n//      - what happens when start / stopping / start stream ? \n//      - what happens when stream ended and starting again ? \n//      - etc ...\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertOptionalNumber(pdNode.args[0]) || 1,\n    }),\n    build: ({ channelCount }) => ({\n        inlets: {\n            '0_message': { type: 'message', id: '0_message' },\n            ...mapArray(countTo(channelCount), (channel) => [\n                `${channel}`,\n                { type: 'signal', id: `${channel}` },\n            ]),\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'write_t',\n    },\n    state: ({ node: { args }, ns }, { fs }) => Class(ns.State, [\n        Var(fs.OperationId, `operationId`, -1),\n        Var(`boolean`, `isWriting`, `false`),\n        Var(`Array<FloatArray>`, `block`, `[\n                ${countTo(args.channelCount).map(() => `createFloatArray(${BLOCK_SIZE})`).join(',')}\n            ]`),\n        Var(`Int`, `cursor`, 0),\n    ]),\n    dsp: ({ ns, state, ins, node: { args } }) => ast `\n        if (${state}.isWriting === true) {\n            ${countTo(args.channelCount).map((i) => `${state}.block[${i}][${state}.cursor] = ${ins[i]}`)}\n            ${state}.cursor++\n            if (${state}.cursor === ${BLOCK_SIZE}) {\n                ${ns.flushBlock}(${state})\n            }\n        }\n    `,\n    messageReceivers: ({ ns, node, state }, { core, msg, fs, actionUtils, soundFileOpenOpts, readWriteFsOpts }) => ({\n        '0_message': AnonFunc([\n            Var(msg.Message, `m`)\n        ], 'void') `\n            if (${msg.getLength}(m) >= 2) {\n                if (\n                    ${msg.isStringToken}(m, 0) \n                    && ${msg.readStringToken}(m, 0) === 'open'\n                ) {\n                    if (${state}.operationId !== -1) {\n                        ${fs.closeSoundStream}(${state}.operationId, ${fs.OPERATION_SUCCESS})\n                    }\n    \n                    ${ConstVar(fs.SoundInfo, `soundInfo`, `{\n                        channelCount: ${node.args.channelCount},\n                        sampleRate: toInt(${core.SAMPLE_RATE}),\n                        bitDepth: 32,\n                        encodingFormat: '',\n                        endianness: '',\n                        extraOptions: '',\n                    }`)}\n                    ${ConstVar(`Set<Int>`, `unhandledOptions`, `${soundFileOpenOpts.parse}(\n                        m,\n                        soundInfo,\n                    )`)}\n                    ${ConstVar(`string`, `url`, `${readWriteFsOpts.parse}(\n                        m,\n                        soundInfo,\n                        unhandledOptions\n                    )`)}\n                    if (url.length === 0) {\n                        return\n                    }\n                    ${state}.operationId = ${fs.openSoundWriteStream}(\n                        url,\n                        soundInfo,\n                        () => {\n                            ${ns.flushBlock}(${state})\n                            ${state}.operationId = -1\n                        }\n                    )\n                    return\n                }\n    \n            } else if (${actionUtils.isAction}(m, 'start')) {\n                    ${state}.isWriting = true\n                    return\n    \n            } else if (${actionUtils.isAction}(m, 'stop')) {\n                ${ns.flushBlock}(${state})\n                ${state}.isWriting = false\n                return\n    \n            } else if (${actionUtils.isAction}(m, 'print')) {\n                console.log('[writesf~] writing = ' + ${state}.isWriting.toString())\n                return\n            }    \n        `\n    }),\n    core: ({ ns }, { fs }) => Sequence([\n        Func(ns.flushBlock, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                ${ConstVar(`Array<FloatArray>`, `block`, `[]`)}\n                for (${Var(`Int`, `i`, `0`)}; i < state.block.length; i++) {\n                    block.push(state.block[i].subarray(0, state.cursor))\n                }\n                ${fs.sendSoundStreamData}(state.operationId, block)\n                state.cursor = 0\n            `,\n    ]),\n    dependencies: [\n        soundFileOpenOpts,\n        readWriteFsOpts,\n        actionUtils,\n        fsWriteSoundStream,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        frequency: assertOptionalNumber(args[0]) || 0,\n        Q: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'filters_bp_t',\n    },\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `frequency`, args.frequency),\n        Var(`Float`, `Q`, args.Q),\n        Var(`Float`, `coef1`, 0),\n        Var(`Float`, `coef2`, 0),\n        Var(`Float`, `gain`, 0),\n        Var(`Float`, `y`, 0),\n        Var(`Float`, `ym1`, 0),\n        Var(`Float`, `ym2`, 0),\n    ]),\n    initialization: ({ ns, state }) => ast `\n        ${ns.updateCoefs}(${state})\n    `,\n    dsp: ({ ins, outs, state }) => ast `\n        ${state}.y = ${ins.$0} + ${state}.coef1 * ${state}.ym1 + ${state}.coef2 * ${state}.ym2\n        ${outs.$0} = ${state}.gain * ${state}.y\n        ${state}.ym2 = ${state}.ym1\n        ${state}.ym1 = ${state}.y\n    `,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)], `void`) `\n            if (\n                ${msg.isMatching}(m)\n                && ${msg.readStringToken}(m, 0) === 'clear'\n            ) {\n                ${ns.clear}()\n                return \n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setFrequency, state, msg),\n        '2': coldFloatInletWithSetter(ns.setQ, state, msg),\n    }),\n    core: ({ ns }, { core }) => Sequence([\n        Func(ns.updateCoefs, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                ${Var(`Float`, `omega`, `state.frequency * (2.0 * Math.PI) / ${core.SAMPLE_RATE}`)}\n                ${Var(`Float`, `oneminusr`, `state.Q < 0.001 ? 1.0 : Math.min(omega / state.Q, 1)`)}\n                ${Var(`Float`, `r`, `1.0 - oneminusr`)}\n                ${Var(`Float`, `sigbp_qcos`, `(omega >= -(0.5 * Math.PI) && omega <= 0.5 * Math.PI) ? \n                    (((Math.pow(omega, 6) * (-1.0 / 720.0) + Math.pow(omega, 4) * (1.0 / 24)) - Math.pow(omega, 2) * 0.5) + 1)\n                    : 0`)}\n        \n                state.coef1 = 2.0 * sigbp_qcos * r\n                state.coef2 = - r * r\n                state.gain = 2 * oneminusr * (oneminusr + r * omega)\n            `,\n        Func(ns.setFrequency, [\n            Var(ns.State, `state`),\n            Var(`Float`, `frequency`),\n        ], 'void') `\n                state.frequency = (frequency < 0.001) ? 10: frequency\n                ${ns.updateCoefs}(state)\n            `,\n        Func(ns.setQ, [\n            Var(ns.State, `state`),\n            Var(`Float`, `Q`),\n        ], 'void') `\n                state.Q = Math.max(Q, 0)\n                ${ns.updateCoefs}(state)\n            `,\n        Func(ns.clear, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                state.ym1 = 0\n                state.ym2 = 0\n            `\n    ])\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalString } from '../validation.js';\nimport { sigBuses } from '../global-code/buses.js';\nimport { ast, AnonFunc, Var, Sequence, Func, Class } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builderThrow = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\nconst builderReceive = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\nconst builderSend = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n};\nconst builderCatch = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst sharedCore = (ns, { sigBuses }) => Sequence([\n    Func(ns.setBusName, [\n        Var(ns.State, `state`), Var(`string`, `busName`)\n    ], 'void') `\n            if (busName.length) {\n                state.busName = busName\n                ${sigBuses.reset}(state.busName)\n            }\n        `,\n]);\nconst sharedNodeImplementation = {\n    state: ({ ns }) => Class(ns.State, [Var(`string`, `busName`, `\"\"`)]),\n    initialization: ({ ns, node: { args }, state }) => ast `\n        ${ns.setBusName}(${state}, \"${args.busName}\")\n    `,\n};\n// --------------------------------- node implementation - throw~ ---------------------------------- //\nconst nodeImplementationThrow = {\n    ...sharedNodeImplementation,\n    flags: {\n        alphaName: 'throw_t',\n    },\n    dsp: ({ ins, state }, { sigBuses }) => ast `\n        ${sigBuses.addAssign}(${state}.busName, ${ins.$0})\n    `,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)], `void`) `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setBusName}(${state}, ${msg.readStringToken}(m, 1))\n                return\n            }\n        `\n    }),\n    core: ({ ns }, globals) => sharedCore(ns, globals),\n    dependencies: [\n        sigBuses,\n    ]\n};\n// --------------------------------- node implementation - catch~ ---------------------------------- //\nconst nodeImplementationCatch = {\n    ...sharedNodeImplementation,\n    flags: {\n        alphaName: 'catch_t',\n    },\n    dsp: ({ outs, state }, { sigBuses }) => ast `\n        ${outs.$0} = ${sigBuses.read}(${state}.busName)\n        ${sigBuses.reset}(${state}.busName)\n    `,\n    core: ({ ns }, globals) => sharedCore(ns, globals),\n    dependencies: [\n        sigBuses,\n    ],\n};\n// --------------------------------- node implementation - send~ ---------------------------------- //\nconst nodeImplementationSend = {\n    ...sharedNodeImplementation,\n    flags: {\n        alphaName: 'send_t',\n    },\n    dsp: ({ state, ins }, { sigBuses }) => ast `\n        ${sigBuses.set}(${state}.busName, ${ins.$0})\n    `,\n    core: ({ ns }, globals) => sharedCore(ns, globals),\n    dependencies: [\n        sigBuses,\n    ],\n};\n// --------------------------------- node implementation - receive~ ---------------------------------- //\nconst nodeImplementationReceive = {\n    ...sharedNodeImplementation,\n    flags: {\n        alphaName: 'receive_t',\n        isDspInline: true,\n    },\n    dsp: ({ state }, { sigBuses }) => ast `${sigBuses.read}(${state}.busName)`,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${ns.setBusName}(${state}, ${msg.readStringToken}(m, 1))\n                return\n            }\n        `\n    }),\n    core: ({ ns }, globals) => sharedCore(ns, globals),\n    dependencies: [\n        sigBuses,\n    ]\n};\n// -------------------------------------------------------------------------------------------- //\nconst builders = {\n    'throw~': builderThrow,\n    'catch~': builderCatch,\n    'send~': builderSend,\n    'receive~': builderReceive,\n};\nconst nodeImplementations = {\n    'throw~': nodeImplementationThrow,\n    'catch~': nodeImplementationCatch,\n    'send~': nodeImplementationSend,\n    'receive~': nodeImplementationReceive,\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalNumber, assertOptionalString } from '../validation.js';\nimport { bangUtils, actionUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, AnonFunc, ast, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        rate: assertOptionalNumber(pdNode.args[0]) || 0,\n        unitAmount: assertOptionalNumber(pdNode.args[1]) || 1,\n        unit: assertOptionalString(pdNode.args[2]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }, { msg, sked }) => Class(ns.State, [\n        Var(`Float`, `rate`, 0),\n        Var(`Float`, `sampleRatio`, 1),\n        Var(`Int`, `skedId`, sked.ID_NULL),\n        Var(`Float`, `realNextTick`, -1),\n        Var(msg.Handler, `snd0`, AnonFunc([Var(msg.Message, `m`)]) ``),\n        Var(sked.Callback, `tickCallback`, AnonFunc() ``),\n    ]),\n    initialization: ({ ns, node: { args }, state, snds, }, { core }) => ast `\n            ${state}.snd0 = ${snds.$0}\n            ${state}.sampleRatio = computeUnitInSamples(${core.SAMPLE_RATE}, ${args.unitAmount}, \"${args.unit}\")\n            ${ns.setRate}(${state}, ${args.rate})\n            ${state}.tickCallback = ${AnonFunc() `\n                ${ns.scheduleNextTick}(${state})\n            `}\n        `,\n    messageReceivers: ({ ns, state, }, { core, msg, bangUtils, actionUtils, }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.getLength}(m) === 1) {\n                if (\n                    (${msg.isFloatToken}(m, 0) && ${msg.readFloatToken}(m, 0) === 0)\n                    || ${actionUtils.isAction}(m, 'stop')\n                ) {\n                    ${ns.stop}(${state})\n                    return\n    \n                } else if (\n                    ${msg.isFloatToken}(m, 0)\n                    || ${bangUtils.isBang}(m)\n                ) {\n                    ${state}.realNextTick = toFloat(${core.FRAME})\n                    ${ns.scheduleNextTick}(${state})\n                    return\n                }\n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setRate, state, msg),\n    }),\n    core: ({ ns }, { bangUtils, commons, sked }) => Sequence([\n        // Time units are all expressed in samples here\n        Func(ns.setRate, [\n            Var(ns.State, `state`),\n            Var(`Float`, `rate`),\n        ], 'void') `\n                state.rate = Math.max(rate, 0)\n            `,\n        Func(ns.scheduleNextTick, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                state.snd0(${bangUtils.bang}())\n                state.realNextTick = state.realNextTick + state.rate * state.sampleRatio\n                state.skedId = ${commons.waitFrame}(\n                    toInt(Math.round(state.realNextTick)), \n                    state.tickCallback,\n                )\n            `,\n        Func(ns.stop, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                if (state.skedId !== ${sked.ID_NULL}) {\n                    ${commons.cancelWaitFrame}(state.skedId)\n                    state.skedId = ${sked.ID_NULL}\n                }\n                state.realNextTick = 0\n            `,\n    ]),\n    dependencies: [\n        computeUnitInSamples,\n        bangUtils,\n        actionUtils,\n        commonsWaitFrame,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber, assertOptionalString } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, ast, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        unitAmount: assertOptionalNumber(pdNode.args[0]) || 1,\n        unit: assertOptionalString(pdNode.args[1]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `sampleRatio`, 0),\n        Var(`Int`, `resetTime`, 0),\n    ]),\n    initialization: ({ node: { args }, state }, { core }) => ast `\n            ${state}.sampleRatio = computeUnitInSamples(${core.SAMPLE_RATE}, ${args.unitAmount}, \"${args.unit}\")\n        `,\n    messageReceivers: ({ snds, state }, { bangUtils, core, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${state}.resetTime = ${core.FRAME}\n                return\n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'tempo'\n            ) {\n                ${state}.sampleRatio = computeUnitInSamples(\n                    ${core.SAMPLE_RATE}, \n                    ${msg.readFloatToken}(m, 1), \n                    ${msg.readStringToken}(m, 2)\n                )\n                return\n            }\n        `,\n        '1': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${snds.$0}(${msg.floats}([toFloat(${core.FRAME} - ${state}.resetTime) / ${state}.sampleRatio]))\n                return\n            }\n        `,\n    }),\n    dependencies: [\n        computeUnitInSamples,\n        bangUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber, assertOptionalString } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, ast, AnonFunc, ConstVar, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        delay: assertOptionalNumber(pdNode.args[0]) || 0,\n        unitAmount: assertOptionalNumber(pdNode.args[1]) || 1,\n        unit: assertOptionalString(pdNode.args[2]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }, { sked }) => Class(ns.State, [\n        Var(`Float`, `delay`, 0),\n        Var(`Float`, `sampleRatio`, 1),\n        Var(sked.Id, `scheduledBang`, sked.ID_NULL),\n    ]),\n    initialization: ({ ns, node: { args }, state }, { core }) => ast `\n        ${state}.sampleRatio = computeUnitInSamples(${core.SAMPLE_RATE}, ${args.unitAmount}, \"${args.unit}\")\n        ${ns.setDelay}(${state}, ${args.delay})\n    `,\n    messageReceivers: ({ ns, state, snds }, { core, msg, bangUtils }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.getLength}(m) === 1) {\n                if (${msg.isStringToken}(m, 0)) {\n                    ${ConstVar(`string`, `action`, `${msg.readStringToken}(m, 0)`)}\n                    if (action === 'bang' || action === 'start') {\n                        ${ns.scheduleDelay}(\n                            ${state}, \n                            () => ${snds.$0}(${bangUtils.bang}()),\n                            ${core.FRAME},\n                        )\n                        return\n                    } else if (action === 'stop') {\n                        ${ns.stop}(${state})\n                        return\n                    }\n                    \n                } else if (${msg.isFloatToken}(m, 0)) {\n                    ${ns.setDelay}(${state}, ${msg.readFloatToken}(m, 0))\n                    ${ns.scheduleDelay}(\n                        ${state},\n                        () => ${snds.$0}(${bangUtils.bang}()),\n                        ${core.FRAME},\n                    )\n                    return \n                }\n            \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}, ${msg.STRING_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'tempo'\n            ) {\n                ${state}.sampleRatio = computeUnitInSamples(\n                    ${core.SAMPLE_RATE}, \n                    ${msg.readFloatToken}(m, 1), \n                    ${msg.readStringToken}(m, 2)\n                )\n                return\n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setDelay, state, msg)\n    }),\n    core: ({ ns }, { sked, commons }) => Sequence([\n        Func(ns.setDelay, [\n            Var(ns.State, `state`),\n            Var(`Float`, `delay`),\n        ], 'void') `\n                state.delay = Math.max(0, delay)\n            `,\n        Func(ns.scheduleDelay, [\n            Var(ns.State, `state`),\n            Var(sked.Callback, `callback`),\n            Var(`Int`, `currentFrame`),\n        ], 'void') `\n                if (state.scheduledBang !== ${sked.ID_NULL}) {\n                    ${ns.stop}(state)\n                }\n                state.scheduledBang = ${commons.waitFrame}(toInt(\n                    Math.round(\n                        toFloat(currentFrame) + state.delay * state.sampleRatio)),\n                    callback\n                )\n            `,\n        Func(ns.stop, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                ${commons.cancelWaitFrame}(state.scheduledBang)\n                state.scheduledBang = ${sked.ID_NULL}\n            `\n    ]),\n    dependencies: [\n        computeUnitInSamples,\n        bangUtils,\n        commonsWaitFrame,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc, Sequence, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { assertOptionalString } from '../validation.js';\nimport { EMPTY_BUS_NAME, build, controlsCore } from './controls-base.js';\nimport { msgBuses } from '../global-code/buses.js';\nimport { bangUtils } from '../global-code/core.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args: [init, receive, send] }) => ({\n        outputOnLoad: !!init,\n        sendBusName: assertOptionalString(send) || EMPTY_BUS_NAME,\n        receiveBusName: assertOptionalString(receive) || EMPTY_BUS_NAME,\n    }),\n    build,\n};\n// ------------------------------- node implementation ------------------------------ //\n// prettier-ignore\nconst nodeImplementation = {\n    state: ({ ns, node: { args } }, { msg }) => Class(ns.State, [\n        Var(msg.Message, `value`, `${msg.create}([])`),\n        Var(`string`, `receiveBusName`, `\"${args.receiveBusName}\"`),\n        Var(`string`, `sendBusName`, `\"${args.sendBusName}\"`),\n        Var(msg.Handler, `messageReceiver`, ns.defaultMessageHandler),\n        Var(msg.Handler, `messageSender`, ns.defaultMessageHandler),\n    ]),\n    initialization: ({ ns, snds, state, node: { args }, }, { commons, msg, bangUtils }) => ast `\n        ${state}.messageReceiver = ${AnonFunc([Var(msg.Message, `m`)]) `\n            ${ns.receiveMessage}(${state}, m)\n        `}\n        ${state}.messageSender = ${snds.$0}\n        ${ns.setReceiveBusName}(${state}, \"${args.receiveBusName}\")\n\n        ${args.outputOnLoad ?\n        `${commons.waitFrame}(0, () => ${snds.$0}(${bangUtils.bang}()))` : null}\n    `,\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            ${ns.receiveMessage}(${state}, m)\n            return\n        `,\n    }),\n    core: ({ ns }, globals) => {\n        const { msg, msgBuses, bangUtils } = globals;\n        return Sequence([\n            controlsCore(ns, globals),\n            Func(ns.receiveMessage, [\n                Var(ns.State, `state`),\n                Var(msg.Message, `m`),\n            ], 'void') `\n                if (${ns.setSendReceiveFromMessage}(state, m) === true) {\n                    return\n                }\n                \n                ${ConstVar(msg.Message, `outMessage`, `${bangUtils.bang}()`)}\n                state.messageSender(outMessage)\n                if (state.sendBusName !== \"${EMPTY_BUS_NAME}\") {\n                    ${msgBuses.publish}(state.sendBusName, outMessage)\n                }\n                return\n            `\n        ]);\n    },\n    dependencies: [\n        bangUtils,\n        msgBuses,\n        commonsWaitFrame,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc, Sequence, Func, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertOptionalString } from '../validation.js';\nimport { EMPTY_BUS_NAME, build, controlsCore } from './controls-base.js';\nimport { msgBuses } from '../global-code/buses.js';\nimport { bangUtils, msgUtils } from '../global-code/core.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : use standard \"unsupported message\" from compile-generateDeclarations\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args: [_, __, receive, send] }) => ({\n        sendBusName: assertOptionalString(send) || EMPTY_BUS_NAME,\n        receiveBusName: assertOptionalString(receive) || EMPTY_BUS_NAME,\n    }),\n    build,\n};\n// ------------------------------- node implementation ------------------------------ //\nconst makeNodeImplementation = ({ name, initValueCode, messageMatch, }) => {\n    return {\n        flags: {\n            alphaName: name,\n        },\n        state: ({ ns, node: { args } }, globals) => {\n            const { msg } = globals;\n            return Class(ns.State, [\n                Var(msg.Message, `value`, initValueCode(globals)),\n                Var(`string`, `receiveBusName`, `\"${args.receiveBusName}\"`),\n                Var(`string`, `sendBusName`, `\"${args.sendBusName}\"`),\n                Var(msg.Handler, `messageReceiver`, ns.defaultMessageHandler),\n                Var(msg.Handler, `messageSender`, ns.defaultMessageHandler),\n            ]);\n        },\n        initialization: ({ ns, state, node: { args }, snds, }, { msg }) => ast `\n            ${state}.messageReceiver = ${AnonFunc([Var(msg.Message, `m`)]) `\n                ${ns.receiveMessage}(${state}, m)\n            `}\n            ${state}.messageSender = ${snds.$0}\n            ${ns.setReceiveBusName}(${state}, \"${args.receiveBusName}\")\n        `,\n        messageReceivers: ({ ns, state }, { msg }) => ({\n            '0': AnonFunc([Var(msg.Message, `m`)]) `\n                ${ns.receiveMessage}(${state}, m)\n                return\n            `,\n        }),\n        core: ({ ns }, globals) => {\n            const { msg, msgBuses, bangUtils, msgUtils } = globals;\n            return Sequence([\n                controlsCore(ns, globals),\n                Func(ns.receiveMessage, [\n                    Var(ns.State, `state`),\n                    Var(msg.Message, `m`),\n                ], 'void') `\n                    if (${bangUtils.isBang}(m)) {\n                        state.messageSender(state.value)\n                        if (state.sendBusName !== \"${EMPTY_BUS_NAME}\") {\n                            ${msgBuses.publish}(state.sendBusName, state.value)\n                        }\n                        return\n                    \n                    } else if (\n                        ${msg.getTokenType}(m, 0) === ${msg.STRING_TOKEN}\n                        && ${msg.readStringToken}(m, 0) === 'set'\n                    ) {\n                        ${ConstVar(msg.Message, `setMessage`, `${msgUtils.slice}(m, 1, ${msg.getLength}(m))`)}\n                        ${messageMatch ?\n                    `if (${messageMatch('setMessage', globals)}) {` : null} \n                                state.value = setMessage    \n                                return\n                        ${messageMatch ?\n                    '}' : null}\n        \n                    } else if (${ns.setSendReceiveFromMessage}(state, m) === true) {\n                        return\n                        \n                    } ${messageMatch ?\n                    `else if (${messageMatch('m', globals)}) {` :\n                    `else {`}\n                    \n                        state.value = m\n                        state.messageSender(state.value)\n                        if (state.sendBusName !== \"${EMPTY_BUS_NAME}\") {\n                            ${msgBuses.publish}(state.sendBusName, state.value)\n                        }\n                        return\n        \n                    }\n                `\n            ]);\n        },\n        dependencies: [\n            bangUtils,\n            msgBuses,\n            msgUtils,\n        ],\n    };\n};\nconst builders = {\n    'floatatom': builder,\n    'symbolatom': builder,\n    'listbox': builder,\n};\nconst nodeImplementations = {\n    'floatatom': makeNodeImplementation({\n        name: 'floatatom',\n        initValueCode: ({ msg }) => `${msg.floats}([0])`,\n        messageMatch: (m, { msg }) => `${msg.isMatching}(${m}, [${msg.FLOAT_TOKEN}])`\n    }),\n    'symbolatom': makeNodeImplementation({\n        name: 'symbolatom',\n        initValueCode: ({ msg }) => `${msg.strings}([''])`,\n        messageMatch: (m, { msg }) => `${msg.isMatching}(${m}, [${msg.STRING_TOKEN}])`\n    }),\n    'listbox': makeNodeImplementation({\n        name: 'listbox',\n        initValueCode: ({ bangUtils }) => `${bangUtils.bang}()`,\n    })\n};\n\nexport { builders, nodeImplementations };\n","import { bangUtils } from '../global-code/core.js';\nimport { ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {},\n        outlets: { '0': { type: 'message', id: '0' } },\n        isPushingMessages: true\n    }),\n};\n// ---------------------------- node implementation -------------------------- //\nconst nodeImplementation = {\n    initialization: ({ snds }, { bangUtils, commons }) => ast `${commons.waitFrame}(0, () => ${snds.$0}(${bangUtils.bang}()))`,\n    dependencies: [\n        bangUtils,\n        commonsWaitFrame\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst roundFloatAsPdInt = {\n    namespace: 'numbers',\n    // prettier-ignore\n    code: ({ ns: numbers }) => Func(numbers.roundFloatAsPdInt, [\n        Var(`Float`, `value`),\n    ], 'Float') `\n            return value > 0 ? Math.floor(value): Math.ceil(value)\n        `\n};\n\nexport { roundFloatAsPdInt };\n","import { Sequence, Func, Var, Class, ast, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertOptionalNumber } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { roundFloatAsPdInt } from '../global-code/numbers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO: proper support for $ args\n// TODO: simple number - shortcut for float\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        value: assertOptionalNumber(pdNode.args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true,\n    }),\n};\n// ------------------------------- node implementation - shared ------------------------------ //\nconst sharedNodeImplementation = {\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `value`, 0),\n    ]),\n    initialization: ({ ns, node: { args }, state }) => ast `\n            ${ns.setValue}(${state}, ${args.value})\n        `,\n    messageReceivers: ({ ns, snds, state, }, { bangUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${ns.setValue}(${state}, ${msg.readFloatToken}(m, 0))\n                ${snds.$0}(${msg.floats}([${state}.value]))\n                return \n\n            } else if (${bangUtils.isBang}(m)) {\n                ${snds.$0}(${msg.floats}([${state}.value]))\n                return\n                \n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setValue, state, msg),\n    }),\n};\n// ------------------------------- node implementation - float ------------------------------ //\nconst nodeImplementationFloat = {\n    ...sharedNodeImplementation,\n    core: ({ ns }) => Sequence([\n        Func(ns.setValue, [\n            Var(ns.State, `state`),\n            Var(`Float`, `value`),\n        ], 'void') `\n                state.value = value\n            `\n    ]),\n    dependencies: [\n        bangUtils,\n    ],\n};\n// ------------------------------- node implementation - int ------------------------------ //\nconst nodeImplementationInt = {\n    ...sharedNodeImplementation,\n    core: ({ ns }, { numbers }) => Sequence([\n        Func(ns.setValue, [\n            Var(ns.State, `state`),\n            Var(`Float`, `value`),\n        ], 'void') `\n                state.value = ${numbers.roundFloatAsPdInt}(value)\n            `,\n    ]),\n    dependencies: [\n        roundFloatAsPdInt,\n        bangUtils,\n    ],\n};\n// ------------------------------------------------------------------- //\nconst builders = {\n    float: builder,\n    f: { aliasTo: 'float' },\n    int: builder,\n    i: { aliasTo: 'int' },\n};\nconst nodeImplementations = {\n    float: nodeImplementationFloat,\n    int: nodeImplementationInt,\n};\n\nexport { builders, nodeImplementations };\n","import { mtof, ftom } from '../global-code/funcs.js';\nimport { AnonFunc, Var, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\nconst makeNodeImplementation = ({ generateOperation, dependencies = [], }) => {\n    // ------------------------------- node implementation ------------------------------ //\n    return {\n        messageReceivers: ({ snds }, globals) => {\n            const { msg } = globals;\n            return {\n                '0': AnonFunc([Var(msg.Message, `m`)]) `\n                    if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                        ${ConstVar(`Float`, `value`, `${msg.readFloatToken}(m, 0)`)}\n                        ${snds.$0}(${msg.floats}([${generateOperation(globals)}]))\n                        return\n                    }\n                `\n            };\n        },\n        dependencies\n    };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    'abs': makeNodeImplementation({ generateOperation: () => `Math.abs(value)` }),\n    'wrap': makeNodeImplementation({ generateOperation: () => `(1 + (value % 1)) % 1` }),\n    'cos': makeNodeImplementation({ generateOperation: () => `Math.cos(value)` }),\n    'sqrt': makeNodeImplementation({ generateOperation: () => `value >= 0 ? Math.pow(value, 0.5): 0` }),\n    'mtof': makeNodeImplementation({ generateOperation: ({ funcs }) => `${funcs.mtof}(value)`, dependencies: [mtof] }),\n    'ftom': makeNodeImplementation({ generateOperation: ({ funcs }) => `${funcs.ftom}(value)`, dependencies: [ftom] }),\n    'rmstodb': makeNodeImplementation({ generateOperation: () => `value <= 0 ? 0 : 20 * Math.log(value) / Math.LN10 + 100` }),\n    'dbtorms': makeNodeImplementation({ generateOperation: () => `value <= 0 ? 0 : Math.exp(Math.LN10 * (value - 100) / 20)` }),\n    'powtodb': makeNodeImplementation({ generateOperation: () => `value <= 0 ? 0 : 10 * Math.log(value) / Math.LN10 + 100` }),\n    'dbtopow': makeNodeImplementation({ generateOperation: () => `value <= 0 ? 0 : Math.exp(Math.LN10 * (value - 100) / 10)` }),\n    // Implement vu as a noop\n    'vu': makeNodeImplementation({ generateOperation: () => `value` }),\n};\nconst builders = {\n    'abs': builder,\n    'cos': builder,\n    'wrap': builder,\n    'sqrt': builder,\n    'mtof': builder,\n    'ftom': builder,\n    'rmstodb': builder,\n    'dbtorms': builder,\n    'powtodb': builder,\n    'dbtopow': builder,\n    'vu': builder,\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalNumber } from '../validation.js';\nimport { pow } from '../global-code/funcs.js';\nimport { ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst makeBuilder = (defaultValue) => ({\n    translateArgs: (pdNode) => {\n        const value = assertOptionalNumber(pdNode.args[0]);\n        return {\n            value: value !== undefined ? value : defaultValue,\n        };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection(inletId, nodeArgs) {\n        if (inletId === '0') {\n            return { initialSignalValue: 0 };\n        }\n        if (inletId === '1') {\n            return { initialSignalValue: nodeArgs.value };\n        }\n        return undefined;\n    },\n});\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementations = {\n    '+~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'add_t',\n        },\n        dsp: ({ ins }) => ast `${ins.$0} + ${ins.$1}`,\n    },\n    '-~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'sub_t',\n        },\n        dsp: ({ ins }) => ast `${ins.$0} - ${ins.$1}`,\n    },\n    '*~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'mul_t',\n        },\n        dsp: ({ ins }) => ast `${ins.$0} * ${ins.$1}`,\n    },\n    '/~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'div_t',\n        },\n        dsp: ({ ins }) => ast `${ins.$1} !== 0 ? ${ins.$0} / ${ins.$1} : 0`,\n    },\n    'min~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'min_t',\n        },\n        dsp: ({ ins }) => ast `Math.min(${ins.$0}, ${ins.$1})`,\n    },\n    'max~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'max_t',\n        },\n        dsp: ({ ins }) => ast `Math.max(${ins.$0}, ${ins.$1})`,\n    },\n    'pow~': {\n        flags: {\n            isPureFunction: true,\n            isDspInline: true,\n            alphaName: 'pow_t',\n        },\n        dsp: ({ ins }, { funcs }) => ast `${funcs.pow}(${ins.$0}, ${ins.$1})`,\n        dependencies: [pow],\n    },\n};\nconst builders = {\n    '+~': makeBuilder(0),\n    '-~': makeBuilder(0),\n    '*~': makeBuilder(0),\n    '/~': makeBuilder(0),\n    'min~': makeBuilder(0),\n    'max~': makeBuilder(0),\n    'pow~': makeBuilder(0),\n};\n\nexport { builders, nodeImplementations };\n","import { ast, AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : implement seed\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => {\n        return {\n            inlets: {\n                '0': { type: 'message', id: '0' },\n            },\n            outlets: {\n                '0': { type: 'signal', id: '0' },\n            },\n        };\n    },\n};\n// ---------------------------- node implementation -------------------------- //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'noise_t',\n        isDspInline: true,\n    },\n    dsp: () => ast `Math.random() * 2 - 1`,\n    messageReceivers: (_, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'seed'\n            ) {\n                console.log('WARNING : seed not implemented yet for [noise~]')\n                return\n            }\n        `,\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { Sequence, ConstVar, Func, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { sked } from '../../../../WebPd_compiler/dist/src/stdlib/sked/sked.js';\nimport { bufCore } from '../../../../WebPd_compiler/dist/src/stdlib/buf/buf.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst delayBuffers = {\n    namespace: 'delayBuffers',\n    // prettier-ignore\n    code: ({ ns: delayBuffers }, { buf, sked }) => Sequence([\n        ConstVar(`Map<string, ${buf.SoundBuffer}>`, delayBuffers._BUFFERS, `new Map()`),\n        ConstVar(sked.Skeduler, delayBuffers._SKEDULER, `${sked.create}(true)`),\n        ConstVar(`${buf.SoundBuffer}`, delayBuffers.NULL_BUFFER, `${buf.create}(1)`),\n        Func(delayBuffers.get, [\n            Var(`string`, `delayName`),\n        ], buf.SoundBuffer) `\n            ${delayBuffers._BUFFERS}.get(delayName, buffer)\n        `,\n        Func(delayBuffers.set, [\n            Var(`string`, `delayName`),\n            Var(buf.SoundBuffer, `buffer`)\n        ], 'void') `\n            ${delayBuffers._BUFFERS}.set(delayName, buffer)\n            ${sked.emit}(${delayBuffers._SKEDULER}, delayName)\n        `,\n        Func(delayBuffers.wait, [\n            Var(`string`, `delayName`),\n            Var(sked.Callback, `callback`),\n        ], 'void') `\n            ${sked.wait}(${delayBuffers._SKEDULER}, delayName, callback)\n        `,\n        Func(delayBuffers.delete, [\n            Var(`string`, `delayName`)\n        ], 'void') `\n            ${delayBuffers._BUFFERS}.delete(delayName)\n        `,\n    ]),\n    dependencies: [bufCore, sked],\n};\n\nexport { delayBuffers };\n","import { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { bufWriteRead } from '../../../../WebPd_compiler/dist/src/stdlib/buf/buf.js';\nimport { assertOptionalString, assertOptionalNumber } from '../validation.js';\nimport { delayBuffers } from '../global-code/delay-buffers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : Implement 4-point interpolation for delread4\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        delayName: assertOptionalString(args[0]) || '',\n        initDelayMsec: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, { initDelayMsec }) => {\n        if (inletId === '0') {\n            return { initialSignalValue: initDelayMsec };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation - shared ------------------------------ //\nconst sharedNodeImplementation = {\n    state: ({ ns }, { buf, delayBuffers }) => Class(ns.State, [\n        Var(`string`, `delayName`, `\"\"`),\n        Var(buf.SoundBuffer, `buffer`, delayBuffers.NULL_BUFFER),\n        Var(`Float`, `rawOffset`, 0),\n        Var(`Int`, `offset`, 0),\n        Var(`(_: string) => void`, `setDelayNameCallback`, ns.NOOP)\n    ]),\n    initialization: ({ ns, node: { args }, state }, { delayBuffers }) => ast `\n        ${state}.setDelayNameCallback = ${AnonFunc([Var(`string`, `_`)]) `\n            ${state}.buffer = ${delayBuffers._BUFFERS}.get(${state}.delayName)\n            ${ns.updateOffset}(${state})\n        `}\n\n        if (\"${args.delayName}\".length) {\n            ${ns.setDelayName}(${state}, \"${args.delayName}\", ${state}.setDelayNameCallback)\n        }\n    `,\n    dsp: ({ ns, state, outs, ins }, { buf }) => ({\n        inlets: {\n            '0': ast `${ns.setRawOffset}(${state}, ${ins.$0})`\n        },\n        loop: ast `${outs.$0} = ${buf.readSample}(${state}.buffer, ${state}.offset)`,\n    }),\n    core: ({ ns }, { core, sked, delayBuffers }) => Sequence([\n        Func(ns.setDelayName, [\n            Var(ns.State, `state`),\n            Var(`string`, `delayName`),\n            Var(sked.Callback, `callback`),\n        ]) `\n                if (state.delayName.length) {\n                    state.buffer = ${delayBuffers.NULL_BUFFER}\n                }\n                state.delayName = delayName\n                if (state.delayName.length) {\n                    ${delayBuffers.wait}(state.delayName, callback)\n                }\n            `,\n        Func(ns.setRawOffset, [\n            Var(ns.State, `state`),\n            Var(`Float`, `rawOffset`),\n        ]) `\n                state.rawOffset = rawOffset\n                ${ns.updateOffset}(state)\n            `,\n        Func(ns.updateOffset, [\n            Var(ns.State, `state`),\n        ]) `\n                state.offset = toInt(Math.round(\n                    Math.min(\n                        Math.max(computeUnitInSamples(${core.SAMPLE_RATE}, state.rawOffset, \"msec\"), 0), \n                        toFloat(state.buffer.length - 1)\n                    )\n                ))\n            `,\n        Func(ns.NOOP, [\n            Var(`string`, `_`)\n        ]) ``,\n    ]),\n    dependencies: [\n        computeUnitInSamples,\n        delayBuffers,\n        bufWriteRead,\n    ],\n};\nconst builders = {\n    'delread~': builder,\n    'delread4~': builder,\n};\nconst nodeImplementations = {\n    'delread~': {\n        ...sharedNodeImplementation,\n        flags: {\n            alphaName: 'delread_t',\n        },\n    },\n    'delread4~': {\n        ...sharedNodeImplementation,\n        flags: {\n            alphaName: 'delread4_t',\n        },\n    },\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalString, assertOptionalNumber } from '../validation.js';\nimport { actionUtils } from '../global-code/core.js';\nimport { delayBuffers } from '../global-code/delay-buffers.js';\nimport { computeUnitInSamples } from '../global-code/timing.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { bufWriteRead } from '../../../../WebPd_compiler/dist/src/stdlib/buf/buf.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : default maxDurationMsec in Pd ? \n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        delayName: assertOptionalString(args[0]) || '',\n        maxDurationMsec: assertOptionalNumber(args[1]) || 100,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    configureMessageToSignalConnection: (inletId) => {\n        if (inletId === '0') {\n            return { reroutedMessageInletId: '0_message' };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'delwrite_t',\n    },\n    state: ({ ns }, { buf, delayBuffers }) => Class(ns.State, [\n        Var(`string`, `delayName`, `\"\"`),\n        Var(buf.SoundBuffer, `buffer`, delayBuffers.NULL_BUFFER),\n    ]),\n    initialization: ({ ns, node: { args }, state }, { buf, core }) => ast `\n        ${state}.buffer = ${buf.create}(\n            toInt(Math.ceil(computeUnitInSamples(\n                ${core.SAMPLE_RATE}, \n                ${args.maxDurationMsec},\n                \"msec\"\n            )))\n        )\n        if (\"${args.delayName}\".length) {\n            ${ns.setDelayName}(${state}, \"${args.delayName}\")\n        }\n    `,\n    dsp: ({ ins, state }, { buf }) => ast `${buf.writeSample}(${state}.buffer, ${ins.$0})`,\n    messageReceivers: ({ state }, { buf, msg, actionUtils }) => ({\n        '0_message': AnonFunc([Var(msg.Message, `m`)], `void`) `\n            if (${actionUtils.isAction}(m, 'clear')) {\n                ${buf.clear}(${state}.buffer)\n                return\n            }\n        `\n    }),\n    core: ({ ns }, { delayBuffers }) => Sequence([\n        Func(ns.setDelayName, [\n            Var(ns.State, `state`),\n            Var(`string`, `delayName`)\n        ], 'void') `\n                if (state.delayName.length) {\n                    ${delayBuffers.delete}(state.delayName)\n                }\n                state.delayName = delayName\n                if (state.delayName.length) {\n                    ${delayBuffers.set}(state.delayName, state.buffer)\n                }\n            `\n    ]),\n    dependencies: [\n        computeUnitInSamples,\n        delayBuffers,\n        actionUtils,\n        bufWriteRead,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { Class, Var, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : tests + cleaner implementations\n// TODO : separate rfilters with lastInput from the ones that don't need\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, { initValue }) => {\n        if (inletId === '1') {\n            return { initialSignalValue: initValue };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst makeNodeImplementation = ({ generateOperation, alphaName, }) => {\n    return {\n        flags: {\n            alphaName,\n        },\n        state: ({ ns }) => Class(ns.State, [\n            Var(`Float`, `lastOutput`, 0),\n            Var(`Float`, `lastInput`, 0),\n        ]),\n        dsp: ({ ins, state, outs }) => ast `\n            ${state}.lastOutput = ${outs.$0} = ${generateOperation(ins.$0, ins.$1, `${state}.lastOutput`, `${state}.lastInput`)}\n            ${state}.lastInput = ${ins.$0}\n        `,\n    };\n};\n// ------------------------------------------------------------------- //\nconst builders = {\n    'rpole~': builder,\n    'rzero~': builder,\n    'rzero_rev~': builder,\n};\nconst nodeImplementations = {\n    'rpole~': makeNodeImplementation({\n        alphaName: 'rpole_t',\n        generateOperation: (input, coeff, lastOutput) => `${input} + ${coeff} * ${lastOutput}`,\n    }),\n    'rzero~': makeNodeImplementation({\n        alphaName: 'rzero_t',\n        generateOperation: (input, coeff, _, lastInput) => `${input} - ${coeff} * ${lastInput}`,\n    }),\n    'rzero_rev~': makeNodeImplementation({\n        alphaName: 'rzero_rev_t',\n        generateOperation: (input, coeff, _, lastInput) => `${lastInput} - ${coeff} * ${input}`\n    }),\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalNumber } from '../validation.js';\nimport { Class, Var, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : tests + cleaner implementations\n// TODO : separate cfilters with lastInputRe lastInputIm from the ones that don't need\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initCoeffRe: assertOptionalNumber(args[0]) || 0,\n        initCoeffIm: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n            '2': { type: 'signal', id: '2' },\n            '3': { type: 'signal', id: '3' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, { initCoeffIm, initCoeffRe }) => {\n        if (inletId === '0') {\n            return { initialSignalValue: 0 };\n        }\n        if (inletId === '1') {\n            return { initialSignalValue: 0 };\n        }\n        if (inletId === '2') {\n            return { initialSignalValue: initCoeffRe };\n        }\n        if (inletId === '3') {\n            return { initialSignalValue: initCoeffIm };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst makeNodeImplementation = ({ generateOperationRe, generateOperationIm, alphaName, }) => {\n    return {\n        flags: {\n            alphaName,\n        },\n        state: ({ ns }) => Class(ns.State, [\n            Var(`Float`, `lastOutputRe`, 0),\n            Var(`Float`, `lastOutputIm`, 0),\n            Var(`Float`, `lastInputRe`, 0),\n            Var(`Float`, `lastInputIm`, 0),\n        ]),\n        dsp: ({ ins, state, outs }) => ast `\n            ${outs.$0} = ${generateOperationRe(ins.$0, ins.$1, ins.$2, ins.$3, `${state}.lastOutputRe`, `${state}.lastOutputIm`, `${state}.lastInputRe`, `${state}.lastInputIm`)}\n            ${state}.lastOutputIm = ${outs.$1} = ${generateOperationIm(ins.$0, ins.$1, ins.$2, ins.$3, `${state}.lastOutputRe`, `${state}.lastOutputIm`, `${state}.lastInputRe`, `${state}.lastInputIm`)}\n            ${state}.lastOutputRe    = ${outs.$0}\n            ${state}.lastInputRe = ${ins.$0}\n            ${state}.lastInputIm = ${ins.$1}\n        `,\n    };\n};\n// ------------------------------------------------------------------- //\nconst builders = {\n    'cpole~': builder,\n    'czero~': builder,\n};\nconst nodeImplementations = {\n    'cpole~': makeNodeImplementation({\n        alphaName: 'cpole_t',\n        // *outre++ = nextre + lastre * coefre - lastim * coefim\n        generateOperationRe: (inputRe, _, coeffRe, coeffIm, lastOutputRe, lastOutputIm) => `${inputRe} + ${lastOutputRe} * ${coeffRe} - ${lastOutputIm} * ${coeffIm}`,\n        // *outim++ = nextim + lastre * coefim + lastim * coefre;\n        generateOperationIm: (_, inputIm, coeffRe, coeffIm, lastOutputRe, lastOutputIm) => `${inputIm} + ${lastOutputRe} * ${coeffIm} + ${lastOutputIm} * ${coeffRe}`,\n    }),\n    'czero~': makeNodeImplementation({\n        alphaName: 'czero_t',\n        // *outre++ = nextre - lastre * coefre + lastim * coefim;\n        generateOperationRe: (inputRe, _, coeffRe, coeffIm, __, ___, lastInputRe, lastInputIm) => `${inputRe} - ${lastInputRe} * ${coeffRe} + ${lastInputIm} * ${coeffIm}`,\n        // *outim++ = nextim - lastre * coefim - lastim * coefre;\n        generateOperationIm: (_, inputIm, coeffRe, coeffIm, __, ___, lastInputRe, lastInputIm) => `${inputIm} - ${lastInputRe} * ${coeffIm} - ${lastInputIm} * ${coeffRe}`,\n    }),\n};\n\nexport { builders, nodeImplementations };\n","import { assertOptionalNumber } from '../validation.js';\nimport { Class, Var, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : very inneficient compute coeff at each iter\n// TODO : tests + cleaner implementations\n// TODO : separate rfilters with lastInput from the ones that don't need\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, nodeArgs) => {\n        if (inletId === '1') {\n            return { initialSignalValue: nodeArgs.initValue };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'hip_t',\n    },\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `previous`, 0),\n        Var(`Float`, `current`, 0),\n        Var(`Float`, `coeff`, 0),\n        Var(`Float`, `normal`, 0),\n    ]),\n    dsp: ({ ins, state, outs }, { core }) => ({\n        inlets: {\n            '1': ast `\n                ${state}.coeff = Math.min(Math.max(1 - ${ins.$1} * (2 * Math.PI) / ${core.SAMPLE_RATE}, 0), 1)\n                ${state}.normal = 0.5 * (1 + ${state}.coeff)\n            `\n        },\n        loop: ast `\n            ${state}.current = ${ins.$0} + ${state}.coeff * ${state}.previous\n            ${outs.$0} = ${state}.normal * (${state}.current - ${state}.previous)\n            ${state}.previous = ${state}.current\n        `\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { Class, Var, ast, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : very inneficient compute coeff at each iter\n// TODO : tests + cleaner implementations\n// TODO : separate rfilters with lastInput from the ones that don't need\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        frequency: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    configureMessageToSignalConnection: (inletId, nodeArgs) => {\n        if (inletId === '1') {\n            return { initialSignalValue: nodeArgs.frequency };\n        }\n        return undefined;\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'lop_t',\n    },\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Float`, `previous`, 0),\n        Var(`Float`, `coeff`, 0),\n    ]),\n    dsp: ({ ns, ins, state, outs }) => ({\n        inlets: {\n            '1': ast `${ns.setFreq}(${state}, ${ins.$1})`\n        },\n        loop: ast `${state}.previous = ${outs.$0} = ${state}.coeff * ${ins.$0} + (1 - ${state}.coeff) * ${state}.previous`\n    }),\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '1': coldFloatInletWithSetter(ns.setFreq, state, msg),\n    }),\n    core: ({ ns }, { core }) => Sequence([\n        Func(ns.setFreq, [\n            Var(ns.State, `state`),\n            Var(`Float`, `freq`),\n        ], 'void') `\n                state.coeff = Math.max(Math.min(freq * 2 * Math.PI / ${core.SAMPLE_RATE}, 1), 0)\n            `\n    ])\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { Class, Var, ast, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : this uses bp~ implementation, not vcf. Rewrite using pd's implementation : \n// https://github.com/pure-data/pure-data/blob/master/src/d_osc.c\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        frequency: assertOptionalNumber(args[0]) || 0,\n        Q: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    flags: {\n        alphaName: 'vcf_t',\n    },\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `frequency`, args.frequency),\n        Var(`Float`, `Q`, args.Q),\n        Var(`Float`, `coef1`, 0),\n        Var(`Float`, `coef2`, 0),\n        Var(`Float`, `gain`, 0),\n        Var(`Float`, `y`, 0),\n        Var(`Float`, `ym1`, 0),\n        Var(`Float`, `ym2`, 0),\n    ]),\n    dsp: ({ ns, ins, outs, state }) => ({\n        inlets: {\n            '1': ast `\n                ${ns.setFrequency}(${state}, ${ins.$1})\n            `\n        },\n        loop: ast `\n            ${state}.y = ${ins.$0} + ${state}.coef1 * ${state}.ym1 + ${state}.coef2 * ${state}.ym2\n            ${outs.$1} = ${outs.$0} = ${state}.gain * ${state}.y\n            ${state}.ym2 = ${state}.ym1\n            ${state}.ym1 = ${state}.y\n        `\n    }),\n    messageReceivers: ({ ns, state }, { msg }) => ({\n        '2': coldFloatInletWithSetter(ns.setQ, state, msg),\n    }),\n    core: ({ ns }, { core }) => Sequence([\n        Func(ns.updateCoefs, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                ${Var(`Float`, `omega`, `state.frequency * (2.0 * Math.PI) / ${core.SAMPLE_RATE}`)}\n                ${Var(`Float`, `oneminusr`, `state.Q < 0.001 ? 1.0 : Math.min(omega / state.Q, 1)`)}\n                ${Var(`Float`, `r`, `1.0 - oneminusr`)}\n                ${Var(`Float`, `sigbp_qcos`, `(omega >= -(0.5 * Math.PI) && omega <= 0.5 * Math.PI) ? \n                    (((Math.pow(omega, 6) * (-1.0 / 720.0) + Math.pow(omega, 4) * (1.0 / 24)) - Math.pow(omega, 2) * 0.5) + 1)\n                    : 0`)}\n        \n                state.coef1 = 2.0 * sigbp_qcos * r\n                state.coef2 = - r * r\n                state.gain = 2 * oneminusr * (oneminusr + r * omega)\n            `,\n        Func(ns.setFrequency, [\n            Var(ns.State, `state`),\n            Var(`Float`, `frequency`),\n        ], 'void') `\n                state.frequency = (frequency < 0.001) ? 10: frequency\n                ${ns.updateCoefs}(state)\n            `,\n        Func(ns.setQ, [\n            Var(ns.State, `state`),\n            Var(`Float`, `Q`),\n        ], 'void') `\n                state.Q = Math.max(Q, 0)\n                ${ns.updateCoefs}(state)\n            `,\n    ])\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc, ConstVar, Sequence } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { msgBuses } from '../global-code/buses.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : msg [ symbol $1 ( has the following behavior :\n//      sends \"\" when receiving a number\n//      sends <string> when receiving a string\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    skipDollarArgsResolution: true,\n    translateArgs: ({ args }) => {\n        const msgSpecs = [{ tokens: [], send: null }];\n        let index = 0;\n        let send = null;\n        while (index < args.length) {\n            const arg = args[index++];\n            if (arg === ',' || arg === ';') {\n                // If this is the last token, we just ignore it\n                // (no length - 1, because index was already incremented)\n                if (index === args.length) {\n                    continue;\n                }\n                if (arg === ';') {\n                    let send_ = args[index++];\n                    if (typeof send_ !== 'string') {\n                        throw new Error(`Expected a string after \";\" from [msg( with args [${args.join(' ')}]`);\n                    }\n                    send = send_;\n                }\n                msgSpecs.push({ tokens: [], send });\n            }\n            else {\n                msgSpecs[msgSpecs.length - 1].tokens.push(arg);\n            }\n        }\n        return {\n            msgSpecs: msgSpecs\n                .filter(msgSpec => msgSpec.tokens.length)\n                .map(msgSpec => {\n                if (msgSpec.tokens[0] === 'symbol') {\n                    msgSpec.tokens = [typeof msgSpec.tokens[1] === 'string' ? msgSpec.tokens[1] : ''];\n                }\n                return msgSpec;\n            }),\n        };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }) => Class(ns.State, [\n        Var(`Array<${ns.TokenSpec}>`, `msgSpecs`, `[]`),\n    ]),\n    initialization: (context, globals) => {\n        const { node: { args }, state } = context;\n        const { msg } = globals;\n        const transferCode = args.msgSpecs.map((msgSpec, i) => buildTransferCode(context, globals, msgSpec, i));\n        return ast `\n            ${state}.msgSpecs = [\n                ${transferCode.map(({ isStaticMsg, code }, i) => ast `\n                    {\n                        transferFunction: ${AnonFunc([\n            Var(msg.Message, `inMessage`)\n        ], msg.Message) `\n                            ${!isStaticMsg ? code : null}\n                            return ${state}.msgSpecs[${i}].outMessage\n                        `},\n                        outTemplate: [],\n                        outMessage: ${msg.EMPTY_MESSAGE},\n                        send: ${args.msgSpecs[i].send ? `\"${args.msgSpecs[i].send}\"` : `\"\"`},\n                        hasSend: ${args.msgSpecs[i].send ? `true` : `false`},\n                    },`)}\n            ]\n\n            ${transferCode\n            .filter(({ isStaticMsg }) => isStaticMsg)\n            .map(({ code }) => code)}\n        `;\n    },\n    messageReceivers: ({ snds, state, }, { msg, msgBuses }) => {\n        return {\n            '0': AnonFunc([Var(msg.Message, `m`)]) `\n                if (\n                    ${msg.isStringToken}(m, 0) \n                    && ${msg.readStringToken}(m, 0) === 'set'\n                ) {\n                    ${ConstVar(msg.Template, `outTemplate`, `[]`)}\n                    for (${Var(`Int`, `i`, `1`)}; i < ${msg.getLength}(m); i++) {\n                        if (${msg.isFloatToken}(m, i)) {\n                            outTemplate.push(${msg.FLOAT_TOKEN})\n                        } else {\n                            outTemplate.push(${msg.STRING_TOKEN})\n                            outTemplate.push(${msg.readStringToken}(m, i).length)\n                        }\n                    }\n\n                    ${ConstVar(msg.Message, `outMessage`, `${msg.create}(outTemplate)`)}\n                    for (${Var(`Int`, `i`, `1`)}; i < ${msg.getLength}(m); i++) {\n                        if (${msg.isFloatToken}(m, i)) {\n                            ${msg.writeFloatToken}(\n                                outMessage, i - 1, ${msg.readFloatToken}(m, i)\n                            )\n                        } else {\n                            ${msg.writeStringToken}(\n                                outMessage, i - 1, ${msg.readStringToken}(m, i)\n                            )\n                        }\n                    }\n\n                    ${state}.msgSpecs.splice(0, ${state}.msgSpecs.length - 1)\n                    ${state}.msgSpecs[0] = {\n                        transferFunction: ${AnonFunc([Var(msg.Message, `m`)], msg.Message) `\n                            return ${state}.msgSpecs[0].outMessage\n                        `},\n                        outTemplate: outTemplate,\n                        outMessage: outMessage,\n                        send: \"\",\n                        hasSend: false,\n                    }\n                    return\n    \n                } else {\n                    for (${Var(`Int`, `i`, `0`)}; i < ${state}.msgSpecs.length; i++) {\n                        if (${state}.msgSpecs[i].hasSend) {\n                            ${msgBuses.publish}(${state}.msgSpecs[i].send, ${state}.msgSpecs[i].transferFunction(m))\n                        } else {\n                            ${snds.$0}(${state}.msgSpecs[i].transferFunction(m))\n                        }\n                    }\n                    return\n                }\n            `,\n        };\n    },\n    core: ({ ns }, { msg }) => Sequence([\n        Class(ns.TokenSpec, [\n            Var(`(m: ${msg.Message}) => ${msg.Message}`, `transferFunction`),\n            Var(msg.Template, `outTemplate`),\n            Var(msg.Message, `outMessage`),\n            Var(`string`, `send`),\n            Var(`boolean`, `hasSend`),\n        ])\n    ]),\n    dependencies: [msgBuses]\n};\n// ---------------------------------------------------------------------------- //\nconst buildTransferCode = ({ state }, { msg }, msgSpec, index) => {\n    const outTemplate = `${state}.msgSpecs[${index}].outTemplate`;\n    const outMessage = `${state}.msgSpecs[${index}].outMessage`;\n    let outTemplateCode = [];\n    let outMessageCode = [];\n    let stringMemCount = 0;\n    let hasStringTemplate = false;\n    let isStaticMsg = true;\n    msgSpec.tokens.forEach((token, outIndex) => {\n        const operation = guessTokenOperation(token);\n        if (operation.type === 'noop') {\n            isStaticMsg = false;\n            const { inIndex } = operation;\n            outTemplateCode.push(ast `\n                ${outTemplate}.push(${msg.getTokenType}(inMessage, ${inIndex}))\n                if (${msg.isStringToken}(inMessage, ${inIndex})) {\n                    stringMem[${stringMemCount}] = ${msg.readStringToken}(inMessage, ${inIndex})\n                    ${outTemplate}.push(stringMem[${stringMemCount}].length)\n                }\n            `);\n            outMessageCode.push(ast `\n                if (${msg.isFloatToken}(inMessage, ${inIndex})) {\n                    ${msg.writeFloatToken}(${outMessage}, ${outIndex}, ${msg.readFloatToken}(inMessage, ${inIndex}))\n                } else if (${msg.isStringToken}(inMessage, ${inIndex})) {\n                    ${msg.writeStringToken}(${outMessage}, ${outIndex}, stringMem[${stringMemCount}])\n                }\n            `);\n            stringMemCount++;\n        }\n        else if (operation.type === 'string-template') {\n            isStaticMsg = false;\n            hasStringTemplate = true;\n            outTemplateCode.push(ast `\n                stringToken = \"${operation.template}\"\n                ${operation.variables.map(({ placeholder, inIndex }) => `\n                    if (${msg.isFloatToken}(inMessage, ${inIndex})) {\n                        otherStringToken = ${msg.readFloatToken}(inMessage, ${inIndex}).toString()\n                        if (otherStringToken.endsWith('.0')) {\n                            otherStringToken = otherStringToken.slice(0, -2)\n                        }\n                        stringToken = stringToken.replace(\"${placeholder}\", otherStringToken)\n                    } else if (${msg.isStringToken}(inMessage, ${inIndex})) {\n                        stringToken = stringToken.replace(\"${placeholder}\", ${msg.readStringToken}(inMessage, ${inIndex}))\n                    }`).join('\\n')}\n                stringMem[${stringMemCount}] = stringToken\n                ${outTemplate}.push(${msg.STRING_TOKEN})\n                ${outTemplate}.push(stringMem[${stringMemCount}].length)\n            `);\n            outMessageCode.push(ast `\n                ${msg.writeStringToken}(${outMessage}, ${outIndex}, stringMem[${stringMemCount}])\n            `);\n            stringMemCount++;\n        }\n        else if (operation.type === 'string-constant') {\n            outTemplateCode.push(ast `\n                ${outTemplate}.push(${msg.STRING_TOKEN})\n                ${outTemplate}.push(${operation.value.length})\n            `);\n            outMessageCode.push(ast `\n                ${msg.writeStringToken}(${outMessage}, ${outIndex}, \"${operation.value}\")\n            `);\n        }\n        else if (operation.type === 'float-constant') {\n            outTemplateCode.push(ast `\n                ${outTemplate}.push(${msg.FLOAT_TOKEN})\n            `);\n            outMessageCode.push(ast `\n                ${msg.writeFloatToken}(${outMessage}, ${outIndex}, ${operation.value})\n            `);\n        }\n    });\n    const initCode = ast `\n        ${hasStringTemplate ? Var(`string`, `stringToken`) : null}\n        ${hasStringTemplate ? Var(`string`, `otherStringToken`) : null}\n        ${!isStaticMsg ? Var(`Array<string>`, `stringMem`, `[]`) : null}\n    `;\n    outTemplateCode.unshift(ast `${outTemplate} = []`);\n    outMessageCode.unshift(ast `${outMessage} = ${msg.create}(${outTemplate})`);\n    return {\n        isStaticMsg,\n        code: Sequence([\n            initCode,\n            ...outTemplateCode,\n            ...outMessageCode,\n        ])\n    };\n};\nconst guessTokenOperation = (token) => {\n    if (typeof token === 'string') {\n        const matchDollar = DOLLAR_VAR_RE.exec(token);\n        // If the transfer is a dollar var :\n        //      ['bla', 789] - ['$1'] -> ['bla']\n        //      ['bla', 789] - ['$2'] -> [789]\n        if (matchDollar && matchDollar[0] === token) {\n            // -1, because $1 corresponds to value 0.\n            const inIndex = parseInt(matchDollar[1], 10) - 1;\n            return { type: 'noop', inIndex };\n        }\n        else if (matchDollar) {\n            const variables = [];\n            let matched;\n            while ((matched = DOLLAR_VAR_RE_GLOB.exec(token))) {\n                // position -1, because $1 corresponds to value 0.\n                variables.push({\n                    placeholder: matched[0],\n                    inIndex: parseInt(matched[1], 10) - 1,\n                });\n            }\n            return {\n                type: 'string-template',\n                template: token,\n                variables,\n            };\n            // Else the input doesn't matter\n        }\n        else {\n            return { type: 'string-constant', value: token };\n        }\n    }\n    else {\n        return { type: 'float-constant', value: token };\n    }\n};\nconst DOLLAR_VAR_RE = /\\$(\\d+)/;\nconst DOLLAR_VAR_RE_GLOB = /\\$(\\d+)/g;\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, ConstVar, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { assertOptionalString, assertOptionalNumber } from '../validation.js';\nimport { bangUtils, msgUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : implement missing list operations\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => {\n        const operation = assertOptionalString(args[0]) || 'append';\n        let operationArgs = args.slice(1);\n        switch (operation) {\n            case 'split':\n                operationArgs = [assertOptionalNumber(args[1]) || 0];\n                break;\n            case 'trim':\n            case 'length':\n                operationArgs = [];\n                break;\n            case 'append':\n            case 'prepend':\n                break;\n            case 'fromsymbol':\n            case 'tosymbol':\n            case 'store':\n                throw new Error(`list operation ${operation} not implemented yet`);\n            default:\n                throw new Error(`invalid list operation ${operation}`);\n        }\n        return {\n            operation,\n            operationArgs,\n        };\n    },\n    build: ({ operation }) => {\n        let inletCount = 0;\n        let outletCount = 0;\n        switch (operation) {\n            case 'split':\n                inletCount = 2;\n                outletCount = 3;\n                break;\n            case 'trim':\n            case 'length':\n                inletCount = 1;\n                outletCount = 1;\n                break;\n            case 'prepend':\n            case 'append':\n                inletCount = 2;\n                outletCount = 1;\n                break;\n        }\n        return {\n            inlets: mapArray(countTo(inletCount), (i) => [`${i}`, { type: 'message', id: `${i}` }]),\n            outlets: mapArray(countTo(outletCount), (i) => [`${i}`, { type: 'message', id: `${i}` }]),\n        };\n    },\n};\n// ------------------------------- generateDeclarations ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }, { msg }) => Class(ns.State, [\n        Var(`Int`, `splitPoint`, 0),\n        Var(msg.Message, `currentList`, `${msg.create}([])`),\n    ]),\n    initialization: ({ node: { args }, state }, { msg }) => ast `\n        ${args.operation === 'split' ?\n        `${state}.splitPoint = ${args.operationArgs[0]}` : null}\n\n        ${args.operation === 'append' || args.operation === 'prepend' ? ast ` \n            {\n                ${ConstVar(msg.Template, `template`, `[${args.operationArgs.map((arg) => typeof arg === 'string' ?\n        `${msg.STRING_TOKEN},${arg.length}`\n        : `${msg.FLOAT_TOKEN}`).join(',')}]`)}\n\n                ${state}.currentList = ${msg.create}(template)\n\n                ${args.operationArgs.map((arg, i) => typeof arg === 'string' ?\n        `${msg.writeStringToken}(${state}.currentList, ${i}, \"${arg}\")`\n        : `${msg.writeFloatToken}(${state}.currentList, ${i}, ${arg})`)}\n            }\n        ` : null}\n    `,\n    messageReceivers: ({ ns, snds, state, node: { args } }, { bangUtils, msgUtils, msg, }) => {\n        const prepareInMessage = ConstVar(msg.Message, `inMessage`, `${bangUtils.isBang}(m) ? ${msg.create}([]): m`);\n        switch (args.operation) {\n            case 'split':\n                return {\n                    '0': AnonFunc([Var(msg.Message, `m`)]) `\n                        ${prepareInMessage}\n                        if (${msg.getLength}(inMessage) < ${state}.splitPoint) {\n                            ${snds.$2}(m)\n                            return\n                        } else if (${msg.getLength}(inMessage) === ${state}.splitPoint) {\n                            ${snds.$1}(${bangUtils.bang}())\n                            ${snds.$0}(m)\n                            return\n                        }\n                        ${ConstVar(msg.Message, `outMessage1`, `${msgUtils.slice}(inMessage, ${state}.splitPoint, ${msg.getLength}(inMessage))`)}\n                        ${ConstVar(msg.Message, `outMessage0`, `${msgUtils.slice}(inMessage, 0, ${state}.splitPoint)`)}\n                        ${snds.$1}(${msg.getLength}(outMessage1) === 0 ? ${bangUtils.bang}(): outMessage1)\n                        ${snds.$0}(${msg.getLength}(outMessage0) === 0 ? ${bangUtils.bang}(): outMessage0)\n                        return\n                    `,\n                    '1': coldFloatInletWithSetter(ns.setSplitPoint, state, msg),\n                };\n            case 'trim':\n                return {\n                    '0': AnonFunc([Var(msg.Message, `m`)]) `\n                        ${snds.$0}(m)\n                        return\n                    `\n                };\n            case 'length':\n                return {\n                    '0': AnonFunc([Var(msg.Message, `m`)]) `\n                        if (${bangUtils.isBang}(m)) {\n                            ${snds.$0}(${msg.floats}([0]))\n                        } else {\n                            ${snds.$0}(${msg.floats}([toFloat(${msg.getLength}(m))]))\n                        }\n                        return\n                    `\n                };\n            case 'append':\n            case 'prepend':\n                const appendPrependOutMessageCode = args.operation === 'prepend' ?\n                    `${msgUtils.concat}(${state}.currentList, m)`\n                    : `${msgUtils.concat}(m, ${state}.currentList)`;\n                return {\n                    '0': AnonFunc([Var(msg.Message, `m`)]) `\n                        if (${bangUtils.isBang}(m)) {\n                            ${snds.$0}(${msg.getLength}(${state}.currentList) === 0 ? ${bangUtils.bang}(): ${state}.currentList)\n                        } else {\n                            ${snds.$0}(${msg.getLength}(${state}.currentList) === 0 && ${msg.getLength}(m) === 0 ? ${bangUtils.bang}(): ${appendPrependOutMessageCode})\n                        }\n                        return\n                    `,\n                    '1': AnonFunc([Var(msg.Message, `m`)]) `\n                        ${prepareInMessage}\n                        ${state}.currentList = inMessage\n                        return\n                    `\n                };\n            case 'length':\n            default:\n                throw new Error(`unknown list operation ${args.operation}`);\n        }\n    },\n    core: ({ ns }) => Sequence([\n        Func(ns.setSplitPoint, [\n            Var(ns.State, `state`),\n            Var(`Float`, `value`),\n        ], 'void') `\n                state.splitPoint = toInt(value)\n            `\n    ]),\n    dependencies: [\n        bangUtils,\n        msgUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalString } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { msgBuses } from '../global-code/buses.js';\nimport { Class, Var, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO: proper support for $ args\n// TODO: simple number - shortcut for float\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        value: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true,\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`string`, `value`, `\"${args.value}\"`)\n    ]),\n    messageReceivers: ({ snds, state }, { msg, bangUtils }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${snds.$0}(${msg.strings}([${state}.value]))\n                return\n    \n            } else if (${msg.isMatching}(m, [${msg.STRING_TOKEN}])) {\n                ${state}.value = ${msg.readStringToken}(m, 0)\n                ${snds.$0}(${msg.strings}([${state}.value]))\n                return\n    \n            }\n        `,\n        '1': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.STRING_TOKEN}])) {\n                ${state}.value = ${msg.readStringToken}(m, 0)\n                return \n            }\n        `,\n    }),\n    dependencies: [\n        bangUtils,\n        msgBuses,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalString } from '../validation.js';\nimport { msgBuses } from '../global-code/buses.js';\nimport { coldStringInlet } from '../standard-message-receivers.js';\nimport { Class, Var, AnonFunc, ast } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builderSend = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {},\n    }),\n};\nconst builderReceive = {\n    translateArgs: (pdNode) => ({\n        busName: assertOptionalString(pdNode.args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true\n    }),\n};\n// -------------------------------- node implementation - send ----------------------------------- //\nconst nodeImplementationSend = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`string`, `busName`, `\"${args.busName}\"`),\n    ]),\n    messageReceivers: ({ state, }, { msgBuses, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            ${msgBuses.publish}(${state}.busName, m)\n            return\n        `,\n        '1': coldStringInlet(`${state}.busName`, msg)\n    }),\n    dependencies: [\n        msgBuses,\n    ],\n};\n// -------------------------------- node implementation - receive ----------------------------------- //\nconst nodeImplementationReceive = {\n    initialization: ({ node: { args }, snds }, { msgBuses }) => ast `\n            ${msgBuses.subscribe}(\"${args.busName}\", ${snds.$0})\n        `,\n    dependencies: [\n        msgBuses,\n    ],\n};\n// ------------------------------------------------------------------------ //\nconst builders = {\n    send: builderSend,\n    receive: builderReceive,\n};\nconst nodeImplementations = {\n    send: nodeImplementationSend,\n    receive: nodeImplementationReceive,\n};\n\nexport { builders, nodeImplementations };\n","import { soundFileOpenOpts } from '../global-code/fs.js';\nimport { Class, Var, AnonFunc, ConstVar, ast, Func, Sequence } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { fsReadSoundFile, fsWriteSoundFile } from '../../../../WebPd_compiler/dist/src/stdlib/fs/fs.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO: Implement -normalize for write operation\n// TODO: Implement output headersize\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------ generateDeclarations ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }, { fs }) => Class(ns.State, [\n        Var(`Map<${fs.OperationId}, ${ns.Operation}>`, `operations`, `new Map()`),\n    ]),\n    messageReceivers: ({ ns, state, snds }, { msg, fs, core, commons, soundFileOpenOpts }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (\n                ${msg.getLength}(m) >= 3 \n                && ${msg.isStringToken}(m, 0)\n                && (\n                    ${msg.readStringToken}(m, 0) === 'read'\n                    || ${msg.readStringToken}(m, 0) === 'write'\n                )\n            ) {\n                ${ConstVar(`string`, `operationType`, `${msg.readStringToken}(m, 0)`)}\n                ${ConstVar(fs.SoundInfo, `soundInfo`, `{\n                    channelCount: 0,\n                    sampleRate: toInt(${core.SAMPLE_RATE}),\n                    bitDepth: 32,\n                    encodingFormat: '',\n                    endianness: '',\n                    extraOptions: '',\n                }`)}\n                ${ConstVar(ns.Operation, `operation`, `{\n                    arrayNames: [],\n                    resize: false,\n                    maxSize: -1,\n                    skip: 0,\n                    framesToWrite: 0,\n                    url: '',\n                    soundInfo,\n                }`)}\n                ${Var(`Set<Int>`, `unhandledOptions`, `${soundFileOpenOpts.parse}(\n                    m,\n                    soundInfo,\n                )`)}\n                \n                // Remove the operation type\n                unhandledOptions.delete(0)\n                \n                ${Var(`Int`, `i`, `1`)}\n                ${Var(`string`, `str`, `\"\"`)}\n                while (i < ${msg.getLength}(m)) {\n                    if (!unhandledOptions.has(i)) {\n\n                    } else if (${msg.isStringToken}(m, i)) {\n                        str = ${msg.readStringToken}(m, i)\n                        if (str === '-resize') {\n                            unhandledOptions.delete(i)\n                            operation.resize = true\n\n                        } else if (str === '-maxsize' || str === '-nframes') {\n                            unhandledOptions.delete(i)\n                            if (\n                                i + 1 >= ${msg.getLength}(m) \n                                || !${msg.isFloatToken}(m, i + 1)\n                            ) {\n                                console.log(\"invalid value for -maxsize\")\n                            }\n                            operation.maxSize = ${msg.readFloatToken}(m, i + 1)\n                            unhandledOptions.delete(i + 1)\n                            i++\n\n                        } else if (str === '-skip') {\n                            unhandledOptions.delete(i)\n                            if (\n                                i + 1 >= ${msg.getLength}(m) \n                                || !${msg.isFloatToken}(m, i + 1)\n                            ) {\n                                console.log(\"invalid value for -skip\")\n                            }\n                            operation.skip = ${msg.readFloatToken}(m, i + 1)\n                            unhandledOptions.delete(i + 1)\n                            i++\n\n                        } else if (str === '-normalize') {\n                            unhandledOptions.delete(i)\n                            console.log('-normalize not implemented')\n                        }\n                    }\n                    i++\n                }\n\n                i = 1\n                ${Var(`boolean`, `urlFound`, `false`)}\n                while (i < ${msg.getLength}(m)) {\n                    if (!unhandledOptions.has(i)) {\n\n                    } else if (${msg.isStringToken}(m, i)) {\n                        str = ${msg.readStringToken}(m, i)\n                        if (!str.startsWith('-') && urlFound === false) {\n                            operation.url = str\n                            urlFound = true\n                        } else {\n                            operation.arrayNames.push(str)\n                        }\n                        unhandledOptions.delete(i)\n                    }\n                    i++\n                }\n\n                for (i = 0; i < operation.arrayNames.length; i++) {\n                    if (!${commons.hasArray}(operation.arrayNames[i])) {\n                        console.log('[soundfiler] unknown array ' + operation.arrayNames[i])\n                        return\n                    }\n                }\n\n                if (unhandledOptions.size) {\n                    console.log(\"soundfiler received invalid options\")\n                }\n\n                soundInfo.channelCount = operation.arrayNames.length\n\n                if (operationType === 'read') {\n                    ${ConstVar(fs.OperationId, `id`, ast `${fs.readSoundFile}(\n                        operation.url, \n                        soundInfo,\n                        ${AnonFunc([\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n            Var(`FloatArray[]`, `sound`),\n        ], 'void') `\n                            ${ConstVar(ns.Operation, `operation`, `${state}.operations.get(id)`)}\n                            ${state}.operations.delete(id)\n                            ${Var(`Int`, `i`, `0`)}\n                            ${Var(`Float`, `maxFramesRead`, `0`)}\n                            ${Var(`Float`, `framesToRead`, `0`)}\n                            ${Var(`FloatArray`, `array`, `createFloatArray(0)`)}\n                            for (i = 0; i < sound.length; i++) {\n                                if (operation.resize) {\n                                    if (operation.maxSize > 0) {\n                                        framesToRead = Math.min(\n                                            operation.maxSize, \n                                            toFloat(sound[i].length) - operation.skip\n                                        )\n        \n                                    } else {\n                                        framesToRead = toFloat(sound[i].length) - operation.skip\n                                    }\n        \n                                    ${commons.setArray}(\n                                        operation.arrayNames[i], \n                                        sound[i].subarray(\n                                            toInt(operation.skip), \n                                            toInt(operation.skip + framesToRead)\n                                        )\n                                    )\n                                    \n                                } else {\n                                    array = ${commons.getArray}(operation.arrayNames[i])\n                                    framesToRead = Math.min(\n                                        toFloat(array.length),\n                                        toFloat(sound[i].length) - operation.skip\n                                    )\n                                    array.set(sound[i].subarray(0, array.length))\n                                }\n                                maxFramesRead = Math.max(\n                                    maxFramesRead,\n                                    framesToRead\n                                )\n                            }\n        \n                            ${snds.$1}(${ns.buildMessage1}(operation.soundInfo))\n                            ${snds.$0}(${msg.floats}([maxFramesRead]))\n                        `}\n                    )`)}\n\n                    ${state}.operations.set(id, operation)\n\n                } else if (operationType === 'write') {\n                    ${Var(`Int`, `i`, `0`)}\n                    ${Var(`Float`, `framesToWrite`, `0`)}\n                    ${Var(`FloatArray`, `array`, `createFloatArray(0)`)}\n                    ${ConstVar(`FloatArray[]`, `sound`, `[]`)}\n                    \n                    for (i = 0; i < operation.arrayNames.length; i++) {\n                        framesToWrite = Math.max(\n                            framesToWrite,\n                            toFloat(${commons.getArray}(operation.arrayNames[i]).length) - operation.skip,\n                        )\n                    }\n\n                    if (operation.maxSize >= 0) {\n                        framesToWrite = Math.min(\n                            operation.maxSize, \n                            framesToWrite\n                        )\n                    }\n                    operation.framesToWrite = framesToWrite\n\n                    if (framesToWrite < 1) {\n                        console.log('[soundfiler] no frames to write')\n                        return\n                    }\n\n                    for (i = 0; i < operation.arrayNames.length; i++) {\n                        array = ${commons.getArray}(operation.arrayNames[i])\n                        if (framesToWrite > toFloat(array.length) - operation.skip) {\n                            sound.push(createFloatArray(toInt(framesToWrite)))\n                            sound[i].set(array.subarray(\n                                toInt(operation.skip), \n                                toInt(operation.skip + framesToWrite)\n                            ))\n                        } else {\n                            sound.push(array.subarray(\n                                toInt(operation.skip), \n                                toInt(operation.skip + framesToWrite)\n                            ))\n                        }\n                    }\n\n                    ${Func('callback', [\n            Var(fs.OperationId, `id`),\n            Var(fs.OperationStatus, `status`),\n        ], 'void') `\n                        ${ConstVar(ns.Operation, `operation`, `${state}.operations.get(id)`)}\n                        ${state}.operations.delete(id)\n                        ${snds.$1}(${ns.buildMessage1}(operation.soundInfo))\n                        ${snds.$0}(${msg.floats}([operation.framesToWrite]))\n                    `}\n\n                    ${ConstVar(fs.OperationId, `id`, `${fs.writeSoundFile}(\n                        sound, \n                        operation.url, \n                        soundInfo, \n                        callback\n                    )`)}\n\n                    ${state}.operations.set(id, operation)\n                }\n\n                return\n            }\n        `,\n    }),\n    core: ({ ns }, { msg, fs }) => Sequence([\n        Class(ns.Operation, [\n            Var(`string`, `url`),\n            Var(`Array<string>`, `arrayNames`),\n            Var(`boolean`, `resize`),\n            Var(`Float`, `maxSize`),\n            Var(`Float`, `framesToWrite`),\n            Var(`Float`, `skip`),\n            Var(fs.SoundInfo, `soundInfo`),\n        ]),\n        Func(ns.buildMessage1, [\n            Var(fs.SoundInfo, `soundInfo`)\n        ], msg.Message) `\n                ${ConstVar(msg.Message, `m`, `${msg.create}([\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.FLOAT_TOKEN},\n                    ${msg.STRING_TOKEN},\n                    soundInfo.endianness.length,\n                ])`)}\n                ${msg.writeFloatToken}(m, 0, toFloat(soundInfo.sampleRate))\n                ${msg.writeFloatToken}(m, 1, -1) // TODO IMPLEMENT headersize\n                ${msg.writeFloatToken}(m, 2, toFloat(soundInfo.channelCount))\n                ${msg.writeFloatToken}(m, 3, Math.round(toFloat(soundInfo.bitDepth) / 8))\n                ${msg.writeStringToken}(m, 4, soundInfo.endianness)\n                return m\n            `\n    ]),\n    dependencies: [\n        soundFileOpenOpts,\n        commonsArrays,\n        fsReadSoundFile,\n        fsWriteSoundFile,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => {\n        let prefix = 'print:';\n        if (pdNode.args.length === 1 && pdNode.args[0] === '-n') {\n            prefix = '';\n        }\n        else if (pdNode.args.length >= 1) {\n            prefix = pdNode.args.join(' ') + ':';\n        }\n        return { prefix };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {},\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    messageReceivers: ({ node: { args } }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            console.log(\"${args.prefix} \" + ${msg.display}(m))\n            return\n        `,\n    })\n};\n\nexport { builder, nodeImplementation };\n","import { ValidationError } from './validation.js';\nimport { Func, Var, ConstVar } from '../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\nconst TYPE_ARGUMENTS = [\n    'float',\n    'bang',\n    'symbol',\n    'list',\n    'anything',\n];\nconst resolveTypeArgumentAlias = (value) => {\n    switch (value) {\n        case 'f':\n            return 'float';\n        case 'b':\n            return 'bang';\n        case 's':\n            return 'symbol';\n        case 'l':\n            return 'list';\n        case 'a':\n            return 'anything';\n        case 'p':\n            return 'pointer';\n        default:\n            return value;\n    }\n};\nconst assertTypeArgument = (value) => {\n    if (value === 'pointer') {\n        throw new ValidationError(`\"pointer\" not supported (yet)`);\n    }\n    else if (!TYPE_ARGUMENTS.includes(value)) {\n        throw new ValidationError(`invalid type ${value}`);\n    }\n    return value;\n};\nconst renderMessageTransfer = (typeArgument, msgVariableName, index, { msg, bangUtils, tokenConversion }) => {\n    switch (typeArgument) {\n        case 'float':\n            return `${msg.floats}([${tokenConversion.toFloat}(${msgVariableName}, ${index})])`;\n        case 'bang':\n            return `${bangUtils.bang}()`;\n        case 'symbol':\n            return `${msg.strings}([${tokenConversion.toString_}(${msgVariableName}, ${index})])`;\n        case 'list':\n        case 'anything':\n            return `${msgVariableName}`;\n        default:\n            throw new Error(`type argument ${typeArgument} not supported (yet)`);\n    }\n};\nconst NAMESPACE = 'tokenConversion';\nconst messageTokenToFloat = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: tokenConversion }, { msg }) => Func(tokenConversion.toFloat, [\n        Var(msg.Message, `m`),\n        Var(`Int`, `i`)\n    ], 'Float') `\n        if (${msg.isFloatToken}(m, i)) {\n            return ${msg.readFloatToken}(m, i)\n        } else {\n            return 0\n        }\n    `\n};\nconst messageTokenToString = {\n    namespace: NAMESPACE,\n    // prettier-ignore\n    code: ({ ns: tokenConversion }, { msg }) => Func(tokenConversion.toString_, [\n        Var(msg.Message, `m`),\n        Var(`Int`, `i`)\n    ], 'string') `\n        if (${msg.isStringToken}(m, i)) {\n            ${ConstVar(`string`, `str`, `${msg.readStringToken}(m, i)`)}\n            if (str === 'bang') {\n                return 'symbol'\n            } else {\n                return str\n            }\n        } else {\n            return 'float'\n        }\n    `\n};\n\nexport { assertTypeArgument, messageTokenToFloat, messageTokenToString, renderMessageTransfer, resolveTypeArgumentAlias };\n","import { assertString } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, renderMessageTransfer, messageTokenToFloat, messageTokenToString } from '../type-arguments.js';\nimport { AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : \n// - pointer\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        typeArguments: args.length === 0 ? ['bang', 'bang'] : args\n            .map(assertString)\n            .map(resolveTypeArgumentAlias)\n            .map(assertTypeArgument),\n    }),\n    build: ({ typeArguments }) => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: mapArray(typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n    }),\n};\n// ---------------------------------- node implementation --------------------------------- //\nconst nodeImplementation = {\n    messageReceivers: ({ snds, node: { args: { typeArguments } } }, globals) => ({\n        '0': AnonFunc([\n            Var(globals.msg.Message, `m`)\n        ]) `\n            ${typeArguments.reverse().map((typeArg, i) => `${snds[typeArguments.length - i - 1]}(${renderMessageTransfer(typeArg, 'm', 0, globals)})`)}\n            return\n        `,\n    }),\n    dependencies: [\n        messageTokenToFloat,\n        messageTokenToString,\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { Class, Var, AnonFunc, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `currentValue`, args.initValue)\n    ]),\n    messageReceivers: ({ snds, state }, { bangUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${ConstVar(`Float`, `newValue`, `${msg.readFloatToken}(m, 0)`)}\n                if (newValue !== ${state}.currentValue) {\n                    ${state}.currentValue = newValue\n                    ${snds[0]}(${msg.floats}([${state}.currentValue]))\n                }\n                return\n    \n            } else if (${bangUtils.isBang}(m)) {\n                ${snds[0]}(${msg.floats}([${state}.currentValue]))\n                return \n    \n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'set'\n            ) {\n                ${state}.currentValue = ${msg.readFloatToken}(m, 1)\n                return\n            }\n        `,\n    }),\n    dependencies: [\n        bangUtils\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInlet } from '../standard-message-receivers.js';\nimport { Class, Var, AnonFunc, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        threshold: assertOptionalNumber(args[0]) || 0\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `threshold`, args.threshold),\n    ]),\n    messageReceivers: ({ snds, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${ConstVar(`Float`, `value`, `${msg.readFloatToken}(m, 0)`)}\n                if (value >= ${state}.threshold) {\n                    ${snds[1]}(${msg.floats}([value]))\n                } else {\n                    ${snds[0]}(${msg.floats}([value]))\n                }\n                return\n            }\n        `,\n        '1': coldFloatInlet(`${state}.threshold`, msg),\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInlet } from '../standard-message-receivers.js';\nimport { Class, Var, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        minValue: assertOptionalNumber(args[0]) || 0,\n        maxValue: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `minValue`, args.minValue),\n        Var(`Float`, `maxValue`, args.maxValue),\n    ]),\n    messageReceivers: ({ snds, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${snds[0]}(${msg.floats}([\n                    Math.max(\n                        Math.min(\n                            ${state}.maxValue, \n                            ${msg.readFloatToken}(m, 0)\n                        ), \n                        ${state}.minValue\n                    )\n                ]))\n                return\n            }\n        `,\n        '1': coldFloatInlet(`${state}.minValue`, msg),\n        '2': coldFloatInlet(`${state}.maxValue`, msg),\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo, renderSwitch } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { bangUtils, msgUtils } from '../global-code/core.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        filters: args.length ? args : [0],\n    }),\n    build: (args) => {\n        const inlets = {\n            '0': { type: 'message', id: '0' },\n        };\n        if (args.filters.length === 1) {\n            inlets['1'] = { type: 'message', id: '1' };\n        }\n        return {\n            inlets,\n            outlets: mapArray(args.filters.length ? countTo(args.filters.length + 1) : [0, 1], (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n        };\n    },\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }, { msg }) => Class(ns.State, [\n        Var(`Float`, `floatFilter`, typeof args.filters[0] === `number` ? args.filters[0] : 0),\n        Var(`string`, `stringFilter`, `\"${args.filters[0]}\"`),\n        Var(`Int`, `filterType`, typeof args.filters[0] === `number` ? msg.FLOAT_TOKEN : msg.STRING_TOKEN),\n    ]),\n    messageReceivers: ({ snds, state, node: { args } }, { msg, bangUtils, msgUtils }) => {\n        if (args.filters.length > 1) {\n            return {\n                '0': AnonFunc([Var(msg.Message, `m`)]) `\n                    ${args.filters.map((filter, i) => renderSwitch([filter === 'float', `\n                            if (${msg.isFloatToken}(m, 0)) {\n                                ${snds[i]}(m)\n                                return\n                            }\n                        `], [filter === 'symbol', `\n                            if (${msg.isStringToken}(m, 0)) {\n                                ${snds[i]}(m)\n                                return\n                            }\n                        `], [filter === 'list', `\n                            if (${msg.getLength}(m).length > 1) {\n                                ${snds[i]}(m)\n                                return\n                            }\n                        `], [filter === 'bang', `\n                            if (${bangUtils.isBang}(m)) {\n                                ${snds[i]}(m)\n                                return\n                            }\n                        `], [typeof filter === 'number', `\n                            if (\n                                ${msg.isFloatToken}(m, 0)\n                                && ${msg.readFloatToken}(m, 0) === ${filter}\n                            ) {\n                                ${snds[i]}(${bangUtils.emptyToBang}(${msgUtils.shift}(m)))\n                                return\n                            }\n                        `], [typeof filter === 'string', `\n                            if (\n                                ${msg.isStringToken}(m, 0) \n                                && ${msg.readStringToken}(m, 0) === \"${filter}\"\n                            ) {\n                                ${snds[i]}(${bangUtils.emptyToBang}(${msgUtils.shift}(m)))\n                                return\n                            }`\n                ]))}\n    \n                    ${snds[args.filters.length]}(m)\n                    return\n                `\n            };\n        }\n        else {\n            return {\n                '0': AnonFunc([Var(msg.Message, `m`)]) `\n                    if (${state}.filterType === ${msg.STRING_TOKEN}) {\n                        if (\n                            (${state}.stringFilter === 'float'\n                                && ${msg.isFloatToken}(m, 0))\n                            || (${state}.stringFilter === 'symbol'\n                                && ${msg.isStringToken}(m, 0))\n                            || (${state}.stringFilter === 'list'\n                                && ${msg.getLength}(m) > 1)\n                            || (${state}.stringFilter === 'bang' \n                                && ${bangUtils.isBang}(m))\n                        ) {\n                            ${snds.$0}(m)\n                            return\n                        \n                        } else if (\n                            ${msg.isStringToken}(m, 0)\n                            && ${msg.readStringToken}(m, 0) === ${state}.stringFilter\n                        ) {\n                            ${snds.$0}(${bangUtils.emptyToBang}(${msgUtils.shift}(m)))\n                            return\n                        }\n    \n                    } else if (\n                        ${msg.isFloatToken}(m, 0)\n                        && ${msg.readFloatToken}(m, 0) === ${state}.floatFilter\n                    ) {\n                        ${snds.$0}(${bangUtils.emptyToBang}(${msgUtils.shift}(m)))\n                        return\n                    }\n                \n                    ${snds.$1}(m)\n                return\n                `,\n                '1': AnonFunc([Var(msg.Message, `m`)]) `\n                    ${state}.filterType = ${msg.getTokenType}(m, 0)\n                    if (${state}.filterType === ${msg.STRING_TOKEN}) {\n                        ${state}.stringFilter = ${msg.readStringToken}(m, 0)\n                    } else {\n                        ${state}.floatFilter = ${msg.readFloatToken}(m, 0)\n                    }\n                    return\n                `\n            };\n        }\n    },\n    dependencies: [\n        bangUtils,\n        msgUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { Class, Var, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        isClosed: (assertOptionalNumber(args[0]) || 0) === 0\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `isClosed`, args.isClosed ? `true` : `false`)\n    ]),\n    messageReceivers: ({ ns, snds, state }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (!${state}.isClosed) {\n                ${snds.$0}(m)\n            }\n            return\n        `,\n        '1': coldFloatInletWithSetter(ns.setIsClosed, state, msg),\n    }),\n    core: ({ ns }) => Sequence([\n        Func(ns.setIsClosed, [\n            Var(ns.State, `state`),\n            Var(`Float`, `value`),\n        ], 'void') `\n                state.isClosed = (value === 0)\n            `\n    ]),\n};\n\nexport { builder, nodeImplementation };\n","import { bangUtils } from '../global-code/core.js';\nimport { Class, Var, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ ns }) => Class(ns.State, [\n        Var(`boolean`, `continueIter`, `true`)\n    ]),\n    messageReceivers: ({ snds, state }, { msg, bangUtils }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${state}.continueIter = true\n                while (${state}.continueIter) {\n                    ${snds[0]}(${bangUtils.bang}())\n                }\n                return\n    \n            } else if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                ${state}.continueIter = true\n                ${Var(`Int`, `maxIterCount`, `toInt(${msg.readFloatToken}(m, 0))`)}\n                ${Var(`Int`, `iterCount`, `0`)}\n                while (${state}.continueIter && iterCount++ < maxIterCount) {\n                    ${snds[0]}(${bangUtils.bang}())\n                }\n                return\n            }\n        `,\n        '1': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${state}.continueIter = false\n                return\n            }\n        `,\n    }),\n    dependencies: [\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { assertOptionalNumber } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { Class, Var, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : make seed work\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        maxValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Float`, `maxValue`, args.maxValue),\n    ]),\n    messageReceivers: ({ ns, snds, state }, { bangUtils, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (${bangUtils.isBang}(m)) {\n                ${snds['0']}(${msg.floats}([Math.floor(Math.random() * ${state}.maxValue)]))\n                return\n            } else if (\n                ${msg.isMatching}(m, [${msg.STRING_TOKEN}, ${msg.FLOAT_TOKEN}])\n                && ${msg.readStringToken}(m, 0) === 'seed'\n            ) {\n                console.log('WARNING : seed not implemented yet for [random]')\n                return\n            }\n        `,\n        '1': coldFloatInletWithSetter(ns.setMaxValue, state, msg),\n    }),\n    core: ({ ns }) => Sequence([\n        Func(ns.setMaxValue, [\n            Var(ns.State, `state`),\n            Var(`Float`, `maxValue`),\n        ], 'void') `\n                state.maxValue = Math.max(maxValue, 0)\n            `\n    ]),\n    dependencies: [\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, ast, AnonFunc, ConstVar, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, countTo } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsWaitFrame } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { assertNumber } from '../validation.js';\nimport { bangUtils, actionUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, renderMessageTransfer, messageTokenToFloat, messageTokenToString } from '../type-arguments.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => {\n        let delay = 0;\n        if (args.length >= 1) {\n            delay = assertNumber(args[args.length - 1]);\n            args = args.slice(0, -1);\n        }\n        args = args.length ? args : [0];\n        return {\n            typeArguments: args.map(resolveTypeArgumentAlias)\n                .map(value => [\n                typeof value === 'number' ? 'float' : assertTypeArgument(value),\n                typeof value === 'number' ? value : value === 'float' ? 0 : 'symbol'\n            ]),\n            delay\n        };\n    },\n    build: (args) => ({\n        inlets: {\n            ...mapArray(args.typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n            [`${args.typeArguments.length}`]: {\n                type: 'message',\n                id: `${args.typeArguments.length}`\n            },\n        },\n        outlets: mapArray(args.typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }, { msg }) => Class(ns.State, [\n        Var(`Int`, `delay`, 0),\n        Var(`Array<${msg.Message}>`, `outputMessages`, `[${args.typeArguments\n            .map(([_, value]) => typeof value === 'number' ?\n            `${msg.floats}([${value}])`\n            : `${msg.strings}([\"${value}\"])`).join(',')}]`),\n        Var(`Array<${ns.ScheduledMessage}>`, `scheduledMessages`, `[]`),\n        Var(`Array<${msg.Handler}>`, `snds`, `[]`),\n    ]),\n    initialization: ({ ns, node: { args }, state, snds }) => ast `\n            ${ns.setDelay}(${state}, ${args.delay})\n            ${state}.snds = [${countTo(args.typeArguments.length)\n        .reverse()\n        .map((i) => snds[i]).join(', ')}]\n        `,\n    messageReceivers: ({ ns, node: { args }, state, }, globals) => {\n        const { bangUtils, actionUtils, msg, core, } = globals;\n        return {\n            '0': AnonFunc([Var(msg.Message, `m`)]) `\n                if (${actionUtils.isAction}(m, 'clear')) {\n                    ${ns.clear}(${state})\n                    return \n        \n                } else if (${actionUtils.isAction}(m, 'flush')) {\n                    if (${state}.scheduledMessages.length) {\n                        ${ns.sendMessages}(\n                            ${state}, \n                            ${state}.scheduledMessages[${state}.scheduledMessages.length - 1].frame\n                        )\n                    }\n                    return\n        \n                } else {\n                    ${ConstVar(msg.Message, `inMessage`, `${bangUtils.isBang}(m) ? ${msg.create}([]): m`)}\n                    ${ConstVar(`Int`, `insertIndex`, `${ns.prepareMessageScheduling}(\n                        ${state}, \n                        () => {\n                            ${ns.sendMessages}(${state}, ${core.FRAME})\n                        },\n                    )`)}\n        \n                    ${args.typeArguments.slice(0).reverse()\n                .map(([typeArg], i) => [args.typeArguments.length - i - 1, typeArg])\n                .map(([iReverse, typeArg], i) => ast `\n                                if (${msg.getLength}(inMessage) > ${iReverse}) {\n                                    ${state}.scheduledMessages[insertIndex + ${i}].message = \n                                        ${renderMessageTransfer(typeArg, 'inMessage', iReverse, globals)}\n                                    ${state}.outputMessages[${iReverse}] \n                                        = ${state}.scheduledMessages[insertIndex + ${i}].message\n                                } else {\n                                    ${state}.scheduledMessages[insertIndex + ${i}].message \n                                        = ${state}.outputMessages[${iReverse}]\n                                }\n                            `)}\n        \n                    return\n                }\n            `,\n            ...mapArray(args.typeArguments.slice(1), ([typeArg], i) => [\n                `${i + 1}`,\n                AnonFunc([Var(msg.Message, `m`)]) `\n                        ${state}.outputMessages[${i + 1}] = ${renderMessageTransfer(typeArg, 'm', 0, globals)}\n                        return\n                    `\n            ]),\n            [args.typeArguments.length]: coldFloatInletWithSetter(ns.setDelay, state, msg)\n        };\n    },\n    core: ({ ns }, { msg, sked, core, commons }) => Sequence([\n        Class(ns.ScheduledMessage, [\n            Var(msg.Message, `message`),\n            Var(`Int`, `frame`),\n            Var(sked.Id, `skedId`),\n        ]),\n        ConstVar(ns.ScheduledMessage, ns.dummyScheduledMessage, `{\n                message: ${msg.create}([]),\n                frame: 0,\n                skedId: ${sked.ID_NULL},\n            }`),\n        Func(ns.prepareMessageScheduling, [\n            Var(ns.State, `state`),\n            Var(sked.Callback, `callback`),\n        ], 'Int') `\n                ${Var(`Int`, `insertIndex`, `0`)}\n                ${Var(`Int`, `frame`, `${core.FRAME} + state.delay`)}\n                ${Var(sked.Id, `skedId`, sked.ID_NULL)}\n        \n                while (\n                    insertIndex < state.scheduledMessages.length \n                    && state.scheduledMessages[insertIndex].frame <= frame\n                ) {\n                    insertIndex++\n                }\n        \n                ${''\n        // If there was not yet a callback scheduled for that frame, we schedule it.\n        }\n                if (\n                    insertIndex === 0 || \n                    (\n                        insertIndex > 0 \n                        && state.scheduledMessages[insertIndex - 1].frame !== frame\n                    )\n                ) {\n                    skedId = ${commons.waitFrame}(frame, callback)\n                }\n        \n                ${''\n        // !!! Array.splice insertion is not supported by assemblyscript, so : \n        // 1. We grow arrays to their post-insertion size by using `push`\n        // 2. We use `copyWithin` to move old elements to their final position.\n        // 3. Instantiate new messages in the newly created holes.\n        }\n                for (${Var(`Int`, `i`, 0)}; i < state.snds.length; i++) {\n                    state.scheduledMessages.push(${ns.dummyScheduledMessage})\n                }\n                state.scheduledMessages.copyWithin(\n                    (insertIndex + 1) * state.snds.length, \n                    insertIndex * state.snds.length\n                )\n                for (${Var(`Int`, `i`, 0)}; i < state.snds.length; i++) {\n                    state.scheduledMessages[insertIndex + i] = {\n                        message: ${ns.dummyScheduledMessage}.message,\n                        frame,\n                        skedId,\n                    }\n                }\n        \n                return insertIndex\n            `,\n        Func(ns.sendMessages, [\n            Var(ns.State, `state`),\n            Var(`Int`, `toFrame`),\n        ], 'void') `\n                ${Var(`Int`, `i`, 0)}\n                while (\n                    state.scheduledMessages.length \n                    && state.scheduledMessages[0].frame <= toFrame\n                ) {\n                    for (i = 0; i < state.snds.length; i++) {\n                        // Snds are already reversed\n                        state.snds[i](state.scheduledMessages.shift().message)\n                    }\n                }\n            `,\n        Func(ns.clear, [\n            Var(ns.State, `state`),\n        ], 'void') `\n                ${Var(`Int`, `i`, `0`)}\n                ${ConstVar(`Int`, `length`, `state.scheduledMessages.length`)}\n                for (i; i < length; i++) {\n                    ${commons.cancelWaitFrame}(state.scheduledMessages[i].skedId)\n                }\n                state.scheduledMessages = []\n            `,\n        Func(ns.setDelay, [\n            Var(ns.State, `state`),\n            Var(`Float`, `delay`),\n        ], 'void') `\n                state.delay = toInt(Math.round(delay / 1000 * ${core.SAMPLE_RATE}))\n            `,\n    ]),\n    dependencies: [\n        messageTokenToFloat,\n        messageTokenToString,\n        bangUtils,\n        actionUtils,\n        commonsWaitFrame,\n    ],\n};\n\nexport { builder, nodeImplementation };\n","import { Class, Var, AnonFunc, ConstVar } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, messageTokenToString, messageTokenToFloat } from '../type-arguments.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        typeArguments: (args.length ? args : ['float', 'float']).map(resolveTypeArgumentAlias)\n            // Not sure why but 'bang' is supported as a creation argument, \n            // but turned into a float.\n            .map(typeArg => {\n            // Assign default value\n            typeArg = typeArg || 'float';\n            if (typeArg === 'bang') {\n                typeArg = 'float';\n            }\n            if (typeof typeArg === 'number') {\n                return typeArg;\n            }\n            else if (!['float', 'symbol'].includes(typeArg)) {\n                throw new Error(`${typeArg} not supported (yet)`);\n            }\n            return typeArg;\n        })\n            .map(value => [\n            typeof value === 'number' ? 'float' : assertTypeArgument(value),\n            typeof value === 'number' ? value : value === 'float' ? 0 : 'symbol'\n        ]),\n    }),\n    build: ({ typeArguments }) => ({\n        inlets: mapArray(typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Array<Float>`, `floatValues`, `[${args.typeArguments.map(([typeArg, defaultValue]) => typeArg === 'float' ? defaultValue : 0).join(',')}]`),\n        Var(`Array<string>`, `stringValues`, `[${args.typeArguments.map(([typeArg, defaultValue]) => typeArg === 'symbol' ? `\"${defaultValue}\"` : '\"\"').join(',')}]`),\n    ]),\n    messageReceivers: ({ snds, state, node }, { bangUtils, tokenConversion, msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            if (!${bangUtils.isBang}(m)) {\n                for (${Var(`Int`, `i`, `0`)}; i < ${msg.getLength}(m); i++) {\n                    ${state}.stringValues[i] = ${tokenConversion.toString_}(m, i)\n                    ${state}.floatValues[i] = ${tokenConversion.toFloat}(m, i)\n                }\n            }\n    \n            ${ConstVar(msg.Template, `template`, `[${node.args.typeArguments.map(([typeArg], i) => typeArg === 'symbol' ?\n            `${msg.STRING_TOKEN}, ${state}.stringValues[${i}].length`\n            : `${msg.FLOAT_TOKEN}`).join(',')}]`)}\n    \n            ${ConstVar(msg.Message, `messageOut`, `${msg.create}(template)`)}\n    \n            ${node.args.typeArguments.map(([typeArg], i) => typeArg === 'symbol' ?\n            `${msg.writeStringToken}(messageOut, ${i}, ${state}.stringValues[${i}])`\n            : `${msg.writeFloatToken}(messageOut, ${i}, ${state}.floatValues[${i}])`)}\n    \n            ${snds[0]}(messageOut)\n            return\n        `,\n        ...mapArray(node.args.typeArguments.slice(1), ([typeArg], i) => {\n            if (typeArg === 'symbol') {\n                return [\n                    `${i + 1}`,\n                    AnonFunc([Var(msg.Message, `m`)]) `\n                        ${state}.stringValues[${i + 1}] = ${tokenConversion.toString_}(m, 0)\n                        return\n                    `\n                ];\n            }\n            else if (typeArg === 'float') {\n                return [\n                    `${i + 1}`,\n                    AnonFunc([Var(msg.Message, `m`)]) `\n                        ${state}.floatValues[${i + 1}] = ${tokenConversion.toFloat}(m, 0)\n                        return\n                    `\n                ];\n            }\n            else {\n                throw new Error(`Unsupported type argument ${typeArg}`);\n            }\n        }),\n    }),\n    dependencies: [\n        messageTokenToString,\n        messageTokenToFloat,\n        bangUtils,\n    ]\n};\n\nexport { builder, nodeImplementation };\n","import { AnonFunc, Var } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray, renderSwitch } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { resolveTypeArgumentAlias } from '../type-arguments.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        typeArguments: args.length === 0 ? ['float', 'float'] : args\n            .map(resolveTypeArgumentAlias)\n            .map(arg => {\n            if (typeof arg === 'number') {\n                return 'float';\n            }\n            else if (arg === 'symbol' || arg === 'float') {\n                return arg;\n            }\n            else {\n                throw new Error(`Invalid type argument for unpack \"${arg}\"`);\n            }\n        }),\n    }),\n    build: ({ typeArguments }) => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: mapArray(typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst nodeImplementation = {\n    messageReceivers: ({ snds, node: { args } }, { msg }) => ({\n        '0': AnonFunc([Var(msg.Message, `m`)]) `\n            ${args.typeArguments.map((t, i) => [t, i]).reverse().map(([t, reversedI]) => `\n                    if (\n                        ${msg.getLength}(m) >= ${reversedI + 1}\n                    ) {\n                        if (${msg.getTokenType}(m, ${reversedI}) === ${t === 'float' ? msg.FLOAT_TOKEN : msg.STRING_TOKEN}) {\n                            ${renderSwitch([t === 'float', `${snds[reversedI]}(${msg.floats}([${msg.readFloatToken}(m, ${reversedI})]))`], [t === 'symbol', `${snds[reversedI]}(${msg.strings}([${msg.readStringToken}(m, ${reversedI})]))`])}\n                        } else {\n                            console.log('unpack : invalid token type index ${reversedI}')\n                        }\n                    }\n                `)}\n            return\n        `,\n    }),\n};\n\nexport { builder, nodeImplementation };\n","import { Sequence, Class, Var, ast, AnonFunc } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport { mapArray } from '../../../../WebPd_compiler/dist/src/functional-helpers.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport { commonsArrays } from '../../../../WebPd_compiler/dist/src/stdlib/commons/commons.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { roundFloatAsPdInt } from '../global-code/numbers.js';\nimport { messageTokenToString, messageTokenToFloat } from '../type-arguments.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// TODO : Implement if (`if(<test>, <then>, <else>)`)\n// TODO : [expr random(0, 10000)] fails (no inlet), and random function doesn't exist\n// ------------------------------- node builder ------------------------------ //\nconst builderExpr = {\n    translateArgs: ({ args }) => ({\n        tokenizedExpressions: preprocessExpression(args).map(tokenizeExpression),\n    }),\n    build: (args) => ({\n        inlets: mapArray(validateAndListInputsExpr(args.tokenizedExpressions), ({ id }) => [`${id}`, { type: 'message', id: `${id}` }]),\n        outlets: mapArray(args.tokenizedExpressions, (_, i) => [\n            `${i}`,\n            { type: 'message', id: `${i}` },\n        ]),\n    }),\n};\nconst builderExprTilde = {\n    translateArgs: ({ args }) => ({\n        tokenizedExpressions: preprocessExpression(args).map(tokenizeExpression),\n    }),\n    build: (args) => ({\n        inlets: mapArray(validateAndListInputsExprTilde(args.tokenizedExpressions), ({ id, type }) => [\n            `${id}`,\n            { type: type === 'signal' ? 'signal' : 'message', id: `${id}` },\n        ]),\n        outlets: mapArray(args.tokenizedExpressions, (_, i) => [\n            `${i}`,\n            { type: 'signal', id: `${i}` },\n        ]),\n    }),\n};\n// ------------------------------- node implementation ------------------------------ //\nconst sharedNodeImplementation = () => ({\n    state: ({ node: { args }, ns }) => Class(ns.State, [\n        Var(`Map<Int, Float>`, `floatInputs`, `new Map()`),\n        Var(`Map<Int, string>`, `stringInputs`, `new Map()`),\n        Var(`Array<Float>`, `outputs`, `new Array(${args.tokenizedExpressions.length})`),\n    ]),\n    initialization: ({ node: { args, type }, state }) => {\n        const inputs = type === 'expr' ?\n            validateAndListInputsExpr(args.tokenizedExpressions)\n            : validateAndListInputsExprTilde(args.tokenizedExpressions)\n                .filter(({ type }) => type !== 'signal');\n        return ast `\n            ${inputs.filter(input => input.type === 'float' || input.type === 'int')\n            .map(input => `${state}.floatInputs.set(${input.id}, 0)`)}\n            ${inputs.filter(input => input.type === 'string')\n            .map(input => `${state}.stringInputs.set(${input.id}, '')`)}\n        `;\n    },\n    messageReceivers: ({ snds, state, node: { args, type }, }, globals) => {\n        const { bangUtils, tokenConversion, msg } = globals;\n        const inputs = type === 'expr' ?\n            validateAndListInputsExpr(args.tokenizedExpressions)\n            : validateAndListInputsExprTilde(args.tokenizedExpressions)\n                .filter(({ type }) => type !== 'signal');\n        const hasInput0 = inputs.length && inputs[0].id === 0;\n        return {\n            '0': AnonFunc([\n                Var(msg.Message, `m`)\n            ]) `\n                if (!${bangUtils.isBang}(m)) {\n                    for (${Var(`Int`, `i`, `0`)}; i < ${msg.getLength}(m); i++) {\n                        ${state}.stringInputs.set(i, ${tokenConversion.toString_}(m, i))\n                        ${state}.floatInputs.set(i, ${tokenConversion.toFloat}(m, i))\n                    }\n                }\n    \n                ${type === 'expr' ? `\n                    ${args.tokenizedExpressions.map((tokens, i) => `${state}.outputs[${i}] = ${renderTokenizedExpression(state, null, tokens, globals)}`)}\n            \n                    ${args.tokenizedExpressions.map((_, i) => `${snds[`${i}`]}(${msg.floats}([${state}.outputs[${i}]]))`)}\n                ` : null}\n                \n                return\n            `,\n            ...mapArray(inputs.slice(hasInput0 ? 1 : 0), ({ id, type }) => {\n                if (type === 'float' || type === 'int') {\n                    return [\n                        `${id}`,\n                        AnonFunc([Var(msg.Message, `m`)]) `\n                                ${state}.floatInputs.set(${id}, ${tokenConversion.toFloat}(m, 0))\n                                return\n                            `\n                    ];\n                }\n                else if (type === 'string') {\n                    return [\n                        `${id}`,\n                        AnonFunc([Var(msg.Message, `m`)]) `\n                                ${state}.stringInputs.set(${id}, ${tokenConversion.toString_}(m, 0))\n                                return\n                            `\n                    ];\n                }\n                else {\n                    throw new Error(`invalid input type ${type}`);\n                }\n            })\n        };\n    },\n    dependencies: [\n        messageTokenToString,\n        messageTokenToFloat,\n        roundFloatAsPdInt,\n        bangUtils,\n        commonsArrays,\n    ],\n});\nconst nodeImplementationExpr = sharedNodeImplementation();\nconst nodeImplementationExprTilde = {\n    ...sharedNodeImplementation(),\n    flags: {\n        alphaName: 'expr_t',\n    },\n    dsp: ({ node: { args }, state, outs, ins, }, globals) => Sequence(args.tokenizedExpressions.map((tokens, i) => `${outs[i]} = ${renderTokenizedExpression(state, ins, tokens, globals)}`)),\n};\n// ------------------------------------------------------------------- //\n// NOTE: Normally we'd use named regexp capturing groups, but that causes problems with \n// create-react-app which uses a babel plugin to remove them.\nconst TOKENIZE_REGEXP = /(?<f>\\$f(?<id_f>[0-9]+))|(?<v>\\$v(?<id_v>[0-9]+))|(?<i>\\$i(?<id_i>[0-9]+))|(?<s>\\$s(?<id_s>[0-9]+)\\s*\\[(?<sIndex>[^\\[\\]]*)\\])/;\nconst tokenizeExpression = (expression) => {\n    let match;\n    let tokens = [];\n    while (match = TOKENIZE_REGEXP.exec(expression)) {\n        if (match.index) {\n            tokens.push({\n                type: 'raw',\n                content: expression.slice(0, match.index)\n            });\n        }\n        if (match[1]) {\n            tokens.push({\n                type: 'float',\n                id: parseInt(match[2]) - 1,\n            });\n        }\n        else if (match[3]) {\n            tokens.push({\n                type: 'signal',\n                id: parseInt(match[4]) - 1,\n            });\n        }\n        else if (match[5]) {\n            tokens.push({\n                type: 'int',\n                id: parseInt(match[6]) - 1,\n            });\n            // Symbols in an expr are used normally only to index an array.\n            // Since we need to cast to an int to index an array, we need \n            // to wrap the indexing expression with a cast to int :\n            // $s1[$i1 + 2] -> $s1[toInt($i1 + 2)]\n        }\n        else if (match[7]) {\n            tokens = [\n                ...tokens,\n                {\n                    type: 'string',\n                    id: parseInt(match[8]) - 1,\n                },\n                {\n                    type: 'indexing-start'\n                },\n                ...tokenizeExpression(match[9]),\n                {\n                    type: 'indexing-end'\n                },\n            ];\n        }\n        expression = expression.slice(match.index + match[0].length);\n    }\n    if (expression.length) {\n        tokens.push({\n            type: 'raw',\n            content: expression\n        });\n    }\n    return tokens;\n};\nconst renderTokenizedExpression = (state, ins, tokens, { numbers, commons }) => \n// Add '+(' to convert for example boolean output to float\n'+(' + tokens.map(token => {\n    switch (token.type) {\n        case 'float':\n            return `${state}.floatInputs.get(${token.id})`;\n        case 'signal':\n            if (ins === null) {\n                throw new Error(`invalid token signal received`);\n            }\n            return ins[token.id];\n        case 'int':\n            return `${numbers.roundFloatAsPdInt}(${state}.floatInputs.get(${token.id}))`;\n        case 'string':\n            return `${commons.getArray}(${state}.stringInputs.get(${token.id}))`;\n        case 'indexing-start':\n            return '[toInt(';\n        case 'indexing-end':\n            return ')]';\n        case 'raw':\n            return token.content;\n    }\n}).join('') + ')';\nconst listInputs = (tokenizedExpressions) => {\n    const inputs = [];\n    tokenizedExpressions.forEach(tokenizedExpression => {\n        tokenizedExpression.forEach(token => {\n            if (token.type === 'float'\n                || token.type === 'signal'\n                || token.type === 'int'\n                || token.type === 'string') {\n                inputs.push(token);\n            }\n        });\n    });\n    // Sort so that input 0 appears first if it exists\n    inputs.sort(({ id: i1 }, { id: i2 }) => i1 - i2);\n    const inputsMap = new Map();\n    return inputs.filter(token => {\n        if (inputsMap.has(token.id)) {\n            if (inputsMap.get(token.id).type !== token.type) {\n                throw new Error(`contradictory definitions for input ${token.id}`);\n            }\n            return false;\n        }\n        else {\n            inputsMap.set(token.id, token);\n            return true;\n        }\n    });\n};\nconst validateAndListInputsExpr = (tokenizedExpressions) => {\n    const inputs = listInputs(tokenizedExpressions);\n    inputs.forEach(input => {\n        if (input.type === 'signal') {\n            throw new Error(`invalid signal token $v# for [expr]`);\n        }\n    });\n    return inputs;\n};\nconst validateAndListInputsExprTilde = (tokenizedExpressions) => {\n    return listInputs(tokenizedExpressions);\n};\nconst preprocessExpression = (args) => {\n    let expression = args.join(' ');\n    // Get all Math functions from the expression and prefix them with `Math.`\n    Object.getOwnPropertyNames(Math).forEach(funcName => {\n        expression = expression.replaceAll(funcName, `Math.${funcName}`);\n    });\n    // Split the several outputs from the expression\n    return expression.split(';')\n        .map(expression => expression.trim());\n};\nconst nodeImplementations = {\n    expr: nodeImplementationExpr,\n    'expr~': nodeImplementationExprTilde,\n};\nconst builders = {\n    'expr': builderExpr,\n    'expr~': builderExprTilde,\n};\n\nexport { TOKENIZE_REGEXP, builders, listInputs, nodeImplementations, renderTokenizedExpression, tokenizeExpression };\n","import { assertOptionalNumber } from '../validation.js';\nimport { bangUtils } from '../global-code/core.js';\nimport { coldFloatInletWithSetter } from '../standard-message-receivers.js';\nimport { pow } from '../global-code/funcs.js';\nimport { Class, Var, ast, AnonFunc, Sequence, Func } from '../../../../WebPd_compiler/dist/src/ast/declare.js';\nimport '../../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ------------------------------- node builder ------------------------------ //\nconst makeBuilder = (defaultValue) => ({\n    translateArgs: (pdNode) => {\n        const value = assertOptionalNumber(pdNode.args[0]);\n        return {\n            value: value !== undefined ? value : defaultValue,\n        };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n});\n// ------------------------------- node implementation ------------------------------ //\n// prettier-ignore\nconst makeNodeImplementation = ({ operationName, generateOperation, dependencies = [], prepareLeftOp, prepareRightOp, }) => {\n    return {\n        flags: {\n            alphaName: operationName,\n        },\n        state: ({ ns }) => Class(ns.State, [\n            Var(`Float`, `leftOp`, 0),\n            Var(`Float`, `rightOp`, 0)\n        ]),\n        initialization: ({ ns, state, node: { args } }) => ast `\n            ${ns.setLeft}(${state}, 0)\n            ${ns.setRight}(${state}, ${args.value})\n        `,\n        messageReceivers: ({ ns, state, snds }, globals) => {\n            const { bangUtils, msg } = globals;\n            return {\n                '0': AnonFunc([Var(msg.Message, `m`)]) `\n                    if (${msg.isMatching}(m, [${msg.FLOAT_TOKEN}])) {\n                        ${ns.setLeft}(${state}, ${msg.readFloatToken}(m, 0))\n                        ${snds.$0}(${msg.floats}([${generateOperation(state, globals)}]))\n                        return\n                    \n                    } else if (${bangUtils.isBang}(m)) {\n                        ${snds.$0}(${msg.floats}([${generateOperation(state, globals)}]))\n                        return\n                    }\n                `,\n                '1': coldFloatInletWithSetter(ns.setRight, state, msg),\n            };\n        },\n        core: ({ ns }) => Sequence([\n            Func(ns.setLeft, [\n                Var(ns.State, `state`),\n                Var(`Float`, `value`),\n            ], 'void') `\n                    state.leftOp = ${prepareLeftOp ? prepareLeftOp : 'value'}\n                `,\n            Func(ns.setRight, [\n                Var(ns.State, `state`),\n                Var(`Float`, `value`),\n            ], 'void') `\n                    state.rightOp = ${prepareRightOp ? prepareRightOp : 'value'}\n                `,\n        ]),\n        dependencies: [\n            bangUtils,\n            ...dependencies,\n        ],\n    };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    '+': makeNodeImplementation({\n        operationName: 'add',\n        generateOperation: (state) => `${state}.leftOp + ${state}.rightOp`,\n    }),\n    '-': makeNodeImplementation({\n        operationName: 'sub',\n        generateOperation: (state) => `${state}.leftOp - ${state}.rightOp`,\n    }),\n    '*': makeNodeImplementation({\n        operationName: 'mul',\n        generateOperation: (state) => `${state}.leftOp * ${state}.rightOp`,\n    }),\n    '/': makeNodeImplementation({\n        operationName: 'div',\n        generateOperation: (state) => `${state}.rightOp !== 0 ? ${state}.leftOp / ${state}.rightOp: 0`,\n    }),\n    max: makeNodeImplementation({\n        operationName: 'max',\n        generateOperation: (state) => `Math.max(${state}.leftOp, ${state}.rightOp)`,\n    }),\n    min: makeNodeImplementation({\n        operationName: 'min',\n        generateOperation: (state) => `Math.min(${state}.leftOp, ${state}.rightOp)`,\n    }),\n    mod: makeNodeImplementation({\n        operationName: 'mod',\n        prepareLeftOp: `value > 0 ? Math.floor(value): Math.ceil(value)`,\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        // Modulo in Pd works so that negative values passed to the [mod] function cycle seamlessly :\n        // -3 % 3 = 0 ; -2 % 3 = 1 ; -1 % 3 = 2 ; 0 % 3 = 0 ; 1 % 3 = 1 ; ...\n        // So we need to translate the leftOp so that it is > 0 in order for the javascript % function to work.\n        generateOperation: (state) => `${state}.rightOp !== 0 ? (${state}.rightOp + (${state}.leftOp % ${state}.rightOp)) % ${state}.rightOp: 0`,\n    }),\n    // Legacy modulo\n    '%': makeNodeImplementation({\n        operationName: 'modlegacy',\n        generateOperation: (state) => `${state}.leftOp % ${state}.rightOp`,\n    }),\n    pow: makeNodeImplementation({\n        operationName: 'pow',\n        generateOperation: (state, { funcs }) => `${funcs.pow}(${state}.leftOp, ${state}.rightOp)`,\n        dependencies: [pow],\n    }),\n    log: makeNodeImplementation({\n        operationName: 'log',\n        generateOperation: (state) => `Math.log(${state}.leftOp) / Math.log(${state}.rightOp)`,\n    }),\n    '||': makeNodeImplementation({\n        operationName: 'or',\n        prepareLeftOp: `Math.floor(Math.abs(value))`,\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        generateOperation: (state) => `${state}.leftOp || ${state}.rightOp ? 1: 0`,\n    }),\n    '&&': makeNodeImplementation({\n        operationName: 'and',\n        prepareLeftOp: `Math.floor(Math.abs(value))`,\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        generateOperation: (state) => `${state}.leftOp && ${state}.rightOp ? 1: 0`,\n    }),\n    '>': makeNodeImplementation({\n        operationName: 'gt',\n        generateOperation: (state) => `${state}.leftOp > ${state}.rightOp ? 1: 0`,\n    }),\n    '>=': makeNodeImplementation({\n        operationName: 'gte',\n        generateOperation: (state) => `${state}.leftOp >= ${state}.rightOp ? 1: 0`,\n    }),\n    '<': makeNodeImplementation({\n        operationName: 'lt',\n        generateOperation: (state) => `${state}.leftOp < ${state}.rightOp ? 1: 0`,\n    }),\n    '<=': makeNodeImplementation({\n        operationName: 'lte',\n        generateOperation: (state) => `${state}.leftOp <= ${state}.rightOp ? 1: 0`,\n    }),\n    '==': makeNodeImplementation({\n        operationName: 'eq',\n        generateOperation: (state) => `${state}.leftOp == ${state}.rightOp ? 1: 0`,\n    }),\n    '!=': makeNodeImplementation({\n        operationName: 'neq',\n        generateOperation: (state) => `${state}.leftOp != ${state}.rightOp ? 1: 0`,\n    }),\n};\nconst builders = {\n    '+': makeBuilder(0),\n    '-': makeBuilder(0),\n    '*': makeBuilder(1),\n    '/': makeBuilder(1),\n    max: makeBuilder(0),\n    min: makeBuilder(1),\n    mod: makeBuilder(0),\n    '%': makeBuilder(0),\n    pow: makeBuilder(0),\n    log: makeBuilder(Math.E),\n    '||': makeBuilder(0),\n    '&&': makeBuilder(0),\n    '>': makeBuilder(0),\n    '>=': makeBuilder(0),\n    '<': makeBuilder(0),\n    '<=': makeBuilder(0),\n    '==': makeBuilder(0),\n    '!=': makeBuilder(0),\n};\n\nexport { builders, nodeImplementations };\n","import { nodeBuilders } from './nodes/subpatch.js';\nimport { builder as builder$7, nodeImplementation as nodeImplementation$7 } from './nodes/dac~.js';\nimport { builder as builder$8, nodeImplementation as nodeImplementation$8 } from './nodes/adc~.js';\nimport { builder as builder$9, nodeImplementation as nodeImplementation$9 } from './nodes/samplerate~.js';\nimport { builders as builders$2, nodeImplementations as nodeImplementations$2 } from './nodes/osc~-phasor~.js';\nimport { builder as builder$4, nodeImplementation as nodeImplementation$4 } from './nodes/clip~.js';\nimport { builder as builder$2, nodeImplementation as nodeImplementation$2 } from './nodes/sig~.js';\nimport { builder as builder$3, nodeImplementation as nodeImplementation$3 } from './nodes/samphold~.js';\nimport { builder as builder$1, nodeImplementation as nodeImplementation$1 } from './nodes/snapshot~.js';\nimport { builder as builder$5, nodeImplementation as nodeImplementation$5 } from './nodes/vline~.js';\nimport { builder as builder$6, nodeImplementation as nodeImplementation$6 } from './nodes/line~.js';\nimport { builder as builder$D, nodeImplementation as nodeImplementation$D } from './nodes/line.js';\nimport { builders as builders$1, nodeImplementations as nodeImplementations$1 } from './nodes/funcs~.js';\nimport { builder as builder$F, nodeImplementation as nodeImplementation$E } from './nodes/tabread.js';\nimport { builder as builder$G, nodeImplementation as nodeImplementation$F } from './nodes/tabwrite.js';\nimport { builder as builder$b, nodeImplementation as nodeImplementation$b } from './nodes/tabwrite~.js';\nimport { builders as builders$8, nodeImplementations as nodeImplementations$8 } from './nodes/tabread~-tabread4~.js';\nimport { builder as builder$a, nodeImplementation as nodeImplementation$a } from './nodes/tabplay~.js';\nimport { builder as builder$c, nodeImplementation as nodeImplementation$c } from './nodes/readsf~.js';\nimport { builder as builder$d, nodeImplementation as nodeImplementation$d } from './nodes/writesf~.js';\nimport { builder as builder$e, nodeImplementation as nodeImplementation$f } from './nodes/filters-bp~.js';\nimport { builders as builders$6, nodeImplementations as nodeImplementations$6 } from './nodes/throw~-catch~-send~-receive~.js';\nimport { builder as builder$A, nodeImplementation as nodeImplementation$A } from './nodes/metro.js';\nimport { builder as builder$B, nodeImplementation as nodeImplementation$B } from './nodes/timer.js';\nimport { builder as builder$C, nodeImplementation as nodeImplementation$C } from './nodes/delay.js';\nimport { builders as builders$9, nodeImplementations as nodeImplementations$9 } from './nodes/controls-float.js';\nimport { builder as builder$j, nodeImplementation as nodeImplementation$j } from './nodes/controls-bang.js';\nimport { builders as builders$a, nodeImplementations as nodeImplementations$a } from './nodes/controls-atoms.js';\nimport { builder as builder$m, nodeImplementation as nodeImplementation$m } from './nodes/loadbang.js';\nimport { builders as builders$d, nodeImplementations as nodeImplementations$c } from './nodes/float-int.js';\nimport { builders as builders$c, nodeImplementations as nodeImplementations$d } from './nodes/funcs.js';\nimport { builders, nodeImplementations } from './nodes/binop~.js';\nimport { builder, nodeImplementation } from './nodes/noise~.js';\nimport { builders as builders$5, nodeImplementations as nodeImplementations$5 } from './nodes/delread~-delread4~.js';\nimport { builder as builder$i, nodeImplementation as nodeImplementation$e } from './nodes/delwrite~.js';\nimport { builders as builders$3, nodeImplementations as nodeImplementations$3 } from './nodes/filters-real~.js';\nimport { builders as builders$4, nodeImplementations as nodeImplementations$4 } from './nodes/filters-complex~.js';\nimport { builder as builder$f, nodeImplementation as nodeImplementation$g } from './nodes/filters-hip~.js';\nimport { builder as builder$g, nodeImplementation as nodeImplementation$h } from './nodes/filters-lop~.js';\nimport { builder as builder$h, nodeImplementation as nodeImplementation$i } from './nodes/filters-vcf~.js';\nimport { builder as builder$z, nodeImplementation as nodeImplementation$z } from './nodes/msg.js';\nimport { builder as builder$k, nodeImplementation as nodeImplementation$k } from './nodes/list.js';\nimport { builder as builder$l, nodeImplementation as nodeImplementation$l } from './nodes/symbol.js';\nimport { builders as builders$7, nodeImplementations as nodeImplementations$7 } from './nodes/send-receive.js';\nimport { builder as builder$E, nodeImplementation as nodeImplementation$G } from './nodes/soundfiler.js';\nimport { builder as builder$n, nodeImplementation as nodeImplementation$n } from './nodes/print.js';\nimport { builder as builder$o, nodeImplementation as nodeImplementation$o } from './nodes/trigger.js';\nimport { builder as builder$p, nodeImplementation as nodeImplementation$p } from './nodes/change.js';\nimport { builder as builder$s, nodeImplementation as nodeImplementation$s } from './nodes/moses.js';\nimport { builder as builder$q, nodeImplementation as nodeImplementation$q } from './nodes/clip.js';\nimport { builder as builder$y, nodeImplementation as nodeImplementation$x } from './nodes/route.js';\nimport { builder as builder$v, nodeImplementation as nodeImplementation$v } from './nodes/spigot.js';\nimport { builder as builder$w, nodeImplementation as nodeImplementation$w } from './nodes/until.js';\nimport { builder as builder$x, nodeImplementation as nodeImplementation$y } from './nodes/random.js';\nimport { builder as builder$r, nodeImplementation as nodeImplementation$r } from './nodes/pipe.js';\nimport { builder as builder$t, nodeImplementation as nodeImplementation$t } from './nodes/pack.js';\nimport { builder as builder$u, nodeImplementation as nodeImplementation$u } from './nodes/unpack.js';\nimport { builders as builders$e, nodeImplementations as nodeImplementations$e } from './nodes/expr-expr~.js';\nimport { builders as builders$b, nodeImplementations as nodeImplementations$b } from './nodes/binop.js';\nimport { builder as builder$I, nodeImplementation as nodeImplementation$I } from './nodes/_routemsg.js';\nimport { builder as builder$H, nodeImplementation as nodeImplementation$H } from './nodes/_mixer~.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst NODE_BUILDERS = {\n    ...nodeBuilders,\n    ...builders,\n    ...builders$1,\n    ...builders$2,\n    ...builders$3,\n    ...builders$4,\n    ...builders$5,\n    ...builders$6,\n    ...builders$7,\n    ...builders$7,\n    ...builders$8,\n    'noise~': builder,\n    'snapshot~': builder$1,\n    'sig~': builder$2,\n    'samphold~': builder$3,\n    'clip~': builder$4,\n    'vline~': builder$5,\n    'line~': builder$6,\n    'dac~': builder$7,\n    'adc~': builder$8,\n    'samplerate~': builder$9,\n    'tabplay~': builder$a,\n    'tabwrite~': builder$b,\n    'readsf~': builder$c,\n    'writesf~': builder$d,\n    'vd~': { aliasTo: 'delread4~' },\n    'bp~': builder$e,\n    'hip~': builder$f,\n    'lop~': builder$g,\n    'vcf~': builder$h,\n    'delwrite~': builder$i,\n    's~': { aliasTo: 'send~' },\n    'r~': { aliasTo: 'receive~' },\n    ...builders$9,\n    ...builders$a,\n    ...builders$b,\n    ...builders$c,\n    ...builders$d,\n    ...builders$e,\n    bang: builder$j,\n    bng: { aliasTo: 'bang' },\n    b: { aliasTo: 'bang' },\n    list: builder$k,\n    symbol: builder$l,\n    loadbang: builder$m,\n    s: { aliasTo: 'send' },\n    r: { aliasTo: 'receive' },\n    print: builder$n,\n    trigger: builder$o,\n    t: { aliasTo: 'trigger' },\n    change: builder$p,\n    clip: builder$q,\n    pipe: builder$r,\n    moses: builder$s,\n    pack: builder$t,\n    unpack: builder$u,\n    spigot: builder$v,\n    until: builder$w,\n    random: builder$x,\n    route: builder$y,\n    select: { aliasTo: 'route' },\n    sel: { aliasTo: 'route' },\n    msg: builder$z,\n    metro: builder$A,\n    timer: builder$B,\n    delay: builder$C,\n    del: { aliasTo: 'delay' },\n    line: builder$D,\n    soundfiler: builder$E,\n    tabread: builder$F,\n    tabwrite: builder$G,\n    // The following are internal nodes used by the compiler\n    // to help reproduce Pd's behavior\n    '_mixer~': builder$H,\n    '_routemsg': builder$I,\n    // The following don't need implementations as they will never\n    // show up in the graph traversal.\n    graph: { isNoop: true },\n    table: { isNoop: true },\n    array: { isNoop: true },\n    text: { isNoop: true },\n    cnv: { isNoop: true },\n    'block~': { isNoop: true },\n    openpanel: { isNoop: true },\n};\nconst NODE_IMPLEMENTATIONS = {\n    ...nodeImplementations,\n    ...nodeImplementations$1,\n    ...nodeImplementations$2,\n    ...nodeImplementations$3,\n    ...nodeImplementations$4,\n    ...nodeImplementations$5,\n    ...nodeImplementations$6,\n    ...nodeImplementations$7,\n    ...nodeImplementations$8,\n    'noise~': nodeImplementation,\n    'snapshot~': nodeImplementation$1,\n    'sig~': nodeImplementation$2,\n    'samphold~': nodeImplementation$3,\n    'clip~': nodeImplementation$4,\n    'vline~': nodeImplementation$5,\n    'line~': nodeImplementation$6,\n    'dac~': nodeImplementation$7,\n    'adc~': nodeImplementation$8,\n    'samplerate~': nodeImplementation$9,\n    'tabplay~': nodeImplementation$a,\n    'tabwrite~': nodeImplementation$b,\n    'readsf~': nodeImplementation$c,\n    'writesf~': nodeImplementation$d,\n    'delwrite~': nodeImplementation$e,\n    'bp~': nodeImplementation$f,\n    'hip~': nodeImplementation$g,\n    'lop~': nodeImplementation$h,\n    'vcf~': nodeImplementation$i,\n    ...nodeImplementations$9,\n    ...nodeImplementations$a,\n    ...nodeImplementations$b,\n    ...nodeImplementations$c,\n    ...nodeImplementations$d,\n    ...nodeImplementations$e,\n    bang: nodeImplementation$j,\n    list: nodeImplementation$k,\n    symbol: nodeImplementation$l,\n    loadbang: nodeImplementation$m,\n    print: nodeImplementation$n,\n    trigger: nodeImplementation$o,\n    change: nodeImplementation$p,\n    clip: nodeImplementation$q,\n    pipe: nodeImplementation$r,\n    moses: nodeImplementation$s,\n    pack: nodeImplementation$t,\n    unpack: nodeImplementation$u,\n    spigot: nodeImplementation$v,\n    until: nodeImplementation$w,\n    route: nodeImplementation$x,\n    random: nodeImplementation$y,\n    msg: nodeImplementation$z,\n    metro: nodeImplementation$A,\n    timer: nodeImplementation$B,\n    delay: nodeImplementation$C,\n    line: nodeImplementation$D,\n    tabread: nodeImplementation$E,\n    tabwrite: nodeImplementation$F,\n    soundfiler: nodeImplementation$G,\n    // Internal nodes\n    '_mixer~': nodeImplementation$H,\n    '_routemsg': nodeImplementation$I,\n};\n\nexport { NODE_BUILDERS, NODE_IMPLEMENTATIONS };\n","import index from '../../../WebPd_compiler/dist/src/compile/index.js';\nimport '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport parse from '../../../WebPd_pd-parser/dist/parse.js';\nimport buildApp from './build-app.js';\nimport { discoverGuiControls } from '../gui-controls.js';\nimport { collectIoMessageReceiversFromGui, collectIoMessageReceiversFromSendNodes } from './io.js';\nimport toDspGraph from '../compile-dsp-graph/to-dsp-graph.js';\nimport { compileAssemblyscript } from './build-wasm.js';\nimport { renderWav } from './build-audio.js';\nimport { stringifyArrayBuffer, getArtefact, UnknownNodeTypeError } from './helpers.js';\nimport { listBuildSteps } from './formats.js';\nimport { NODE_BUILDERS, NODE_IMPLEMENTATIONS } from '../nodes/index.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * Simple build function to compile a Pd patch into compiled code\n * that can be directly run into a web app.\n *\n * Throws an error if the build fails.\n *\n * @see performBuildStep\n */\nconst buildRunnable = async (pdFile, format = 'javascript', settings) => {\n    if (!['wasm', 'javascript'].includes(format)) {\n        throw new Error(`Invalid out format ${format}`);\n    }\n    const artefacts = { pd: pdFile };\n    for (const step of listBuildSteps('pd', format)) {\n        const result = await performBuildStep(artefacts, step, settings);\n        if (result.status === 1) {\n            throw new Error(`Build failed : ${result.errors.join('\\n')}`);\n        }\n    }\n    return artefacts[format];\n};\nconst defaultSettingsForBuild = () => ({\n    audioSettings: {\n        channelCount: {\n            in: 2,\n            out: 2,\n        },\n        bitDepth: 64,\n    },\n    renderAudioSettings: {\n        sampleRate: 44100,\n        blockSize: 4096,\n        previewDurationSeconds: 30,\n    },\n    abstractionLoader: alwaysFailingAbstractionLoader,\n    nodeBuilders: NODE_BUILDERS,\n    nodeImplementations: NODE_IMPLEMENTATIONS,\n});\nconst alwaysFailingAbstractionLoader = async (nodeType) => {\n    throw new UnknownNodeTypeError(nodeType);\n};\n/**\n * @returns an empty artefacts object.\n */\nconst createArtefacts = () => ({});\n/**\n * Helper to unpack an artefact from an ArrayBuffer into its correct format.\n * Useful for example to load artefacts from files or http requests.\n *\n * @returns a new artefacts object.\n */\nconst loadArtefact = (artefacts, artefactBuffer, artefactFormat) => {\n    switch (artefactFormat) {\n        case 'pd':\n            return { ...artefacts, pd: stringifyArrayBuffer(artefactBuffer) };\n        case 'pdJson':\n            return {\n                ...artefacts,\n                pdJson: JSON.parse(stringifyArrayBuffer(artefactBuffer)),\n            };\n        case 'dspGraph':\n            return {\n                ...artefacts,\n                dspGraph: JSON.parse(stringifyArrayBuffer(artefactBuffer)),\n            };\n        case 'javascript':\n            return {\n                ...artefacts,\n                javascript: stringifyArrayBuffer(artefactBuffer),\n            };\n        case 'assemblyscript':\n            return {\n                ...artefacts,\n                assemblyscript: stringifyArrayBuffer(artefactBuffer),\n            };\n        case 'wasm':\n            return { ...artefacts, wasm: artefactBuffer };\n        case 'wav':\n            return { ...artefacts, wav: new Uint8Array(artefactBuffer) };\n        default:\n            throw new Error(`Unexpected format for preloading ${artefactFormat}`);\n    }\n};\n/**\n * A helper to perform a build step on a given artefacts object.\n * If the build is successful, the artefacts object is updated in place with\n * the newly built artefact.\n *\n * Beware that this can only build one step at a time. If targetting a given format\n * requires multiple steps, you need to call this function multiple times with intermediate targets.\n *\n * @see fromPatch\n *\n * @param artefacts\n * @param target\n * @param settings\n */\nconst performBuildStep = async (artefacts, target, { nodeBuilders, nodeImplementations, audioSettings, renderAudioSettings, io = {}, abstractionLoader, }) => {\n    let warnings = [];\n    let errors = [];\n    switch (target) {\n        case 'pdJson':\n            const parseResult = parse(artefacts.pd);\n            if (parseResult.status === 0) {\n                artefacts.pdJson = parseResult.pd;\n                return {\n                    status: 0,\n                    warnings: _makeParseErrorMessages(parseResult.warnings),\n                };\n            }\n            else {\n                return {\n                    status: 1,\n                    warnings: _makeParseErrorMessages(parseResult.warnings),\n                    errors: _makeParseErrorMessages(parseResult.errors),\n                };\n            }\n        case 'dspGraph':\n            const toDspGraphResult = await toDspGraph(artefacts.pdJson, nodeBuilders, abstractionLoader);\n            if (toDspGraphResult.abstractionsLoadingWarnings) {\n                warnings = Object.entries(toDspGraphResult.abstractionsLoadingWarnings)\n                    .filter(([_, warnings]) => !!warnings.length)\n                    .flatMap(([nodeType, warnings]) => [\n                    `Warnings when parsing abstraction ${nodeType} :`,\n                    ..._makeParseErrorMessages(warnings),\n                ]);\n            }\n            if (toDspGraphResult.status === 0) {\n                // If io.messageReceivers are not defined, we infer them by\n                // discovering UI controls and generating messageReceivers for each one.\n                if (!io.messageReceivers) {\n                    const { controls } = discoverGuiControls(toDspGraphResult.pd);\n                    io.messageReceivers = {\n                        ...collectIoMessageReceiversFromGui(controls, toDspGraphResult.graph),\n                        ...collectIoMessageReceiversFromSendNodes(toDspGraphResult.pd, toDspGraphResult.graph)\n                    };\n                }\n                artefacts.dspGraph = {\n                    graph: toDspGraphResult.graph,\n                    arrays: toDspGraphResult.arrays,\n                    pd: toDspGraphResult.pd,\n                    io: {\n                        messageReceivers: {},\n                        messageSenders: {},\n                        ...io,\n                    },\n                };\n                return { status: 0, warnings };\n            }\n            else {\n                const unknownNodeTypes = Object.values(toDspGraphResult.abstractionsLoadingErrors)\n                    .filter((errors) => !!errors.unknownNodeType)\n                    .map((errors) => errors.unknownNodeType);\n                if (unknownNodeTypes.length) {\n                    errors = [\n                        ...errors,\n                        ..._makeUnknownNodeTypeMessage(new Set(unknownNodeTypes)),\n                    ];\n                }\n                errors = [\n                    ...errors,\n                    ...Object.entries(toDspGraphResult.abstractionsLoadingErrors)\n                        .filter(([_, errors]) => !!errors.parsingErrors)\n                        .flatMap(([nodeType, errors]) => [\n                        `Failed to parse abstraction ${nodeType} :`,\n                        ..._makeParseErrorMessages(errors.parsingErrors),\n                    ]),\n                ];\n                return {\n                    status: 1,\n                    errors,\n                    warnings,\n                };\n            }\n        case 'javascript':\n        case 'assemblyscript':\n            const compileCodeResult = index(artefacts.dspGraph.graph, nodeImplementations, target, {\n                audio: audioSettings,\n                io: artefacts.dspGraph.io,\n                arrays: artefacts.dspGraph.arrays,\n            });\n            {\n                if (target === 'javascript') {\n                    artefacts.javascript = compileCodeResult.code;\n                }\n                else {\n                    artefacts.assemblyscript = compileCodeResult.code;\n                }\n                return { status: 0, warnings: [] };\n            }\n        case 'wasm':\n            try {\n                artefacts.wasm = await compileAssemblyscript(getArtefact(artefacts, 'assemblyscript'), audioSettings.bitDepth);\n            }\n            catch (err) {\n                return {\n                    status: 1,\n                    errors: [err.message],\n                    warnings: [],\n                };\n            }\n            return { status: 0, warnings: [] };\n        case 'wav':\n            artefacts.wav = await renderWav(renderAudioSettings.previewDurationSeconds, artefacts, { ...audioSettings, ...renderAudioSettings });\n            return { status: 0, warnings: [] };\n        case 'app':\n            artefacts.app = buildApp(artefacts);\n            return { status: 0, warnings: [] };\n        default:\n            throw new Error(`invalid build step ${target}`);\n    }\n};\nconst _makeUnknownNodeTypeMessage = (nodeTypeSet) => [\n    `Unknown object types ${Array.from(nodeTypeSet)\n        .map((nodeType) => `${nodeType}`)\n        .join(', ')}`,\n];\nconst _makeParseErrorMessages = (errorOrWarnings) => errorOrWarnings.map(({ message, lineIndex }) => `line ${lineIndex + 1} : ${message}`);\n\nexport { buildRunnable, createArtefacts, defaultSettingsForBuild, loadArtefact, performBuildStep };\n","var fetchRetry = function (fetch, defaults) {\n  defaults = defaults || {};\n  if (typeof fetch !== 'function') {\n    throw new ArgumentError('fetch must be a function');\n  }\n\n  if (typeof defaults !== 'object') {\n    throw new ArgumentError('defaults must be an object');\n  }\n\n  if (defaults.retries !== undefined && !isPositiveInteger(defaults.retries)) {\n    throw new ArgumentError('retries must be a positive integer');\n  }\n\n  if (defaults.retryDelay !== undefined && !isPositiveInteger(defaults.retryDelay) && typeof defaults.retryDelay !== 'function') {\n    throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n  }\n\n  if (defaults.retryOn !== undefined && !Array.isArray(defaults.retryOn) && typeof defaults.retryOn !== 'function') {\n    throw new ArgumentError('retryOn property expects an array or function');\n  }\n\n  var baseDefaults = {\n    retries: 3,\n    retryDelay: 1000,\n    retryOn: [],\n  };\n\n  defaults = Object.assign(baseDefaults, defaults);\n\n  return function fetchRetry(input, init) {\n    var retries = defaults.retries;\n    var retryDelay = defaults.retryDelay;\n    var retryOn = defaults.retryOn;\n\n    if (init && init.retries !== undefined) {\n      if (isPositiveInteger(init.retries)) {\n        retries = init.retries;\n      } else {\n        throw new ArgumentError('retries must be a positive integer');\n      }\n    }\n\n    if (init && init.retryDelay !== undefined) {\n      if (isPositiveInteger(init.retryDelay) || (typeof init.retryDelay === 'function')) {\n        retryDelay = init.retryDelay;\n      } else {\n        throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n      }\n    }\n\n    if (init && init.retryOn) {\n      if (Array.isArray(init.retryOn) || (typeof init.retryOn === 'function')) {\n        retryOn = init.retryOn;\n      } else {\n        throw new ArgumentError('retryOn property expects an array or function');\n      }\n    }\n\n    // eslint-disable-next-line no-undef\n    return new Promise(function (resolve, reject) {\n      var wrappedFetch = function (attempt) {\n        // As of node 18, this is no longer needed since node comes with native support for fetch:\n        /* istanbul ignore next */\n        var _input =\n          typeof Request !== 'undefined' && input instanceof Request\n            ? input.clone()\n            : input;\n        fetch(_input, init)\n          .then(function (response) {\n            if (Array.isArray(retryOn) && retryOn.indexOf(response.status) === -1) {\n              resolve(response);\n            } else if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                return Promise.resolve(retryOn(attempt, null, response))\n                  .then(function (retryOnResponse) {\n                    if(retryOnResponse) {\n                      retry(attempt, null, response);\n                    } else {\n                      resolve(response);\n                    }\n                  }).catch(reject);\n              } catch (error) {\n                reject(error);\n              }\n            } else {\n              if (attempt < retries) {\n                retry(attempt, null, response);\n              } else {\n                resolve(response);\n              }\n            }\n          })\n          .catch(function (error) {\n            if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                Promise.resolve(retryOn(attempt, error, null))\n                  .then(function (retryOnResponse) {\n                    if(retryOnResponse) {\n                      retry(attempt, error, null);\n                    } else {\n                      reject(error);\n                    }\n                  })\n                  .catch(function(error) {\n                    reject(error);\n                  });\n              } catch(error) {\n                reject(error);\n              }\n            } else if (attempt < retries) {\n              retry(attempt, error, null);\n            } else {\n              reject(error);\n            }\n          });\n      };\n\n      function retry(attempt, error, response) {\n        var delay = (typeof retryDelay === 'function') ?\n          retryDelay(attempt, error, response) : retryDelay;\n        setTimeout(function () {\n          wrappedFetch(++attempt);\n        }, delay);\n      }\n\n      wrappedFetch(0);\n    });\n  };\n};\n\nfunction isPositiveInteger(value) {\n  return Number.isInteger(value) && value >= 0;\n}\n\nfunction ArgumentError(message) {\n  this.name = 'ArgumentError';\n  this.message = message;\n}\n\nexport { fetchRetry as default };\n","import fetchRetry$1 from '../node_modules/fetch-retry/index.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst fetchRetry = fetchRetry$1(fetch);\n/**\n * Note : the audio worklet feature is available only in secure context.\n * This function will fail when used in insecure context (non-https, etc ...)\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioWorklet\n */\nconst addModule = async (context, processorCode) => {\n    const blob = new Blob([processorCode], { type: 'text/javascript' });\n    const workletProcessorUrl = URL.createObjectURL(blob);\n    return context.audioWorklet.addModule(workletProcessorUrl);\n};\n// TODO : testing\nconst fetchFile = async (url) => {\n    let response;\n    try {\n        response = await fetchRetry(url, { retries: 3 });\n    }\n    catch (err) {\n        throw new FileError(response.status, err.toString());\n    }\n    if (!response.ok) {\n        const responseText = await response.text();\n        throw new FileError(response.status, responseText);\n    }\n    return response.arrayBuffer();\n};\nconst audioBufferToArray = (audioBuffer) => {\n    const sound = [];\n    for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\n        sound.push(audioBuffer.getChannelData(channel));\n    }\n    return sound;\n};\n// TODO : testing\nconst fixSoundChannelCount = (sound, targetChannelCount) => {\n    if (sound.length === 0) {\n        throw new Error(`Received empty sound`);\n    }\n    const floatArrayType = sound[0].constructor;\n    const frameCount = sound[0].length;\n    const fixedSound = sound.slice(0, targetChannelCount);\n    while (sound.length < targetChannelCount) {\n        fixedSound.push(new floatArrayType(frameCount));\n    }\n    return fixedSound;\n};\nconst resolveRelativeUrl = (rootUrl, relativeUrl) => {\n    return new URL(relativeUrl, rootUrl).href;\n};\nclass FileError extends Error {\n    constructor(status, msg) {\n        super(`Error ${status} : ${msg}`);\n    }\n}\n\nexport { FileError, addModule, audioBufferToArray, fetchFile, fixSoundChannelCount, resolveRelativeUrl };\n","const _addPath = (parent, key, _path) => {\n    const path = _ensurePath(_path);\n    return {\n        keys: [...path.keys, key],\n        parents: [...path.parents, parent],\n    };\n};\nconst _ensurePath = (path) => path || {\n    keys: [],\n    parents: [],\n};\nconst _proxySetHandlerReadOnly = () => {\n    throw new Error('This Proxy is read-only.');\n};\nconst _proxyGetHandlerThrowIfKeyUnknown = (target, key, path) => {\n    if (!(key in target)) {\n        // Whitelist some fields that are undefined but accessed at\n        // some point or another by our code.\n        // TODO : find a better way to do this.\n        if ([\n            'toJSON',\n            'Symbol(Symbol.toStringTag)',\n            'constructor',\n            '$typeof',\n            '$$typeof',\n            '@@__IMMUTABLE_ITERABLE__@@',\n            '@@__IMMUTABLE_RECORD__@@',\n            'then',\n        ].includes(key)) {\n            return true;\n        }\n        throw new Error(`namespace${path ? ` <${path.keys.join('.')}>` : ''} doesn't know key \"${String(key)}\"`);\n    }\n    return false;\n};\nconst proxyAsAssigner = (spec, _obj, context, _path) => {\n    const path = _path || { keys: [], parents: [] };\n    const obj = proxyAsAssigner.ensureValue(_obj, spec, context, path);\n    // If `_path` is provided, assign the new value to the parent object.\n    if (_path) {\n        const parent = _path.parents[_path.parents.length - 1];\n        const key = _path.keys[_path.keys.length - 1];\n        // The only case where we want to overwrite the existing value\n        // is when it was a `null` assigned by `LiteralDefaultNull`, and\n        // we want to set the real value instead.\n        if (!(key in parent) || 'LiteralDefaultNull' in spec) {\n            parent[key] = obj;\n        }\n    }\n    // If the object is a Literal, end of the recursion.\n    if ('Literal' in spec || 'LiteralDefaultNull' in spec) {\n        return obj;\n    }\n    return new Proxy(obj, {\n        get: (_, k) => {\n            const key = String(k);\n            let nextSpec;\n            if ('Index' in spec) {\n                nextSpec = spec.Index(key, context, path);\n            }\n            else if ('Interface' in spec) {\n                if (!(key in spec.Interface)) {\n                    throw new Error(`Interface has no entry \"${String(key)}\"`);\n                }\n                nextSpec = spec.Interface[key];\n            }\n            else {\n                throw new Error('no builder');\n            }\n            return proxyAsAssigner(nextSpec, \n            // We use this form here instead of `obj[key]` specifically\n            // to allow Assign to play well with `ProtectedIndex`, which\n            // would raise an error if trying to access an undefined key.\n            key in obj ? obj[key] : undefined, context, _addPath(obj, key, path));\n        },\n        set: _proxySetHandlerReadOnly,\n    });\n};\nproxyAsAssigner.ensureValue = (_obj, spec, context, _path, _recursionPath) => {\n    if ('Index' in spec) {\n        return (_obj || spec.indexConstructor(context, _ensurePath(_path)));\n    }\n    else if ('Interface' in spec) {\n        const obj = (_obj || {});\n        Object.entries(spec.Interface).forEach(([key, nextSpec]) => {\n            obj[key] = proxyAsAssigner.ensureValue(obj[key], nextSpec, context, _addPath(obj, key, _path), _addPath(obj, key, _recursionPath));\n        });\n        return obj;\n    }\n    else if ('Literal' in spec) {\n        return (_obj || spec.Literal(context, _ensurePath(_path)));\n    }\n    else if ('LiteralDefaultNull' in spec) {\n        if (!_recursionPath) {\n            return (_obj ||\n                spec.LiteralDefaultNull(context, _ensurePath(_path)));\n        }\n        else {\n            return (_obj || null);\n        }\n    }\n    else {\n        throw new Error('Invalid Assigner');\n    }\n};\nproxyAsAssigner.Interface = (a) => ({ Interface: a });\nproxyAsAssigner.Index = (f, indexConstructor) => ({\n    Index: f,\n    indexConstructor: indexConstructor || (() => ({})),\n});\nproxyAsAssigner.Literal = (f) => ({\n    Literal: f,\n});\nproxyAsAssigner.LiteralDefaultNull = (f) => ({ LiteralDefaultNull: f });\n// ---------------------------- proxyAsProtectedIndex ---------------------------- //\n/**\n * Helper to declare namespace objects enforcing stricter access rules.\n * Specifically, it forbids :\n * - reading an unknown property.\n * - trying to overwrite an existing property.\n */\nconst proxyAsProtectedIndex = (namespace, path) => {\n    return new Proxy(namespace, {\n        get: (target, k) => {\n            const key = String(k);\n            if (_proxyGetHandlerThrowIfKeyUnknown(target, key, path)) {\n                return undefined;\n            }\n            return target[key];\n        },\n        set: (target, k, newValue) => {\n            const key = _trimDollarKey(String(k));\n            if (target.hasOwnProperty(key)) {\n                throw new Error(`Key \"${String(key)}\" is protected and cannot be overwritten.`);\n            }\n            else {\n                target[key] = newValue;\n            }\n            return newValue;\n        },\n    });\n};\nconst _trimDollarKey = (key) => {\n    const match = /\\$(.*)/.exec(key);\n    if (!match) {\n        return key;\n    }\n    else {\n        return match[1];\n    }\n};\n\nexport { _proxyGetHandlerThrowIfKeyUnknown, proxyAsAssigner, proxyAsProtectedIndex };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst getNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (node) {\n        return node;\n    }\n    throw new Error(`Node \"${nodeId}\" not found in graph`);\n};\n\nexport { getNode };\n","/** Helper to get node implementation or throw an error if not implemented. */\nconst getNodeImplementation = (nodeImplementations, nodeType) => {\n    const nodeImplementation = nodeImplementations[nodeType];\n    if (!nodeImplementation) {\n        throw new Error(`node [${nodeType}] is not implemented`);\n    }\n    return {\n        dependencies: [],\n        ...nodeImplementation,\n    };\n};\n\nexport { getNodeImplementation };\n","/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/** Generate an integer series from 0 to `count` (non-inclusive). */\nconst countTo = (count) => {\n    const results = [];\n    for (let i = 0; i < count; i++) {\n        results.push(i);\n    }\n    return results;\n};\n\nexport { countTo };\n","import { countTo } from '../functional-helpers.js';\n\nconst Sequence = (content) => ({\n    astType: 'Sequence',\n    content: _processRawContent(_intersperse(content, countTo(content.length - 1).map(() => '\\n'))),\n});\nconst ast = (strings, ...content) => _preventToString({\n    astType: 'Sequence',\n    content: _processRawContent(_intersperse(strings, content)),\n});\nconst _processRawContent = (content) => {\n    // 1. Flatten arrays and AstSequence, filter out nulls, and convert numbers to strings\n    // Basically converts input to an Array<AstContent>.\n    const flattenedAndFiltered = content.flatMap((element) => {\n        if (typeof element === 'string') {\n            return [element];\n        }\n        else if (typeof element === 'number') {\n            return [element.toString()];\n        }\n        else {\n            if (element === null) {\n                return [];\n            }\n            else if (Array.isArray(element)) {\n                return _processRawContent(_intersperse(element, countTo(element.length - 1).map(() => '\\n')));\n            }\n            else if (typeof element === 'object' &&\n                element.astType === 'Sequence') {\n                return element.content;\n            }\n            else {\n                return [element];\n            }\n        }\n    });\n    // 2. Combine adjacent strings\n    const [combinedContent, remainingString] = flattenedAndFiltered.reduce(([combinedContent, currentString], element) => {\n        if (typeof element === 'string') {\n            return [combinedContent, currentString + element];\n        }\n        else {\n            if (currentString.length) {\n                return [[...combinedContent, currentString, element], ''];\n            }\n            else {\n                return [[...combinedContent, element], ''];\n            }\n        }\n    }, [[], '']);\n    if (remainingString.length) {\n        combinedContent.push(remainingString);\n    }\n    return combinedContent;\n};\n/**\n * Intersperse content from array1 with content from array2.\n * `array1.length` must be equal to `array2.length + 1`.\n */\nconst _intersperse = (array1, array2) => {\n    if (array1.length === 0) {\n        return [];\n    }\n    return array1.slice(1).reduce((combinedContent, element, i) => {\n        return combinedContent.concat([array2[i], element]);\n    }, [array1[0]]);\n};\n/**\n * Prevents AST elements from being rendered as a string, as this is\n * most likely an error due to unproper use of `ast`.\n * Deacivated. Activate for debugging by uncommenting the line below.\n */\nconst _preventToString = (element) => ({\n    ...element,\n    // Uncomment this to activate\n    // toString: () => { throw new Error(`Rendering element ${elemennt.astType} as string is probably an error`) }\n});\n\nexport { Sequence, _processRawContent, ast };\n","import { getNode } from '../../dsp-graph/getters.js';\nimport { getNodeImplementation } from '../compile-helpers.js';\nimport { proxyAsAssigner, proxyAsProtectedIndex } from '../proxies.js';\nimport { ast, Sequence } from '../../ast/declare.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n// ---------------------------- VariableNamesIndex ---------------------------- //\nconst NS = {\n    GLOBALS: 'G',\n    NODES: 'N',\n    NODE_TYPES: 'NT',\n    IO: 'IO',\n    COLD: 'COLD',\n};\nproxyAsAssigner.Interface({\n    nodes: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Interface({\n        signalOuts: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'outs', portletId))),\n        messageSenders: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'snds', portletId))),\n        messageReceivers: proxyAsAssigner.Index((portletId) => proxyAsAssigner.Literal(() => _name(NS.NODES, nodeId, 'rcvs', portletId))),\n        state: proxyAsAssigner.LiteralDefaultNull(() => _name(NS.NODES, nodeId, 'state')),\n    })),\n    nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => {\n        const nodeImplementation = getNodeImplementation(nodeImplementations, nodeType);\n        const nodeTypePrefix = (nodeImplementation.flags\n            ? nodeImplementation.flags.alphaName\n            : null) || nodeType;\n        return proxyAsAssigner.Index((name) => proxyAsAssigner.Literal(() => _name(NS.NODE_TYPES, nodeTypePrefix, name)));\n    }),\n    globals: proxyAsAssigner.Index((ns) => proxyAsAssigner.Index((name) => {\n        if (['fs'].includes(ns)) {\n            return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\n            // We don't prefix stdlib core module, because these are super\n            // basic functions that are always included in the global scope.\n        }\n        else if (ns === 'core') {\n            return proxyAsAssigner.Literal(() => name);\n        }\n        else {\n            return proxyAsAssigner.Literal(() => _name(NS.GLOBALS, ns, name));\n        }\n    })),\n    io: proxyAsAssigner.Interface({\n        messageReceivers: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((inletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'rcv', nodeId, inletId)))),\n        messageSenders: proxyAsAssigner.Index((nodeId) => proxyAsAssigner.Index((outletId) => proxyAsAssigner.Literal(() => _name(NS.IO, 'snd', nodeId, outletId)))),\n    }),\n    coldDspGroups: proxyAsAssigner.Index((groupId) => proxyAsAssigner.Literal(() => _name(NS.COLD, groupId))),\n});\n// ---------------------------- PrecompiledCode ---------------------------- //\nproxyAsAssigner.Interface({\n    graph: proxyAsAssigner.Literal((_, path) => ({\n        fullTraversal: [],\n        hotDspGroup: {\n            traversal: [],\n            outNodesIds: [],\n        },\n        coldDspGroups: proxyAsProtectedIndex({}, path),\n    })),\n    nodeImplementations: proxyAsAssigner.Index((nodeType, { nodeImplementations }) => proxyAsAssigner.Literal(() => ({\n        nodeImplementation: getNodeImplementation(nodeImplementations, nodeType),\n        stateClass: null,\n        core: null,\n    })), (_, path) => proxyAsProtectedIndex({}, path)),\n    nodes: proxyAsAssigner.Index((nodeId, { graph }) => proxyAsAssigner.Literal(() => ({\n        nodeType: getNode(graph, nodeId).type,\n        messageReceivers: {},\n        messageSenders: {},\n        signalOuts: {},\n        signalIns: {},\n        initialization: ast ``,\n        dsp: {\n            loop: ast ``,\n            inlets: {},\n        },\n        state: null,\n    })), (_, path) => proxyAsProtectedIndex({}, path)),\n    dependencies: proxyAsAssigner.Literal(() => ({\n        imports: [],\n        exports: [],\n        ast: Sequence([]),\n    })),\n    io: proxyAsAssigner.Interface({\n        messageReceivers: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\n        messageSenders: proxyAsAssigner.Index((_) => proxyAsAssigner.Literal((_, path) => proxyAsProtectedIndex({}, path)), (_, path) => proxyAsProtectedIndex({}, path)),\n    }),\n});\n// ---------------------------- MISC ---------------------------- //\nconst _name = (...parts) => parts.map(assertValidNamePart).join('_');\nconst assertValidNamePart = (namePart) => {\n    const isInvalid = !VALID_NAME_PART_REGEXP.exec(namePart);\n    if (isInvalid) {\n        throw new Error(`Invalid variable name for code generation \"${namePart}\"`);\n    }\n    return namePart;\n};\nconst VALID_NAME_PART_REGEXP = /^[a-zA-Z0-9_]+$/;\n\nexport { assertValidNamePart };\n","import { makeAbstractionLoader, UnknownNodeTypeError } from '../build/helpers.js';\nimport { defaultSettingsForBuild as defaultSettingsForBuild$1 } from '../build/build.js';\nimport '../../../WebPd_compiler/dist/src/compile/proxies.js';\nimport '../../../WebPd_compiler/dist/src/compile/precompile/proxies.js';\nimport '../nodes/nodes/expr-expr~.js';\nimport '../nodes/nodes/binop.js';\nimport '../compile-dsp-graph/to-dsp-graph.js';\nimport '../build/io.js';\n\n/*\n * Copyright (c) 2022-2023 Sébastien Piquemal <sebpiq@protonmail.com>, Chris McCormick.\n *\n * This file is part of WebPd\n * (see https://github.com/sebpiq/WebPd).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst defaultSettingsForBuild = (rootUrl) => ({\n    ...defaultSettingsForBuild$1(),\n    abstractionLoader: makeUrlAbstractionLoader(rootUrl),\n});\n/**\n * Helper to build an abstraction loader from a root url.\n * The returned loader will :\n * - use the root url to resolve relative paths for abstractions.\n * - suffix all abstraction names with .pd if they don't already have an extension.\n *\n * @param rootUrl\n * @returns\n */\nconst makeUrlAbstractionLoader = (rootUrl) => makeAbstractionLoader(async (nodeType) => {\n    const url = `${rootUrl}/${nodeType.endsWith('.pd') ? nodeType : `${nodeType}.pd`}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new UnknownNodeTypeError(nodeType);\n    }\n    return await response.text();\n});\n\nexport { defaultSettingsForBuild, makeUrlAbstractionLoader };\n",null,null],"names":["countTo","Var","_preventToString","ConstVar","Func","ast","Class","Sequence","_processRawContent","_intersperse","getNode","macros","macros$1","getNodeImplementation","_addPath","_ensurePath","_proxySetHandlerReadOnly","_proxyGetHandlerThrowIfKeyUnknown","proxyAsAssigner","proxyAsProtectedIndex","_trimDollarKey","NS","_name","assertValidNamePart","VALID_NAME_PART_REGEXP","NAMESPACE","_resolveRootPatch","builder","nodeImplementation","builder$1","builder$2","makeNodeImplementation","nodeImplementations","builders","createEngine","createEngineBindings","encode","decode","encodeSample","decodeSample","unpack","pack","encode$2","decode$2","createEngine$2","createEngine$1","builderReceive","builderSend","sharedNodeImplementation","nodeImplementationSend","nodeImplementationReceive","makeBuilder","builders$1","builders$2","builders$3","builders$4","builders$6","builders$7","builders$8","builder$3","builder$4","builder$5","builder$6","builder$7","builder$8","builder$9","builder$a","builder$b","builder$c","builder$d","builder$e","builder$f","builder$g","builder$h","builder$i","builders$9","builders$a","builders$b","builders$c","builders$d","builders$e","builder$j","builder$k","builder$l","builder$m","builder$n","builder$o","builder$p","builder$q","builder$r","builder$s","builder$t","builder$u","builder$v","builder$w","builder$x","builder$y","builder$z","builder$A","builder$B","builder$C","builder$D","builder$E","builder$F","builder$G","builder$H","builder$I","nodeImplementations$1","nodeImplementations$2","nodeImplementations$3","nodeImplementations$4","nodeImplementations$6","nodeImplementations$7","nodeImplementations$8","nodeImplementation$1","nodeImplementation$2","nodeImplementation$3","nodeImplementation$4","nodeImplementation$5","nodeImplementation$6","nodeImplementation$7","nodeImplementation$8","nodeImplementation$9","nodeImplementation$a","nodeImplementation$b","nodeImplementation$c","nodeImplementation$d","nodeImplementation$e","nodeImplementation$f","nodeImplementation$g","nodeImplementation$i","nodeImplementations$9","nodeImplementations$a","nodeImplementations$b","nodeImplementations$c","nodeImplementations$d","nodeImplementations$e","nodeImplementation$j","nodeImplementation$k","nodeImplementation$l","nodeImplementation$m","nodeImplementation$n","nodeImplementation$o","nodeImplementation$p","nodeImplementation$q","nodeImplementation$r","nodeImplementation$s","nodeImplementation$t","nodeImplementation$u","nodeImplementation$v","nodeImplementation$w","nodeImplementation$x","nodeImplementation$y","nodeImplementation$z","nodeImplementation$A","nodeImplementation$B","nodeImplementation$C","nodeImplementation$D","nodeImplementation$E","nodeImplementation$F","nodeImplementation$G","nodeImplementation$H","nodeImplementation$I","defaultSettingsForBuild","fetchRetry$1","Browser.defaultSettingsForBuild","Browser.makeUrlAbstractionLoader","Build.performBuildStep","Build.makeAbstractionLoader","Build.UnknownNodeTypeError"],"mappings":"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,kBAAkB,GAAG,20iHAA20iH;;ACEp2iH,MAAM,sBAAsB,GAAG,kBAAkB,CAAC;AAClD,IAAI,QAAQ,GAAG,CAAC,SAAS,KAAK;AAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;AAClD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,wCAAwC,CAAC,CAAC,CAAC;AACpE,KAAK;AACL,IAAI,MAAM,qBAAqB,GAAG,SAAS,CAAC,UAAU;AACtD,UAAU,UAAU;AACpB,UAAU,YAAY,CAAC;AACvB,IAAI,MAAM,YAAY,GAAG;AACzB,QAAQ,CAAC,sBAAsB,GAAG,kBAAkB;AACpD,QAAQ,CAAC,qBAAqB,GAAG,SAAS,CAAC,UAAU;AACrD,cAAc,SAAS,CAAC,UAAU;AAClC,cAAc,SAAS,CAAC,IAAI;AAC5B;AACA,QAAQ,YAAY,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE,sBAAsB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE,qBAAqB,CAAC;AAChE,8BAA8B,EAAE,SAAS,CAAC,UAAU;AACpD,YAAY,iBAAiB,GAAG,wBAAwB,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE,qBAAqB,CAAC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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"}