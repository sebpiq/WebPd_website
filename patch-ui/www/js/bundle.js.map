{"version":3,"file":"bundle.js","sources":["../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/WebPdWorkletProcessor.generated.js","../../../../WebPd_audioworklets/dist/WebPd_compiler-js/dist/assemblyscript-wasm-bindings.iife.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/node_modules/fetch-retry/index.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/utils.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/index.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/fake-filesystem.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/close-sound-stream.js","../../../../WebPd_audioworklets/dist/WebPd_compiler-js/dist/WebPd_compiler-js/src/constants.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/read-sound-file.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/read-sound-stream.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/write-sound-file.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/write-sound-stream.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/fs-web/index.js","../../../../WebPd_audioworklets/dist/WebPd_audioworklets/src/WebPdWorkletNode.js","../../../../WebPd_pd-parser/dist/WebPd_pd-json/dist/WebPd_pd-json/src/types.js","../../../../WebPd_pd-parser/dist/WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js","../../../../WebPd_pd-parser/dist/WebPd_pd-parser/src/args.js","../../../../WebPd_pd-parser/dist/WebPd_pd-parser/src/hydrate.js","../../../../WebPd_pd-parser/dist/WebPd_pd-parser/src/tokenize.js","../../../../WebPd_pd-parser/dist/WebPd_pd-parser/src/parse.js","../../src/pd-json.js","../../../../WebPd_pd-json/dist/WebPd_pd-json/src/types.js","../../../../WebPd_pd-json/dist/WebPd_dsp-graph/dist/src/graph-getters.js","../../../../WebPd_pd-json/dist/WebPd_dsp-graph/dist/src/graph-helpers.js","../../../../WebPd_pd-json/dist/WebPd_dsp-graph/dist/src/graph-mutations.js","../../../../WebPd_pd-json/dist/WebPd_pd-json/src/pdjson-helpers.js","../../../../WebPd_pd-json/dist/WebPd_pd-json/src/node-builders.js","../../../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js","../../src/math-utils.js","../../src/models.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/macros.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/macros.js","../../../../WebPd_compiler-js/dist/WebPd_dsp-graph/dist/src/graph-getters.js","../../../../WebPd_compiler-js/dist/WebPd_dsp-graph/dist/src/graph-traversal.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/constants.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/compile-helpers.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-common/compile-declare.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-common/compile-loop.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/core-code/buf.generated.js.txt.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/core-code/sked.generated.js.txt.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/core-code/fs.generated.js.txt.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/core-code/commons.generated.js.txt.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/core-code/index.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-common/compile-portlet-accessors.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-javascript/compile-to-javascript.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/core.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/buf.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/sked.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/msg.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/commons.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/fs.asc.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/core-code/index.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-assemblyscript/compile-to-assemblyscript.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/engine-common/code-variable-names.js","../../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/compile.js","../../../../WebPd_pd-registry/dist/WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js","../../../../WebPd_pd-registry/dist/WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js","../../../../WebPd_pd-registry/dist/WebPd_pd-json/dist/WebPd_pd-json/src/validation.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/dac~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/adc~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/standard-message-receivers.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/osc~-phasor~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/clip~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/sig~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/core.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/snapshot~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/points.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/lines.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/timing.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/vline~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/funcs~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-json/dist/WebPd_pd-json/src/pdjson-helpers.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/tabplay~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/fs.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/readsf~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/writesf~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/bp~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/buses.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/throw~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/catch~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/metro.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/timer.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/delay.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/controls-float.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/controls-bang.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/loadbang.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/numbers.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/float-int.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/funcs.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/binop~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/mixer~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/noise~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/delay-buffers.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/delread~-delread4~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/delwrite~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/filters-real~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/msg.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/soundfiler.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/print.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/shared-code/type-arguments.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/trigger.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/change.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/moses.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/clip.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/pipe.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/pack.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/expr-expr~.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/src/binop.js","../../../../WebPd_pd-registry/dist/WebPd_pd-registry/index.js","../../src/wasm.js","../../src/webpd-engine.js","../../src/views.js","../../src/render.js","../../src/main.js"],"sourcesContent":["var _WebPdWorkletProcessorCode = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\nconst FS_CALLBACK_NAMES = [\\n    'onReadSoundFile',\\n    'onOpenSoundReadStream',\\n    'onWriteSoundFile',\\n    'onOpenSoundWriteStream',\\n    'onSoundStreamData',\\n    'onCloseSoundStream',\\n];\\nclass WasmWorkletProcessor extends AudioWorkletProcessor {\\n    constructor() {\\n        super();\\n        this.port.onmessage = this.onMessage.bind(this);\\n        this.settings = {\\n            blockSize: null,\\n            sampleRate,\\n        };\\n        this.dspConfigured = false;\\n        this.engine = null;\\n    }\\n    process(inputs, outputs) {\\n        const output = outputs[0];\\n        const input = inputs[0];\\n        if (!this.dspConfigured) {\\n            if (!this.engine) {\\n                return true;\\n            }\\n            this.settings.blockSize = output[0].length;\\n            this.engine.configure(this.settings.sampleRate, this.settings.blockSize);\\n            this.dspConfigured = true;\\n        }\\n        this.engine.loop(input, output);\\n        return true;\\n    }\\n    onMessage(messageEvent) {\\n        const message = messageEvent.data;\\n        switch (message.type) {\\n            case 'code:WASM':\\n                this.setWasm(message.payload.wasmBuffer).then(() => this.setArrays(message.payload.arrays));\\n                break;\\n            case 'code:JS':\\n                this.setJsCode(message.payload.jsCode);\\n                this.setArrays(message.payload.arrays);\\n                break;\\n            case 'inletCaller':\\n                this.engine.inletCallers[message.payload.nodeId][message.payload.portletId](message.payload.message);\\n                break;\\n            case 'fs':\\n                const returned = this.engine.fs[message.payload.functionName].apply(null, message.payload.arguments);\\n                this.port.postMessage({\\n                    type: 'fs',\\n                    payload: {\\n                        functionName: message.payload.functionName + '_return',\\n                        operationId: message.payload.arguments[0],\\n                        returned,\\n                    },\\n                });\\n                break;\\n            case 'destroy':\\n                this.destroy();\\n                break;\\n            default:\\n                new Error(`unknown message type ${message.type}`);\\n        }\\n    }\\n    // TODO : control for channelCount of wasmModule\\n    setWasm(wasmBuffer) {\\n        return AssemblyscriptWasmBindings.createEngine(wasmBuffer).then((engine) => {\\n            this.setEngine(engine);\\n            return engine;\\n        });\\n    }\\n    setJsCode(code) {\\n        const engine = new Function(`\\n            ${code}\\n            return exports\\n        `)();\\n        this.setEngine(engine);\\n    }\\n    setEngine(engine) {\\n        FS_CALLBACK_NAMES.forEach((functionName) => {\\n            ;\\n            engine.fs[functionName] = (...args) => {\\n                // We don't use transferables, because that would imply reallocating each time new array in the engine.\\n                this.port.postMessage({\\n                    type: 'fs',\\n                    payload: {\\n                        functionName,\\n                        arguments: args,\\n                    },\\n                });\\n            };\\n        });\\n        this.engine = engine;\\n        this.dspConfigured = false;\\n    }\\n    setArrays(arrays) {\\n        Object.entries(arrays).forEach(([arrayName, arrayData]) => {\\n            this.engine.commons.setArray(arrayName, arrayData);\\n        });\\n    }\\n    destroy() {\\n        this.process = () => false;\\n    }\\n}\\nregisterProcessor('webpd-node', WasmWorkletProcessor);\\n\";\n\nexport { _WebPdWorkletProcessorCode as default };\n//# sourceMappingURL=WebPdWorkletProcessor.generated.js.map\n","var AssemblyscriptWasmBindingsCode = \"var AssemblyscriptWasmBindings = (function (exports) {\\n    'use strict';\\n\\n    const getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\\n\\n    const liftString = (wasmExports, pointer) => {\\n        if (!pointer)\\n            return null;\\n        pointer = pointer >>> 0;\\n        const end = (pointer +\\n            new Uint32Array(wasmExports.memory.buffer)[(pointer - 4) >>> 2]) >>>\\n            1;\\n        const memoryU16 = new Uint16Array(wasmExports.memory.buffer);\\n        let start = pointer >>> 1;\\n        let string = '';\\n        while (end - start > 1024) {\\n            string += String.fromCharCode(...memoryU16.subarray(start, (start += 1024)));\\n        }\\n        return string + String.fromCharCode(...memoryU16.subarray(start, end));\\n    };\\n    const lowerString = (wasmExports, value) => {\\n        if (value == null)\\n            return 0;\\n        const length = value.length, pointer = wasmExports.__new(length << 1, 1) >>> 0, memoryU16 = new Uint16Array(wasmExports.memory.buffer);\\n        for (let i = 0; i < length; ++i)\\n            memoryU16[(pointer >>> 1) + i] = value.charCodeAt(i);\\n        return pointer;\\n    };\\n    const readTypedArray = (wasmExports, constructor, pointer) => {\\n        if (!pointer)\\n            return null;\\n        const memoryU32 = new Uint32Array(wasmExports.memory.buffer);\\n        return new constructor(wasmExports.memory.buffer, memoryU32[(pointer + 4) >>> 2], memoryU32[(pointer + 8) >>> 2] / constructor.BYTES_PER_ELEMENT);\\n    };\\n    const lowerFloatArray = (wasmExports, bitDepth, data) => {\\n        const arrayType = getFloatArrayType(bitDepth);\\n        const arrayPointer = wasmExports.createFloatArray(data.length);\\n        const array = readTypedArray(wasmExports, arrayType, arrayPointer);\\n        array.set(data);\\n        return { array, arrayPointer };\\n    };\\n    const lowerListOfFloatArrays = (wasmExports, bitDepth, data) => {\\n        const arraysPointer = wasmExports.core_createListOfArrays();\\n        data.forEach((array) => {\\n            const { arrayPointer } = lowerFloatArray(wasmExports, bitDepth, array);\\n            wasmExports.core_pushToListOfArrays(arraysPointer, arrayPointer);\\n        });\\n        return arraysPointer;\\n    };\\n    const readListOfFloatArrays = (wasmExports, bitDepth, listOfArraysPointer) => {\\n        const listLength = wasmExports.core_getListOfArraysLength(listOfArraysPointer);\\n        const arrays = [];\\n        const arrayType = getFloatArrayType(bitDepth);\\n        for (let i = 0; i < listLength; i++) {\\n            const arrayPointer = wasmExports.core_getListOfArraysElem(listOfArraysPointer, i);\\n            arrays.push(readTypedArray(wasmExports, arrayType, arrayPointer));\\n        }\\n        return arrays;\\n    };\\n\\n    const liftMessage = (wasmExports, messagePointer) => {\\n        const messageTokenTypesPointer = wasmExports.msg_getTokenTypes(messagePointer);\\n        const messageTokenTypes = readTypedArray(wasmExports, Int32Array, messageTokenTypesPointer);\\n        const message = [];\\n        messageTokenTypes.forEach((tokenType, tokenIndex) => {\\n            if (tokenType === wasmExports.MSG_FLOAT_TOKEN.valueOf()) {\\n                message.push(wasmExports.msg_readFloatToken(messagePointer, tokenIndex));\\n            }\\n            else if (tokenType === wasmExports.MSG_STRING_TOKEN.valueOf()) {\\n                const stringPointer = wasmExports.msg_readStringToken(messagePointer, tokenIndex);\\n                message.push(liftString(wasmExports, stringPointer));\\n            }\\n        });\\n        return message;\\n    };\\n    const lowerMessage = (wasmExports, message) => {\\n        const template = message.reduce((template, value) => {\\n            if (typeof value === 'number') {\\n                template.push(wasmExports.MSG_FLOAT_TOKEN.valueOf());\\n            }\\n            else if (typeof value === 'string') {\\n                template.push(wasmExports.MSG_STRING_TOKEN.valueOf());\\n                template.push(value.length);\\n            }\\n            else {\\n                throw new Error(`invalid message value ${value}`);\\n            }\\n            return template;\\n        }, []);\\n        const templateArrayPointer = wasmExports.msg_createTemplate(template.length);\\n        const loweredTemplateArray = readTypedArray(wasmExports, Int32Array, templateArrayPointer);\\n        loweredTemplateArray.set(template);\\n        const messagePointer = wasmExports.msg_create(templateArrayPointer);\\n        message.forEach((value, index) => {\\n            if (typeof value === 'number') {\\n                wasmExports.msg_writeFloatToken(messagePointer, index, value);\\n            }\\n            else if (typeof value === 'string') {\\n                const stringPointer = lowerString(wasmExports, value);\\n                wasmExports.msg_writeStringToken(messagePointer, index, stringPointer);\\n            }\\n        });\\n        return messagePointer;\\n    };\\n\\n    const instantiateWasmModule = async (wasmBuffer, wasmImports = {}) => {\\n        const instanceAndModule = await WebAssembly.instantiate(wasmBuffer, {\\n            env: {\\n                abort: (messagePointer, _, lineNumber, columnNumber) => {\\n                    const message = liftString(wasmExports, messagePointer);\\n                    lineNumber = lineNumber;\\n                    columnNumber = columnNumber;\\n                    (() => {\\n                        throw Error(`${message} at ${lineNumber}:${columnNumber}`);\\n                    })();\\n                },\\n                seed: () => {\\n                    return (() => {\\n                        return Date.now() * Math.random();\\n                    })();\\n                },\\n                'console.log': (textPointer) => {\\n                    console.log(liftString(wasmExports, textPointer));\\n                },\\n            },\\n            ...wasmImports,\\n        });\\n        const wasmExports = instanceAndModule.instance\\n            .exports;\\n        return instanceAndModule.instance;\\n    };\\n\\n    const mapObject = (src, func) => {\\n        const dest = {};\\n        Object.entries(src).forEach(([key, srcValue], i) => {\\n            dest[key] = func(srcValue, key, i);\\n        });\\n        return dest;\\n    };\\n    const mapArray = (src, func) => {\\n        const dest = {};\\n        src.forEach((srcValue, i) => {\\n            const [key, destValue] = func(srcValue, i);\\n            dest[key] = destValue;\\n        });\\n        return dest;\\n    };\\n\\n    const createEngine = async (wasmBuffer) => {\\n        const engine = new AssemblyScriptWasmEngine(wasmBuffer);\\n        await engine.initialize();\\n        return engine;\\n    };\\n    class AssemblyScriptWasmEngine {\\n        constructor(wasmBuffer) {\\n            this.wasmBuffer = wasmBuffer;\\n        }\\n        async initialize() {\\n            this.metadata = await readMetadata(this.wasmBuffer);\\n            this.bitDepth = this.metadata.audioSettings.bitDepth;\\n            this.arrayType = getFloatArrayType(this.bitDepth);\\n            const wasmImports = {\\n                ...this._fsImports(),\\n                ...this._outletListenersImports(),\\n            };\\n            const wasmInstance = await instantiateWasmModule(this.wasmBuffer, {\\n                input: wasmImports,\\n            });\\n            this.wasmExports =\\n                wasmInstance.exports;\\n            this.commons = this._bindCommons();\\n            this.fs = this._bindFs();\\n            this.inletCallers = this._bindInletCallers();\\n            this.outletListeners = this._bindOutletListeners();\\n        }\\n        configure(sampleRate, blockSize) {\\n            this.blockSize = blockSize;\\n            this.metadata.audioSettings.blockSize = blockSize;\\n            this.metadata.audioSettings.sampleRate = sampleRate;\\n            this.wasmExports.configure(sampleRate, blockSize);\\n            this._updateWasmInOuts();\\n        }\\n        loop(input, output) {\\n            for (let channel = 0; channel < input.length; channel++) {\\n                this.wasmInput.set(input[channel], channel * this.blockSize);\\n            }\\n            this._updateWasmInOuts();\\n            this.wasmExports.loop();\\n            this._updateWasmInOuts();\\n            for (let channel = 0; channel < output.length; channel++) {\\n                output[channel].set(this.wasmOutput.subarray(this.blockSize * channel, this.blockSize * (channel + 1)));\\n            }\\n        }\\n        _updateWasmInOuts() {\\n            this.wasmOutput = readTypedArray(this.wasmExports, this.arrayType, this.wasmExports.getOutput());\\n            this.wasmInput = readTypedArray(this.wasmExports, this.arrayType, this.wasmExports.getInput());\\n        }\\n        _bindCommons() {\\n            return {\\n                getArray: (arrayName) => {\\n                    const arrayNamePointer = lowerString(this.wasmExports, arrayName);\\n                    const arrayPointer = this.wasmExports.commons_getArray(arrayNamePointer);\\n                    return readTypedArray(this.wasmExports, this.arrayType, arrayPointer);\\n                },\\n                setArray: (arrayName, array) => {\\n                    const stringPointer = lowerString(this.wasmExports, arrayName);\\n                    const { arrayPointer } = lowerFloatArray(this.wasmExports, this.bitDepth, array);\\n                    this.wasmExports.commons_setArray(stringPointer, arrayPointer);\\n                    this._updateWasmInOuts();\\n                },\\n            };\\n        }\\n        _bindFs() {\\n            return {\\n                sendReadSoundFileResponse: (operationId, status, sound) => {\\n                    let soundPointer = 0;\\n                    if (sound) {\\n                        soundPointer = lowerListOfFloatArrays(this.wasmExports, this.bitDepth, sound);\\n                    }\\n                    this.wasmExports.fs_onReadSoundFileResponse(operationId, status, soundPointer);\\n                    this._updateWasmInOuts();\\n                },\\n                sendWriteSoundFileResponse: this.wasmExports.fs_onWriteSoundFileResponse,\\n                sendSoundStreamData: (operationId, sound) => {\\n                    const soundPointer = lowerListOfFloatArrays(this.wasmExports, this.bitDepth, sound);\\n                    const writtenFrameCount = this.wasmExports.fs_onSoundStreamData(operationId, soundPointer);\\n                    this._updateWasmInOuts();\\n                    return writtenFrameCount;\\n                },\\n                closeSoundStream: this.wasmExports.fs_onCloseSoundStream,\\n                onReadSoundFile: () => undefined,\\n                onWriteSoundFile: () => undefined,\\n                onOpenSoundReadStream: () => undefined,\\n                onOpenSoundWriteStream: () => undefined,\\n                onSoundStreamData: () => undefined,\\n                onCloseSoundStream: () => undefined,\\n            };\\n        }\\n        _fsImports() {\\n            let wasmImports = {\\n                i_fs_readSoundFile: (operationId, urlPointer, infoPointer) => {\\n                    const url = liftString(this.wasmExports, urlPointer);\\n                    const info = liftMessage(this.wasmExports, infoPointer);\\n                    this.fs.onReadSoundFile(operationId, url, info);\\n                },\\n                i_fs_writeSoundFile: (operationId, soundPointer, urlPointer, infoPointer) => {\\n                    const sound = readListOfFloatArrays(this.wasmExports, this.bitDepth, soundPointer);\\n                    const url = liftString(this.wasmExports, urlPointer);\\n                    const info = liftMessage(this.wasmExports, infoPointer);\\n                    this.fs.onWriteSoundFile(operationId, sound, url, info);\\n                },\\n                i_fs_openSoundReadStream: (operationId, urlPointer, infoPointer) => {\\n                    const url = liftString(this.wasmExports, urlPointer);\\n                    const info = liftMessage(this.wasmExports, infoPointer);\\n                    this._updateWasmInOuts();\\n                    this.fs.onOpenSoundReadStream(operationId, url, info);\\n                },\\n                i_fs_openSoundWriteStream: (operationId, urlPointer, infoPointer) => {\\n                    const url = liftString(this.wasmExports, urlPointer);\\n                    const info = liftMessage(this.wasmExports, infoPointer);\\n                    this.fs.onOpenSoundWriteStream(operationId, url, info);\\n                },\\n                i_fs_sendSoundStreamData: (operationId, blockPointer) => {\\n                    const block = readListOfFloatArrays(this.wasmExports, this.bitDepth, blockPointer);\\n                    this.fs.onSoundStreamData(operationId, block);\\n                },\\n                i_fs_closeSoundStream: (...args) => this.fs.onCloseSoundStream(...args),\\n            };\\n            return wasmImports;\\n        }\\n        _bindInletCallers() {\\n            return mapObject(this.metadata.compilation.inletCallerSpecs, (inletIds, nodeId) => mapArray(inletIds, (inletId) => [\\n                inletId,\\n                (message) => {\\n                    const messagePointer = lowerMessage(this.wasmExports, message);\\n                    this.wasmExports[this.metadata.compilation.codeVariableNames\\n                        .inletCallers[nodeId][inletId]](messagePointer);\\n                },\\n            ]));\\n        }\\n        _bindOutletListeners() {\\n            return mapObject(this.metadata.compilation.outletListenerSpecs, (outletIds) => mapArray(outletIds, (outletId) => [\\n                outletId,\\n                {\\n                    onMessage: () => undefined,\\n                },\\n            ]));\\n        }\\n        _outletListenersImports() {\\n            const wasmImports = {};\\n            const { codeVariableNames } = this.metadata.compilation;\\n            Object.entries(this.metadata.compilation.outletListenerSpecs).forEach(([nodeId, outletIds]) => {\\n                outletIds.forEach((outletId) => {\\n                    const listenerName = codeVariableNames.outletListeners[nodeId][outletId];\\n                    wasmImports[listenerName] = (messagePointer) => {\\n                        const message = liftMessage(this.wasmExports, messagePointer);\\n                        this.outletListeners[nodeId][outletId].onMessage(message);\\n                    };\\n                });\\n            });\\n            return wasmImports;\\n        }\\n    }\\n    const readMetadata = async (wasmBuffer) => {\\n        const inputImports = {};\\n        const wasmModule = WebAssembly.Module.imports(new WebAssembly.Module(wasmBuffer));\\n        wasmModule\\n            .filter((imprt) => imprt.module === 'input' && imprt.kind === 'function')\\n            .forEach((imprt) => (inputImports[imprt.name] = () => undefined));\\n        const wasmInstance = await instantiateWasmModule(wasmBuffer, {\\n            input: inputImports,\\n        });\\n        const wasmExports = wasmInstance.exports;\\n        const stringPointer = wasmExports.metadata.valueOf();\\n        const metadataJSON = liftString(wasmExports, stringPointer);\\n        return JSON.parse(metadataJSON);\\n    };\\n\\n    exports.AssemblyScriptWasmEngine = AssemblyScriptWasmEngine;\\n    exports.createEngine = createEngine;\\n    exports.readMetadata = readMetadata;\\n\\n    return exports;\\n\\n})({});\\n//# sourceMappingURL=assemblyscript-wasm-bindings.iife.js.map\\n\";\n\nexport { AssemblyscriptWasmBindingsCode as default };\n//# sourceMappingURL=assemblyscript-wasm-bindings.iife.js.map\n","var fetchRetry = function (fetch, defaults) {\n  defaults = defaults || {};\n  if (typeof fetch !== 'function') {\n    throw new ArgumentError('fetch must be a function');\n  }\n\n  if (typeof defaults !== 'object') {\n    throw new ArgumentError('defaults must be an object');\n  }\n\n  if (defaults.retries !== undefined && !isPositiveInteger(defaults.retries)) {\n    throw new ArgumentError('retries must be a positive integer');\n  }\n\n  if (defaults.retryDelay !== undefined && !isPositiveInteger(defaults.retryDelay) && typeof defaults.retryDelay !== 'function') {\n    throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n  }\n\n  if (defaults.retryOn !== undefined && !Array.isArray(defaults.retryOn) && typeof defaults.retryOn !== 'function') {\n    throw new ArgumentError('retryOn property expects an array or function');\n  }\n\n  var baseDefaults = {\n    retries: 3,\n    retryDelay: 1000,\n    retryOn: [],\n  };\n\n  defaults = Object.assign(baseDefaults, defaults);\n\n  return function fetchRetry(input, init) {\n    var retries = defaults.retries;\n    var retryDelay = defaults.retryDelay;\n    var retryOn = defaults.retryOn;\n\n    if (init && init.retries !== undefined) {\n      if (isPositiveInteger(init.retries)) {\n        retries = init.retries;\n      } else {\n        throw new ArgumentError('retries must be a positive integer');\n      }\n    }\n\n    if (init && init.retryDelay !== undefined) {\n      if (isPositiveInteger(init.retryDelay) || (typeof init.retryDelay === 'function')) {\n        retryDelay = init.retryDelay;\n      } else {\n        throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n      }\n    }\n\n    if (init && init.retryOn) {\n      if (Array.isArray(init.retryOn) || (typeof init.retryOn === 'function')) {\n        retryOn = init.retryOn;\n      } else {\n        throw new ArgumentError('retryOn property expects an array or function');\n      }\n    }\n\n    // eslint-disable-next-line no-undef\n    return new Promise(function (resolve, reject) {\n      var wrappedFetch = function (attempt) {\n        var _input =\n          typeof Request !== 'undefined' && input instanceof Request\n            ? input.clone()\n            : input;\n        fetch(_input, init)\n          .then(function (response) {\n            if (Array.isArray(retryOn) && retryOn.indexOf(response.status) === -1) {\n              resolve(response);\n            } else if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                return Promise.resolve(retryOn(attempt, null, response))\n                  .then(function (retryOnResponse) {\n                    if(retryOnResponse) {\n                      retry(attempt, null, response);\n                    } else {\n                      resolve(response);\n                    }\n                  }).catch(reject);\n              } catch (error) {\n                reject(error);\n              }\n            } else {\n              if (attempt < retries) {\n                retry(attempt, null, response);\n              } else {\n                resolve(response);\n              }\n            }\n          })\n          .catch(function (error) {\n            if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                Promise.resolve(retryOn(attempt, error, null))\n                  .then(function (retryOnResponse) {\n                    if(retryOnResponse) {\n                      retry(attempt, error, null);\n                    } else {\n                      reject(error);\n                    }\n                  })\n                  .catch(function(error) {\n                    reject(error);\n                  });\n              } catch(error) {\n                reject(error);\n              }\n            } else if (attempt < retries) {\n              retry(attempt, error, null);\n            } else {\n              reject(error);\n            }\n          });\n      };\n\n      function retry(attempt, error, response) {\n        var delay = (typeof retryDelay === 'function') ?\n          retryDelay(attempt, error, response) : retryDelay;\n        setTimeout(function () {\n          wrappedFetch(++attempt);\n        }, delay);\n      }\n\n      wrappedFetch(0);\n    });\n  };\n};\n\nfunction isPositiveInteger(value) {\n  return Number.isInteger(value) && value >= 0;\n}\n\nfunction ArgumentError(message) {\n  this.name = 'ArgumentError';\n  this.message = message;\n}\n\nexport { fetchRetry as default };\n//# sourceMappingURL=index.js.map\n","import fetchRetry$1 from '../node_modules/fetch-retry/index.js';\n\nconst fetchRetry = fetchRetry$1(fetch);\nconst addModule = async (context, processorCode) => {\n    const blob = new Blob([processorCode], { type: 'text/javascript' });\n    const workletProcessorUrl = URL.createObjectURL(blob);\n    return context.audioWorklet.addModule(workletProcessorUrl);\n};\n// TODO : testing\nconst fetchFile = async (url) => {\n    let response;\n    try {\n        response = await fetchRetry(url, { retries: 3 });\n    }\n    catch (err) {\n        throw new FileError(response.status, err.toString());\n    }\n    if (!response.ok) {\n        const responseText = await response.text();\n        throw new FileError(response.status, responseText);\n    }\n    return response.arrayBuffer();\n};\nconst audioBufferToArray = (audioBuffer) => {\n    const sound = [];\n    for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\n        sound.push(audioBuffer.getChannelData(channel));\n    }\n    return sound;\n};\n// TODO : testing\nconst fixSoundChannelCount = (sound, targetChannelCount) => {\n    if (sound.length === 0) {\n        throw new Error(`Received empty sound`);\n    }\n    const floatArrayType = sound[0].constructor;\n    const frameCount = sound[0].length;\n    const fixedSound = sound.slice(0, targetChannelCount);\n    while (sound.length < targetChannelCount) {\n        fixedSound.push(new floatArrayType(frameCount));\n    }\n    return fixedSound;\n};\nclass FileError extends Error {\n    constructor(status, msg) {\n        super(`Error ${status} : ${msg}`);\n    }\n}\n\nexport { FileError, addModule, audioBufferToArray, fetchFile, fixSoundChannelCount };\n//# sourceMappingURL=utils.js.map\n","import _WebPdWorkletProcessorCode from './WebPdWorkletProcessor.generated.js';\nimport AssemblyscriptWasmBindingsCode from '../../WebPd_compiler-js/dist/assemblyscript-wasm-bindings.iife.js';\nimport { addModule } from './utils.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// Concatenate WorkletProcessor code with the Wasm bindings it needs\nconst WebPdWorkletProcessorCode = AssemblyscriptWasmBindingsCode + ';\\n' + _WebPdWorkletProcessorCode;\nconst registerWebPdWorkletNode = (context) => {\n    return addModule(context, WebPdWorkletProcessorCode);\n};\n\nexport { WebPdWorkletProcessorCode, registerWebPdWorkletNode };\n//# sourceMappingURL=index.js.map\n","import { audioBufferToArray, fixSoundChannelCount, fetchFile } from '../utils.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst FILES = {};\nconst STREAMS = {};\nclass FakeStream {\n    constructor(url, sound) {\n        this.url = url;\n        this.sound = sound;\n        this.frameCount = sound[0].length;\n        this.readPosition = 0;\n    }\n}\nconst read = async (url) => {\n    if (FILES[url]) {\n        return FILES[url];\n    }\n    const arrayBuffer = await fetchFile(url);\n    return {\n        type: 'binary',\n        data: arrayBuffer,\n    };\n};\n// TODO : testing\nconst readSound = async (url, context) => {\n    let fakeFile = FILES[url] || await read(url);\n    switch (fakeFile.type) {\n        case 'binary':\n            const audioBuffer = await context.decodeAudioData(fakeFile.data);\n            return audioBufferToArray(audioBuffer);\n        case 'sound':\n            // We copy the data here o it can be manipulated freely by the host.\n            // e.g. if the buffer is sent as transferrable to the node we don't want the original to be transferred.\n            return fakeFile.data.map(array => array.slice());\n    }\n};\nconst writeSound = async (sound, url) => {\n    FILES[url] = {\n        type: 'sound',\n        data: sound,\n    };\n};\nconst readStreamSound = async (operationId, url, channelCount, context) => {\n    const sound = await readSound(url, context);\n    STREAMS[operationId] = new FakeStream(url, fixSoundChannelCount(sound, channelCount));\n    return STREAMS[operationId];\n};\nconst writeStreamSound = async (operationId, url, channelCount) => {\n    const emptySound = [];\n    for (let channel = 0; channel < channelCount; channel++) {\n        emptySound.push(new Float32Array(0));\n    }\n    STREAMS[operationId] = new FakeStream(url, emptySound);\n    FILES[url] = {\n        type: 'sound',\n        data: emptySound,\n    };\n    return STREAMS[operationId];\n};\nconst getStream = (operationId) => {\n    return STREAMS[operationId];\n};\nconst killStream = (operationId) => {\n    console.log('KILL STREAM', operationId);\n    delete STREAMS[operationId];\n};\nconst pullBlock = (stream, frameCount) => {\n    const block = stream.sound.map((array) => array.slice(stream.readPosition, stream.readPosition + frameCount));\n    stream.readPosition += frameCount;\n    return block;\n};\nconst pushBlock = (stream, block) => {\n    stream.sound = stream.sound.map((channelData, channel) => {\n        const concatenated = new Float32Array(channelData.length + block[channel].length);\n        concatenated.set(channelData);\n        concatenated.set(block[channel], channelData.length);\n        return concatenated;\n    });\n    stream.frameCount = stream.sound[0].length;\n    FILES[stream.url].data = stream.sound;\n};\nvar fakeFs = {\n    writeSound, readSound, readStreamSound, writeStreamSound, pullBlock, pushBlock\n};\n\nexport { FakeStream, fakeFs as default, getStream, killStream, pullBlock, pushBlock, readSound };\n//# sourceMappingURL=fake-filesystem.js.map\n","import { killStream } from './fake-filesystem.js';\n\nvar closeSoundStream = async (node, payload) => {\n    if (payload.functionName === 'onCloseSoundStream') {\n        killStream(payload.arguments[0]);\n    }\n};\n\nexport { closeSoundStream as default };\n//# sourceMappingURL=close-sound-stream.js.map\n","const FS_OPERATION_SUCCESS = 0;\nconst FS_OPERATION_FAILURE = 1;\n\nexport { FS_OPERATION_FAILURE, FS_OPERATION_SUCCESS };\n//# sourceMappingURL=constants.js.map\n","import { FS_OPERATION_SUCCESS, FS_OPERATION_FAILURE } from '../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/constants.js';\nimport { fixSoundChannelCount } from '../utils.js';\nimport fakeFs from './fake-filesystem.js';\n\nvar readSoundFile = async (node, payload) => {\n    if (payload.functionName === 'onReadSoundFile') {\n        const [operationId, url, [channelCount]] = payload.arguments;\n        let operationStatus = FS_OPERATION_SUCCESS;\n        let sound = null;\n        try {\n            sound = await fakeFs.readSound(url, node.context);\n        }\n        catch (err) {\n            operationStatus = FS_OPERATION_FAILURE;\n            console.error(err);\n        }\n        if (sound) {\n            sound = fixSoundChannelCount(sound, channelCount);\n        }\n        node.port.postMessage({\n            type: 'fs',\n            payload: {\n                functionName: 'sendReadSoundFileResponse',\n                arguments: [operationId, operationStatus, sound],\n            },\n        }, \n        // Add as transferables to avoid copies between threads\n        sound.map((array) => array.buffer));\n    }\n    else if (payload.functionName === 'sendReadSoundFileResponse_return') ;\n};\n\nexport { readSoundFile as default };\n//# sourceMappingURL=read-sound-file.js.map\n","import { FS_OPERATION_FAILURE, FS_OPERATION_SUCCESS } from '../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/constants.js';\nimport fakeFs, { getStream, killStream, pullBlock } from './fake-filesystem.js';\n\nconst BUFFER_HIGH = 10 * 44100;\nconst BUFFER_LOW = BUFFER_HIGH / 2;\nvar readSoundStream = async (node, payload) => {\n    if (payload.functionName === 'onOpenSoundReadStream') {\n        const [operationId, url, [channelCount]] = payload.arguments;\n        try {\n            await fakeFs.readStreamSound(operationId, url, channelCount, node.context);\n        }\n        catch (err) {\n            console.error(err);\n            node.port.postMessage({\n                type: 'fs',\n                payload: {\n                    functionName: 'closeSoundStream',\n                    arguments: [operationId, FS_OPERATION_FAILURE],\n                },\n            });\n            return;\n        }\n        streamLoop(node, operationId, 0);\n    }\n    else if (payload.functionName === 'sendSoundStreamData_return') {\n        const stream = getStream(payload.operationId);\n        if (!stream) {\n            throw new Error(`unknown stream ${payload.operationId}`);\n        }\n        streamLoop(node, payload.operationId, payload.returned);\n    }\n    else if (payload.functionName === 'closeSoundStream_return') {\n        const stream = getStream(payload.operationId);\n        if (stream) {\n            killStream(payload.operationId);\n        }\n    }\n};\nconst streamLoop = (node, operationId, framesAvailableInEngine) => {\n    const sampleRate = node.context.sampleRate;\n    const secondsToThreshold = Math.max(framesAvailableInEngine - BUFFER_LOW, 10) / sampleRate;\n    const framesToSend = BUFFER_HIGH -\n        (framesAvailableInEngine - secondsToThreshold * sampleRate);\n    setTimeout(() => {\n        const stream = getStream(operationId);\n        if (!stream) {\n            console.log(`stream ${operationId} was maybe closed`);\n            return;\n        }\n        if (stream.readPosition < stream.frameCount) {\n            const block = pullBlock(stream, framesToSend);\n            node.port.postMessage({\n                type: 'fs',\n                payload: {\n                    functionName: 'sendSoundStreamData',\n                    arguments: [operationId, block],\n                },\n            }, \n            // Add as transferables to avoid copies between threads\n            block.map((array) => array.buffer));\n        }\n        else {\n            node.port.postMessage({\n                type: 'fs',\n                payload: {\n                    functionName: 'closeSoundStream',\n                    arguments: [operationId, FS_OPERATION_SUCCESS],\n                },\n            });\n        }\n    }, secondsToThreshold * 1000);\n};\n\nexport { readSoundStream as default };\n//# sourceMappingURL=read-sound-stream.js.map\n","import { FS_OPERATION_SUCCESS } from '../../../WebPd_compiler-js/dist/WebPd_compiler-js/src/constants.js';\nimport { fixSoundChannelCount } from '../utils.js';\nimport fakeFs from './fake-filesystem.js';\n\nvar writeSoundFile = async (node, payload) => {\n    if (payload.functionName === 'onWriteSoundFile') {\n        const [operationId, sound, url, [channelCount]] = payload.arguments;\n        const fixedSound = fixSoundChannelCount(sound, channelCount);\n        await fakeFs.writeSound(fixedSound, url);\n        let operationStatus = FS_OPERATION_SUCCESS;\n        node.port.postMessage({\n            type: 'fs',\n            payload: {\n                functionName: 'sendWriteSoundFileResponse',\n                arguments: [operationId, operationStatus],\n            },\n        });\n    }\n    else if (payload.functionName === 'sendWriteSoundFileResponse_return') ;\n};\n\nexport { writeSoundFile as default };\n//# sourceMappingURL=write-sound-file.js.map\n","import fakeFs, { pushBlock, getStream, killStream } from './fake-filesystem.js';\n\nvar writeSoundStream = async (_, payload) => {\n    if (payload.functionName === 'onOpenSoundWriteStream') {\n        const [operationId, url, [channelCount]] = payload.arguments;\n        await fakeFs.writeStreamSound(operationId, url, channelCount);\n    }\n    else if (payload.functionName === 'onSoundStreamData') {\n        const [operationId, sound] = payload.arguments;\n        const stream = getStream(operationId);\n        if (!stream) {\n            throw new Error(`unknown stream ${operationId}`);\n        }\n        pushBlock(stream, sound);\n    }\n    else if (payload.functionName === 'closeSoundStream_return') {\n        const stream = getStream(payload.operationId);\n        if (stream) {\n            killStream(payload.operationId);\n        }\n    }\n};\n\nexport { writeSoundStream as default };\n//# sourceMappingURL=write-sound-stream.js.map\n","import closeSoundStream from './close-sound-stream.js';\nimport readSoundFile from './read-sound-file.js';\nimport readSoundStream from './read-sound-stream.js';\nimport writeSoundFile from './write-sound-file.js';\nimport writeSoundStream from './write-sound-stream.js';\n\nvar index = async (node, messageEvent) => {\n    const message = messageEvent.data;\n    const { payload } = message;\n    if (message.type !== 'fs') {\n        throw new Error(`Unknown message type from node ${message.type}`);\n    }\n    if (payload.functionName === 'onReadSoundFile' ||\n        payload.functionName === 'sendReadSoundFileResponse_return') {\n        readSoundFile(node, payload);\n    }\n    else if (payload.functionName === 'onOpenSoundReadStream' ||\n        payload.functionName === 'sendSoundStreamData_return') {\n        readSoundStream(node, payload);\n    }\n    else if (payload.functionName === 'onWriteSoundFile' ||\n        payload.functionName === 'sendWriteSoundFileResponse_return') {\n        writeSoundFile(node, payload);\n    }\n    else if (payload.functionName === 'onOpenSoundWriteStream' ||\n        payload.functionName === 'onSoundStreamData') {\n        writeSoundStream(node, payload);\n    }\n    else if (payload.functionName === 'closeSoundStream_return') {\n        writeSoundStream(node, payload);\n        readSoundStream(node, payload);\n    }\n    else if (payload.functionName === 'onCloseSoundStream') {\n        closeSoundStream(node, payload);\n    }\n    else {\n        throw new Error(`Unknown callback ${payload.functionName}`);\n    }\n};\n\nexport { index as default };\n//# sourceMappingURL=index.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// TODO : manage transferables\nclass WebPdWorkletNode extends AudioWorkletNode {\n    constructor(context) {\n        super(context, 'webpd-node', {\n            numberOfOutputs: 1,\n            outputChannelCount: [2],\n        });\n    }\n    destroy() {\n        this.port.postMessage({\n            type: 'destroy',\n            payload: {},\n        });\n    }\n}\n\nexport { WebPdWorkletNode as default };\n//# sourceMappingURL=WebPdWorkletNode.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst CONTROL_TYPE = {\n    floatatom: 'floatatom',\n    symbolatom: 'symbolatom',\n    bng: 'bng',\n    tgl: 'tgl',\n    nbx: 'nbx',\n    vsl: 'vsl',\n    hsl: 'hsl',\n    vradio: 'vradio',\n    hradio: 'hradio',\n    vu: 'vu',\n    cnv: 'cnv',\n};\n\nexport { CONTROL_TYPE };\n//# sourceMappingURL=types.js.map\n","var IdNamespaces;\n(function (IdNamespaces) {\n    IdNamespaces[\"PD\"] = \"n\";\n    IdNamespaces[\"MIXER\"] = \"m\";\n})(IdNamespaces || (IdNamespaces = {}));\n//# sourceMappingURL=to-dsp-graph.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// Regular expressions to detect escaped special chars.\nconst ESCAPED_DOLLAR_VAR_RE_GLOB = /\\\\(\\$\\d+)/g;\nconst ESCAPED_COMMA_VAR_RE_GLOB = /\\\\,/g;\nconst ESCAPED_SEMICOLON_VAR_RE_GLOB = /\\\\;/g;\n// Parses argument to a string or a number.\n// Needs to handle the case when the argument is already a number as in the process of gathering\n// arguments we sometimes insert a number.\nconst parseArg = (rawArg) => {\n    // Try to parse arg as a number\n    try {\n        return parseNumberArg(rawArg);\n    }\n    catch (err) {\n        if (!(err instanceof ValueError)) {\n            throw err;\n        }\n    }\n    // Try to parse arg as a string\n    try {\n        return parseStringArg(rawArg);\n    }\n    catch (err) {\n        if (!(err instanceof ValueError)) {\n            throw err;\n        }\n    }\n    throw new ValueError(`Not a valid arg ${rawArg}`);\n};\n// Parses a float from a .pd file. Returns the parsed float or throws ValueError.\nconst parseNumberArg = (val) => {\n    if (isNumber(val)) {\n        return val;\n    }\n    else if (isString(val)) {\n        // `Number` is better than `parseFloat` for example \n        // which is too flexible.\n        // REF : https://stackoverflow.com/questions/3257112/is-it-possible-to-parsefloat-the-whole-string\n        const parsed = Number(val);\n        if (isNaN(parsed)) {\n            throw new ValueError(`Not a valid number arg ${val}`);\n        }\n        return parsed;\n    }\n    else {\n        throw new ValueError(`Not a valid number arg ${val}`);\n    }\n};\n// Parses a '0' or '1' from a .pd file.\nconst parseBoolArg = (val) => {\n    const parsed = parseNumberArg(val);\n    if (parsed === 0 || parsed === 1) {\n        return parsed;\n    }\n    throw new ValueError(`Should be 0 or 1`);\n};\n// Apply some operations to a string arg\nconst parseStringArg = (val, emptyValue = null) => {\n    if (!isString(val)) {\n        throw new ValueError(`Not a valid string arg ${val}`);\n    }\n    // If empty value, make real empty string\n    if (emptyValue !== null && val === emptyValue) {\n        return '';\n    }\n    // Unescape special characters\n    let arg = val\n        .replace(ESCAPED_COMMA_VAR_RE_GLOB, ',')\n        .replace(ESCAPED_SEMICOLON_VAR_RE_GLOB, ';');\n    // Unescape dollars\n    let matched;\n    while ((matched = ESCAPED_DOLLAR_VAR_RE_GLOB.exec(arg))) {\n        arg = arg.replace(matched[0], matched[1]);\n    }\n    return arg;\n};\nclass ValueError extends Error {\n}\nconst isNumber = (obj) => Number.isFinite(obj);\nconst isString = (obj) => typeof obj === 'string';\n\nexport { ValueError, parseArg, parseBoolArg, parseNumberArg, parseStringArg };\n//# sourceMappingURL=args.js.map\n","import { parseBoolArg, parseNumberArg, parseArg, parseStringArg } from './args.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst hydratePatch = (id, { tokens: canvasTokens }, { tokens: coordsTokens }) => {\n    const patch = {\n        id,\n        layout: {\n            windowX: parseInt(canvasTokens[2], 10),\n            windowY: parseInt(canvasTokens[3], 10),\n            windowWidth: parseInt(canvasTokens[4], 10),\n            windowHeight: parseInt(canvasTokens[5], 10),\n        },\n        args: [canvasTokens[6]],\n        nodes: {},\n        connections: [],\n        inlets: [],\n        outlets: [],\n    };\n    if (typeof canvasTokens[7] !== 'undefined') {\n        patch.layout.openOnLoad = parseBoolArg(canvasTokens[7]);\n    }\n    if (typeof coordsTokens[8] !== 'undefined') {\n        patch.layout.graphOnParent = parseBoolArg(coordsTokens[8]);\n    }\n    if (patch.layout.graphOnParent === 1) {\n        patch.layout = {\n            ...patch.layout,\n            viewportX: coordsTokens[9] ? parseInt(coordsTokens[9], 10) : 0,\n            viewportY: coordsTokens[10] ? parseInt(coordsTokens[10], 10) : 0,\n            viewportWidth: parseInt(coordsTokens[6], 10),\n            viewportHeight: parseInt(coordsTokens[7], 10),\n        };\n    }\n    return patch;\n};\nconst hydrateArray = (id, { tokens }) => {\n    const arrayName = tokens[2];\n    const arraySize = parseFloat(tokens[3]);\n    // Options flag :\n    // first bit if for `saveContents` second for `drawAs`\n    const optionsFlag = parseFloat(tokens[5]);\n    const saveContents = (optionsFlag % 2);\n    const drawAs = ['polygon', 'points', 'bezier'][optionsFlag >>> 1];\n    return {\n        id,\n        args: [arrayName, arraySize, saveContents],\n        data: saveContents ? Array(arraySize).fill(0) : null,\n        layout: {\n            drawAs,\n        },\n    };\n};\nconst hydrateNodePatch = (id, { tokens }) => {\n    const canvasType = tokens[4];\n    const args = [];\n    if (canvasType !== 'pd' && canvasType !== 'graph') {\n        throw new Error(`unknown canvasType : ${canvasType}`);\n    }\n    // add subpatch name\n    if (canvasType === 'pd') {\n        args.push(tokens[5]);\n    }\n    return {\n        id,\n        type: canvasType,\n        patchId: tokens[1],\n        nodeClass: 'subpatch',\n        args,\n        layout: {\n            x: parseInt(tokens[2], 10),\n            y: parseInt(tokens[3], 10),\n        },\n    };\n};\nconst hydrateNodeArray = (id, { tokens }) => ({\n    id,\n    args: [],\n    type: 'array',\n    nodeClass: 'array',\n    arrayId: tokens[1],\n});\nconst hydrateNodeBase = (id, tokens) => {\n    const elementType = tokens[1];\n    let type; // the object name\n    let args; // the construction args for the object\n    // 2 categories here :\n    //  - elems whose name is `elementType`\n    //  - elems whose name is `token[4]`\n    if (elementType === 'obj') {\n        type = tokens[4];\n        args = tokens.slice(5);\n    }\n    else {\n        type = elementType;\n        args = tokens.slice(4);\n    }\n    // If text, we need to re-join all tokens\n    if (elementType === 'text') {\n        args = [tokens.slice(4).join(' ')];\n    }\n    return {\n        id,\n        type,\n        args,\n        layout: {\n            x: parseNumberArg(tokens[2]),\n            y: parseNumberArg(tokens[3]),\n        },\n    };\n};\nconst hydrateConnection = ({ tokens, }) => ({\n    source: {\n        nodeId: tokens[2],\n        portletId: parseInt(tokens[3], 10),\n    },\n    sink: {\n        nodeId: tokens[4],\n        portletId: parseInt(tokens[5], 10),\n    },\n});\nconst hydrateNodeGeneric = (nodeBase) => {\n    const node = {\n        ...nodeBase,\n        nodeClass: 'generic',\n    };\n    node.args = node.args.map(parseArg);\n    return node;\n};\n// This is put here just for readability of the main `parse` function\nconst hydrateNodeControl = (nodeBase) => {\n    const args = nodeBase.args;\n    const node = {\n        ...nodeBase,\n        type: nodeBase.type,\n        nodeClass: 'control',\n    };\n    if (node.type === 'floatatom' || node.type === 'symbolatom') {\n        // <width> <lower_limit> <upper_limit> <label_pos> <label> <receive> <send>\n        node.layout = {\n            ...node.layout,\n            width: parseNumberArg(args[0]),\n            labelPos: parseNumberArg(args[3]),\n            label: parseStringArg(args[4], '-'),\n        };\n        node.args = [\n            parseNumberArg(args[1]),\n            parseNumberArg(args[2]),\n            parseStringArg(args[5], '-'),\n            parseStringArg(args[6], '-'),\n        ];\n    }\n    else if (node.type === 'bng') {\n        // <size> <hold> <interrupt> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color>\n        node.layout = {\n            ...node.layout,\n            size: parseNumberArg(args[0]),\n            hold: parseNumberArg(args[1]),\n            interrupt: parseNumberArg(args[2]),\n            label: parseStringArg(args[6], 'empty'),\n            labelX: parseNumberArg(args[7]),\n            labelY: parseNumberArg(args[8]),\n            labelFont: args[9],\n            labelFontSize: parseNumberArg(args[10]),\n            bgColor: args[11],\n            fgColor: args[12],\n            labelColor: args[13],\n        };\n        node.args = [\n            parseBoolArg(args[3]),\n            parseStringArg(args[4], 'empty'),\n            parseStringArg(args[5], 'empty'),\n        ];\n    }\n    else if (node.type === 'tgl') {\n        // <size> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <init_value> <default_value>\n        node.layout = {\n            ...node.layout,\n            size: parseNumberArg(args[0]),\n            label: parseStringArg(args[4], 'empty'),\n            labelX: parseNumberArg(args[5]),\n            labelY: parseNumberArg(args[6]),\n            labelFont: args[7],\n            labelFontSize: parseNumberArg(args[8]),\n            bgColor: args[9],\n            fgColor: args[10],\n            labelColor: args[11],\n        };\n        node.args = [\n            parseNumberArg(args[13]),\n            parseBoolArg(args[1]),\n            parseNumberArg(args[12]),\n            parseStringArg(args[2], 'empty'),\n            parseStringArg(args[3], 'empty'),\n        ];\n    }\n    else if (node.type === 'nbx') {\n        // !!! doc is inexact here, logHeight is not at the specified position, and initial value of the nbx was missing.\n        // <size> <height> <min> <max> <log> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <log_height>\n        node.layout = {\n            ...node.layout,\n            widthDigits: parseNumberArg(args[0]),\n            height: parseNumberArg(args[1]),\n            log: parseNumberArg(args[4]),\n            label: parseStringArg(args[8], 'empty'),\n            labelX: parseNumberArg(args[9]),\n            labelY: parseNumberArg(args[10]),\n            labelFont: args[11],\n            labelFontSize: parseNumberArg(args[12]),\n            bgColor: args[13],\n            fgColor: args[14],\n            labelColor: args[15],\n            logHeight: args[17],\n        };\n        node.args = [\n            parseNumberArg(args[2]),\n            parseNumberArg(args[3]),\n            parseBoolArg(args[5]),\n            parseNumberArg(args[16]),\n            parseStringArg(args[6], 'empty'),\n            parseStringArg(args[7], 'empty'),\n        ];\n    }\n    else if (node.type === 'vsl' || node.type === 'hsl') {\n        // <width> <height> <min> <max> <log> <init> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <default_value> <steady_on_click>\n        node.layout = {\n            ...node.layout,\n            width: parseNumberArg(args[0]),\n            height: parseNumberArg(args[1]),\n            log: parseNumberArg(args[4]),\n            label: parseStringArg(args[8], 'empty'),\n            labelX: parseNumberArg(args[9]),\n            labelY: parseNumberArg(args[10]),\n            labelFont: args[11],\n            labelFontSize: parseNumberArg(args[12]),\n            bgColor: args[13],\n            fgColor: args[14],\n            labelColor: args[15],\n            steadyOnClick: args[17],\n        };\n        const minValue = parseNumberArg(args[2]);\n        const maxValue = parseNumberArg(args[3]);\n        const isLogScale = parseBoolArg(args[4]);\n        const pixValue = parseNumberArg(args[16]);\n        const pixSize = node.type === 'hsl' ? node.layout.width : node.layout.height;\n        let initValue = 0;\n        if (isLogScale) {\n            const k = Math.log(maxValue / minValue) / (pixSize - 1);\n            initValue = minValue * Math.exp(k * pixValue * 0.01);\n        }\n        else {\n            // Reversed engineered formula for the initial value.\n            initValue =\n                minValue +\n                    ((maxValue - minValue) * pixValue) / ((pixSize - 1) * 100);\n        }\n        node.args = [\n            minValue,\n            maxValue,\n            parseBoolArg(args[5]),\n            initValue,\n            parseStringArg(args[6], 'empty'),\n            parseStringArg(args[7], 'empty'),\n        ];\n    }\n    else if (node.type === 'vradio' || node.type === 'hradio') {\n        // <size> <new_old> <init> <number> <send> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <fg_color> <label_color> <default_value>\n        node.layout = {\n            ...node.layout,\n            size: parseNumberArg(args[0]),\n            label: parseStringArg(args[6], 'empty'),\n            labelX: parseNumberArg(args[7]),\n            labelY: parseNumberArg(args[8]),\n            labelFont: args[9],\n            labelFontSize: parseNumberArg(args[10]),\n            bgColor: args[11],\n            fgColor: args[12],\n            labelColor: args[13],\n        };\n        node.args = [\n            parseNumberArg(args[3]),\n            parseBoolArg(args[1]),\n            parseNumberArg(args[14]),\n            parseStringArg(args[4], 'empty'),\n            parseStringArg(args[5], 'empty'),\n            parseBoolArg(args[2]),\n        ];\n    }\n    else if (node.type === 'vu') {\n        // <width> <height> <receive> <label> <x_off> <y_off> <font> <fontsize> <bg_color> <label_color> <scale> <?>\n        node.layout = {\n            ...node.layout,\n            width: parseNumberArg(args[0]),\n            height: parseNumberArg(args[1]),\n            label: parseStringArg(args[3], 'empty'),\n            labelX: parseNumberArg(args[4]),\n            labelY: parseNumberArg(args[5]),\n            labelFont: args[6],\n            labelFontSize: parseNumberArg(args[7]),\n            bgColor: args[8],\n            labelColor: args[9],\n            log: parseNumberArg(args[10]),\n        };\n        node.args = [parseStringArg(args[2], 'empty'), args[11]];\n    }\n    else if (node.type === 'cnv') {\n        // <size> <width> <height> <send> <receive> <label> <x_off> <y_off> <font> <font_size> <bg_color> <label_color> <?>\n        node.layout = {\n            ...node.layout,\n            size: parseNumberArg(args[0]),\n            width: parseNumberArg(args[1]),\n            height: parseNumberArg(args[2]),\n            label: parseStringArg(args[5], 'empty'),\n            labelX: parseNumberArg(args[6]),\n            labelY: parseNumberArg(args[7]),\n            labelFont: args[8],\n            labelFontSize: parseNumberArg(args[9]),\n            bgColor: args[10],\n            labelColor: args[11],\n        };\n        node.args = [parseStringArg(args[3], 'empty'), parseStringArg(args[4], 'empty'), args[12]];\n    }\n    else {\n        throw new Error(`Unexpected control node ${node.type}`);\n    }\n    return node;\n};\nfunction hydrateLineAfterComma(node, lineAfterComma) {\n    // Handling stuff after the comma\n    // I have no idea what's the specification for this, so this is really reverse\n    // engineering on what appears in pd files.\n    if (lineAfterComma) {\n        const afterCommaTokens = lineAfterComma;\n        while (afterCommaTokens.length) {\n            const command = afterCommaTokens.shift();\n            if (command === 'f') {\n                node.layout.width =\n                    parseNumberArg(afterCommaTokens.shift());\n            }\n        }\n    }\n    return node;\n}\n\nexport { hydrateArray, hydrateConnection, hydrateLineAfterComma, hydrateNodeArray, hydrateNodeBase, hydrateNodeControl, hydrateNodeGeneric, hydrateNodePatch, hydratePatch };\n//# sourceMappingURL=hydrate.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// Regular expression to split tokens in a message.\nconst TOKENS_RE = /(\\s*\\\\,\\s*)|(\\s*\\\\;\\s*)|\\s+|\\r\\n?|\\n/;\nconst AFTER_COMMA_RE = /,(?!\\\\)/;\n// Regular expression for finding valid lines of Pd in a file\nconst LINES_RE = /(#((.|\\r|\\n)*?)[^\\\\\\\\])\\r{0,1}\\n{0,1};\\r{0,1}(\\n|$)/gi;\n// Helper function to reverse a string\nconst _reverseString = (s) => s.split('').reverse().join('');\nvar tokenize = (pdString) => {\n    const tokenizedLines = [];\n    // use our regular expression to match instances of valid Pd lines\n    LINES_RE.lastIndex = 0; // reset lastIndex, in case the previous call threw an error\n    let lineMatch;\n    while ((lineMatch = LINES_RE.exec(pdString))) {\n        // In order to support object width, pd vanilla adds something like \", f 10\" at the end\n        // of the line. So we need to look for non-escaped comma, and get that part after it.\n        // Doing that is annoying in JS since regexps have no look-behind assertions.\n        // The hack is to reverse the string, and use a regexp look-forward assertion.\n        const lineParts = _reverseString(lineMatch[1])\n            .split(AFTER_COMMA_RE)\n            .reverse()\n            .map(_reverseString);\n        tokenizedLines.push({\n            tokens: tokenizeLine(lineParts[0]),\n            lineAfterComma: lineParts[1]\n                ? tokenizeLine(lineParts[1])\n                : undefined,\n        });\n    }\n    return tokenizedLines;\n};\nconst tokenizeLine = (line) => {\n    const matches = Array.from(line.matchAll(new RegExp(TOKENS_RE, 'g')));\n    const tokens = [];\n    matches.forEach((match, i) => {\n        const tokenStart = i === 0 ? 0 : matches[i - 1].index + matches[i - 1][0].length;\n        const tokenEnd = match.index;\n        const token = line.slice(tokenStart, tokenEnd);\n        if (token.length) {\n            tokens.push(token);\n        }\n        if (match[1]) {\n            tokens.push(',');\n        }\n        else if (match[2]) {\n            tokens.push(';');\n        }\n    });\n    const lastMatch = matches.slice(-1)[0];\n    if (lastMatch) {\n        tokens.push(line.slice(lastMatch.index + lastMatch[0].length));\n    }\n    return tokens;\n};\n\nexport { AFTER_COMMA_RE, LINES_RE, TOKENS_RE, tokenize as default };\n//# sourceMappingURL=tokenize.js.map\n","import { CONTROL_TYPE } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/types.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { hydratePatch, hydrateArray, hydrateNodePatch, hydrateNodeArray, hydrateNodeBase, hydrateNodeControl, hydrateLineAfterComma, hydrateNodeGeneric, hydrateConnection } from './hydrate.js';\nimport tokenize from './tokenize.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst nextPatchId = () => `${++nextPatchId.counter}`;\nnextPatchId.counter = -1;\nconst nextArrayId = () => `${++nextArrayId.counter}`;\nnextArrayId.counter = -1;\nconst NODES = ['obj', 'floatatom', 'symbolatom', 'msg', 'text'];\nconst _tokensMatch = (tokens, ...values) => values.every((value, i) => value === tokens[i]);\n/** Parses a Pd file, returns a simplified JSON version */\nvar parse = (pdString) => {\n    let pd = {\n        patches: {},\n        arrays: {},\n    };\n    let tokenizedLines = tokenize(pdString);\n    let patchTokenizedLinesMap = {};\n    [pd, tokenizedLines, patchTokenizedLinesMap] = parsePatches(pd, tokenizedLines, patchTokenizedLinesMap);\n    Object.values(pd.patches).forEach((patch) => {\n        let patchTokenizedLines = patchTokenizedLinesMap[patch.id];\n        [pd, patchTokenizedLines] = parseArrays(pd, patchTokenizedLines);\n        [patch, patchTokenizedLines] = parseNodesAndConnections(patch, patchTokenizedLines);\n        patch = computePatchPortlets(patch);\n        if (patchTokenizedLines.length) {\n            throw new Error(`invalid chunks : ${patchTokenizedLines.map((l) => l.tokens)}`);\n        }\n        pd.patches[patch.id] = patch;\n    });\n    return pd;\n};\nconst parsePatches = (pd, tokenizedLines, patchTokenizedLinesMap) => {\n    pd = {\n        patches: { ...pd.patches },\n        arrays: { ...pd.arrays },\n    };\n    tokenizedLines = [...tokenizedLines];\n    patchTokenizedLinesMap = { ...patchTokenizedLinesMap };\n    const patchId = nextPatchId();\n    const patchTokenizedLines = [];\n    let patchCanvasTokens;\n    let patchCoordsTokens = { tokens: [] };\n    let lineIndex = -1;\n    while (tokenizedLines.length) {\n        const { tokens } = tokenizedLines[0];\n        lineIndex++;\n        // First line of the patch / subpatch, initializes the patch\n        if (_tokensMatch(tokens, '#N', 'canvas') && lineIndex === 0) {\n            patchCanvasTokens = tokenizedLines.shift();\n            // If not first line, starts a subpatch\n        }\n        else if (_tokensMatch(tokens, '#N', 'canvas')) {\n            [pd, tokenizedLines, patchTokenizedLinesMap] = parsePatches(pd, tokenizedLines, patchTokenizedLinesMap);\n            // coords : visual range of framesets\n        }\n        else if (_tokensMatch(tokens, '#X', 'coords')) {\n            patchCoordsTokens = tokenizedLines.shift();\n            // Restore : ends a canvas definition\n        }\n        else if (_tokensMatch(tokens, '#X', 'restore')) {\n            // Creates a synthetic node that our parser will hydrate at a later stage\n            tokenizedLines[0].tokens = [\n                'PATCH',\n                patchId,\n                ...tokenizedLines[0].tokens.slice(2),\n            ];\n            break;\n            // A normal chunk to add to the current patch\n        }\n        else {\n            patchTokenizedLines.push(tokenizedLines.shift());\n        }\n    }\n    pd.patches[patchId] = hydratePatch(patchId, patchCanvasTokens, patchCoordsTokens);\n    patchTokenizedLinesMap[patchId] = patchTokenizedLines;\n    return [pd, tokenizedLines, patchTokenizedLinesMap];\n};\n/**\n * Use the layout of [inlet] / [outlet] objects to compute the order\n * of portlets of a subpatch.\n */\nconst computePatchPortlets = (patch) => {\n    const _comparePortletsId = (node1, node2) => parseFloat(node1.id) - parseFloat(node2.id);\n    const _comparePortletsLayout = (node1, node2) => node1.layout.x - node2.layout.x;\n    const inletNodes = Object.values(patch.nodes).filter((node) => ['inlet', 'inlet~'].includes(node.type));\n    const inletsSortFunction = inletNodes.every((node) => !!node.layout)\n        ? _comparePortletsLayout\n        : _comparePortletsId;\n    inletNodes.sort(inletsSortFunction);\n    const outletNodes = Object.values(patch.nodes).filter((node) => ['outlet', 'outlet~'].includes(node.type));\n    const outletsSortFunction = outletNodes.every((node) => !!node.layout)\n        ? _comparePortletsLayout\n        : _comparePortletsId;\n    outletNodes.sort(outletsSortFunction);\n    return {\n        ...patch,\n        inlets: inletNodes.map((node) => node.id),\n        outlets: outletNodes.map((node) => node.id),\n    };\n};\nconst parseArrays = (pd, tokenizedLines) => {\n    pd = {\n        patches: { ...pd.patches },\n        arrays: { ...pd.arrays },\n    };\n    tokenizedLines = [...tokenizedLines];\n    const remainingTokenizedLines = [];\n    // keep the last array for handling correctly\n    // the array related instructions which might follow.\n    let currentArray = null;\n    while (tokenizedLines.length) {\n        const { tokens } = tokenizedLines[0];\n        // start of an array definition\n        if (_tokensMatch(tokens, '#X', 'array')) {\n            currentArray = hydrateArray(nextArrayId(), tokenizedLines.shift());\n            pd.arrays[currentArray.id] = currentArray;\n            // Creates a synthetic node that our parser will hydrate at a later stage\n            remainingTokenizedLines.push({\n                tokens: ['ARRAY', currentArray.id],\n                lineAfterComma: [],\n            });\n            // array data to add to the current array\n        }\n        else if (_tokensMatch(tokens, '#A')) {\n            if (!currentArray) {\n                throw new Error('got array data outside of a array.');\n            }\n            // reads in part of an array of data, starting at the index specified in this line\n            // name of the array comes from the the '#X array' and '#X restore' matches above\n            const indexOffset = parseFloat(tokens[1]);\n            tokens.slice(2).forEach((rawVal, i) => {\n                const val = parseFloat(rawVal);\n                if (Number.isFinite(val)) {\n                    currentArray.data[indexOffset + i] = val;\n                }\n            });\n            tokenizedLines.shift();\n            // A normal chunk to add to the current patch\n        }\n        else {\n            remainingTokenizedLines.push(tokenizedLines.shift());\n        }\n    }\n    return [pd, remainingTokenizedLines];\n};\nconst parseNodesAndConnections = (patch, tokenizedLines) => {\n    patch = {\n        nodes: { ...patch.nodes },\n        connections: [...patch.connections],\n        ...patch,\n    };\n    tokenizedLines = [...tokenizedLines];\n    const remainingTokenizedLines = [];\n    // In Pd files it seems like node ids are assigned in order in which nodes are declared.\n    // Then connection declarations use these same ids to identify nodes.\n    let idCounter = -1;\n    const nextId = () => `${++idCounter}`;\n    while (tokenizedLines.length) {\n        const { tokens } = tokenizedLines[0];\n        let node;\n        if (_tokensMatch(tokens, 'PATCH')) {\n            node = hydrateNodePatch(nextId(), tokenizedLines.shift());\n        }\n        else if (_tokensMatch(tokens, 'ARRAY')) {\n            node = hydrateNodeArray(nextId(), tokenizedLines.shift());\n        }\n        else if (NODES.some((nodeType) => _tokensMatch(tokens, '#X', nodeType))) {\n            const tokenizedLine = tokenizedLines.shift();\n            const nodeBase = hydrateNodeBase(nextId(), tokenizedLine.tokens);\n            if (Object.keys(CONTROL_TYPE).includes(nodeBase.type)) {\n                node = hydrateNodeControl(nodeBase);\n                node = hydrateLineAfterComma(node, tokenizedLine.lineAfterComma);\n            }\n            else {\n                node = hydrateNodeGeneric(nodeBase);\n                node = hydrateLineAfterComma(node, tokenizedLine.lineAfterComma);\n            }\n        }\n        if (node) {\n            patch.nodes[node.id] = node;\n            continue;\n        }\n        if (_tokensMatch(tokens, '#X', 'connect')) {\n            patch.connections.push(hydrateConnection(tokenizedLines.shift()));\n        }\n        else {\n            remainingTokenizedLines.push(tokenizedLines.shift());\n        }\n    }\n    return [patch, remainingTokenizedLines];\n};\n\nexport { parse as default, nextArrayId, nextPatchId, parsePatches };\n//# sourceMappingURL=parse.js.map\n","import parse from '@webpd/pd-parser'\n\nexport const PORTLET_ID = '0'\n\nexport const loadPdJson = async (url) => {\n    const response = await fetch(url)\n    const pdFile = await response.text()\n    return parse(pdFile)\n}\n\nexport const getPdNode = (pdJson, [patchId, nodeId]) =>\n    pdJson.patches[patchId].nodes[nodeId]","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst CONTROL_TYPE = {\n    floatatom: 'floatatom',\n    symbolatom: 'symbolatom',\n    bng: 'bng',\n    tgl: 'tgl',\n    nbx: 'nbx',\n    vsl: 'vsl',\n    hsl: 'hsl',\n    vradio: 'vradio',\n    hradio: 'hradio',\n    vu: 'vu',\n    cnv: 'cnv',\n};\n\nexport { CONTROL_TYPE };\n//# sourceMappingURL=types.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst getNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (node) {\n        return node;\n    }\n    throw new Error(`Node \"${nodeId}\" not found in graph`);\n};\nconst getInlet = (node, inletId) => {\n    const inlet = node.inlets[inletId];\n    if (inlet) {\n        return inlet;\n    }\n    throw new Error(`Inlet \"${inletId}\" not found in node ${node.id}`);\n};\nconst getOutlet = (node, outletId) => {\n    const outlet = node.outlets[outletId];\n    if (outlet) {\n        return outlet;\n    }\n    throw new Error(`Outlet \"${outletId}\" not found in node ${node.id}`);\n};\n/** Returns the list of sinks for the outlet or an empty list. */\nconst getSinks = (node, outletId) => node.sinks[outletId] || [];\n/** Returns the list of sources for the inlet or an empty list. */\nconst getSources = (node, inletId) => node.sources[inletId] || [];\n\nexport { getInlet, getNode, getOutlet, getSinks, getSources };\n//# sourceMappingURL=graph-getters.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst endpointsEqual = (a1, a2) => a1.portletId === a2.portletId && a1.nodeId === a2.nodeId;\n\nexport { endpointsEqual };\n//# sourceMappingURL=graph-helpers.js.map\n","import { getNode, getSources, getSinks, getOutlet, getInlet } from './graph-getters.js';\nimport { endpointsEqual } from './graph-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst addNode = (graph, node) => {\n    if (!graph[node.id]) {\n        graph[node.id] = node;\n    }\n    return graph[node.id];\n};\nconst connect = (graph, source, sink) => {\n    const sinkNode = getNode(graph, sink.nodeId);\n    const sourceNode = getNode(graph, source.nodeId);\n    const otherSources = getSources(sinkNode, sink.portletId);\n    const otherSinks = getSinks(sourceNode, source.portletId);\n    const outlet = getOutlet(sourceNode, source.portletId);\n    const inlet = getInlet(sinkNode, sink.portletId);\n    // Avoid duplicate connections : we check only on sinks,\n    // because we assume that connections are always consistent on both sides.\n    if (otherSinks.some((otherSink) => endpointsEqual(sink, otherSink))) {\n        return;\n    }\n    // Check that connection is valid\n    if (!outlet) {\n        throw new Error(`Undefined outlet ${source.nodeId}:${source.portletId}`);\n    }\n    if (!inlet) {\n        throw new Error(`Undefined inlet ${sink.nodeId}:${sink.portletId}`);\n    }\n    if (outlet.type !== inlet.type) {\n        throw new Error(`Incompatible portlets types ${source.nodeId}:${source.portletId} (${outlet.type}) -> ${sink.nodeId}|${sink.portletId} (${inlet.type})`);\n    }\n    if (inlet.type === 'signal' && otherSources.length) {\n        throw new Error(`Signal inlets can have only one connection`);\n    }\n    _ensureConnectionEndpointArray(sinkNode.sources, sink.portletId).push(source);\n    _ensureConnectionEndpointArray(sourceNode.sinks, source.portletId).push(sink);\n};\n/** If it exists, remove single connection from `sourceNodeId` to `sinkNodeId`. */\nconst disconnect = (graph, source, sink) => {\n    const sinkNode = getNode(graph, sink.nodeId);\n    const sourceNode = getNode(graph, source.nodeId);\n    const sinks = getSinks(sourceNode, source.portletId);\n    sourceNode.sinks[source.portletId] = sinks.filter((otherSink) => !endpointsEqual(sink, otherSink));\n    const sources = getSources(sinkNode, sink.portletId);\n    sinkNode.sources[sink.portletId] = sources.filter((otherSource) => !endpointsEqual(source, otherSource));\n};\n/** Remove all existing connections from `sourceNodeId` to `sinkNodeId`. */\nconst disconnectNodes = (graph, sourceNodeId, sinkNodeId) => {\n    const sourceNode = getNode(graph, sourceNodeId);\n    const sinkNode = getNode(graph, sinkNodeId);\n    Object.entries(sinkNode.sources).forEach(([inletId, sources]) => (sinkNode.sources[inletId] = sources.filter((source) => source.nodeId !== sourceNodeId)));\n    Object.entries(sourceNode.sinks).forEach(([outletId, sinks]) => (sourceNode.sinks[outletId] = sinks.filter((sink) => sink.nodeId !== sinkNodeId)));\n};\n/** Delete node from the graph, also cleaning all the connections from and to other nodes. */\nconst deleteNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (!node) {\n        return;\n    }\n    // `slice(0)` because array might change during iteration\n    Object.values(node.sources).forEach((sources) => sources\n        .slice(0)\n        .forEach((source) => disconnectNodes(graph, source.nodeId, nodeId)));\n    Object.values(node.sinks).forEach((sinks) => sinks\n        .slice(0)\n        .forEach((sink) => disconnectNodes(graph, nodeId, sink.nodeId)));\n    delete graph[nodeId];\n};\nconst _ensureConnectionEndpointArray = (portletMap, portletId) => (portletMap[portletId] = portletMap[portletId] || []);\n\nexport { addNode, connect, deleteNode, disconnect, disconnectNodes };\n//# sourceMappingURL=graph-mutations.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// Regular expressions to deal with dollar-args\nconst DOLLAR_VAR_REGEXP_GLOB = /\\$(\\d+)/g;\n/**\n * @returns The list of all subpatch nodes that represent {@link patchId} in another patch.\n */\nconst getReferencesToSubpatch = (pd, patchId) => {\n    return Object.values(pd.patches).reduce((allReferences, patch) => {\n        const nodes = Object.values(patch.nodes)\n            .filter((node) => node.nodeClass === 'subpatch' && node.patchId === patchId)\n            .map((node) => [patch.id, node.id]);\n        if (nodes.length === 0) {\n            return allReferences;\n        }\n        return [...allReferences, ...nodes];\n    }, []);\n};\n// Takes an object string arg which might contain dollars, and returns the resolved version.\n// e.g. :\n// [table $0-ARRAY] inside a patch with ID 1887 would resolve to [table 1887-ARRAY]\nconst resolveDollarArg = (arg, patch) => {\n    const patchArgs = [patch.id, ...patch.args.map((arg) => arg.toString())];\n    let matchDollar;\n    while ((matchDollar = DOLLAR_VAR_REGEXP_GLOB.exec(arg))) {\n        const patchInd = parseInt(matchDollar[1], 10);\n        if (patchInd >= patchArgs.length || patchInd < 0) {\n            throw new Error('$' + (patchInd + 1) + ': argument number out of range');\n        }\n        arg = arg.replace(matchDollar[0], patchArgs[patchInd]);\n    }\n    return arg;\n};\n\nexport { getReferencesToSubpatch, resolveDollarArg };\n//# sourceMappingURL=pdjson-helpers.js.map\n","const subpatchNodeBuilder = {\n    translateArgs: (pdNode, _, pd) => {\n        if (pdNode.nodeClass !== 'subpatch') {\n            throw new Error(`Invalid node for subpatch ${pdNode.id}`);\n        }\n        const subpatch = pd.patches[pdNode.patchId];\n        if (!subpatch) {\n            throw new Error(`Unknown patch ${pdNode.patchId}`);\n        }\n        return {\n            inletTypes: subpatch.inlets.map((inletNodeId) => {\n                const portletNode = subpatch['nodes'][inletNodeId];\n                if (!portletNode) {\n                    throw new Error(`Unknown [inlet]/[inlet~] node ${inletNodeId}`);\n                }\n                return _portletNodeToPortletType(portletNode);\n            }),\n            outletTypes: subpatch.outlets.map((outletNodeId) => {\n                const portletNode = subpatch['nodes'][outletNodeId];\n                if (!portletNode) {\n                    throw new Error(`Unknown [outlet]/[outlet~] node ${outletNodeId}`);\n                }\n                return _portletNodeToPortletType(portletNode);\n            }),\n        };\n    },\n    build: ({ inletTypes, outletTypes }) => ({\n        inlets: inletTypes.reduce((inlets, type, id) => ({\n            ...inlets,\n            ...(type === 'signal'\n                ? {\n                    [`${id}`]: { id: `${id}`, type: 'signal' },\n                    [`${id}_message`]: { id: `${id}_message`, type: 'message' },\n                }\n                : {\n                    [`${id}_message`]: { id: `${id}_message`, type: 'message' },\n                }),\n        }), {}),\n        outlets: outletTypes.reduce((outlets, type, id) => ({\n            ...outlets,\n            [`${id}`]: { id: `${id}`, type },\n        }), {}),\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (!inletId.endsWith('_message')) {\n            return `${inletId}_message`;\n        }\n        return undefined;\n    }\n};\nconst inletNodeBuilder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\nconst outletNodeBuilder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {},\n    }),\n};\nconst inletTildeNodeBuilder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\nconst outletTildeNodeBuilder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {},\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    }\n};\nconst _portletNodeToPortletType = (node) => {\n    if (['inlet~', 'outlet~'].includes(node.type)) {\n        return 'signal';\n    }\n    else if (['inlet', 'outlet'].includes(node.type)) {\n        return 'message';\n    }\n    else {\n        throw new Error(`Node type ${node.type} is not a portlet node.`);\n    }\n};\nconst NODE_BUILDERS = {\n    pd: subpatchNodeBuilder,\n    inlet: inletNodeBuilder,\n    outlet: outletNodeBuilder,\n    'inlet~': inletTildeNodeBuilder,\n    'outlet~': outletTildeNodeBuilder,\n};\n\nexport { NODE_BUILDERS as default };\n//# sourceMappingURL=node-builders.js.map\n","import { getNode, getInlet, getOutlet, getSources, getSinks } from '../../WebPd_dsp-graph/dist/src/graph-getters.js';\nimport { addNode, connect, deleteNode, disconnect } from '../../WebPd_dsp-graph/dist/src/graph-mutations.js';\nimport { endpointsEqual } from '../../WebPd_dsp-graph/dist/src/graph-helpers.js';\nimport { getReferencesToSubpatch } from './pdjson-helpers.js';\nimport NODE_BUILDERS from './node-builders.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst MIXER_NODE_TYPE = 'mixer~';\nvar IdNamespaces;\n(function (IdNamespaces) {\n    IdNamespaces[\"PD\"] = \"n\";\n    IdNamespaces[\"MIXER\"] = \"m\";\n})(IdNamespaces || (IdNamespaces = {}));\nvar toDspGraph = (pd, nodeBuilders) => {\n    const compilation = { pd, nodeBuilders, graph: {} };\n    buildGraph(compilation);\n    flattenGraph(compilation);\n    return compilation.graph;\n};\n// --------------------------------------------- BUILDING GRAPH\n/** Given the base structure of a `pd` object, convert the explicit connections into our graph format. */\nconst buildGraph = (compilation) => {\n    const deletedNodeIds = new Set();\n    Object.values(compilation.pd.patches).forEach((patch) => {\n        Object.values(patch.nodes).forEach((pdNode) => {\n            const nodeId = buildGraphNodeId(patch.id, pdNode.id);\n            const node = _buildGraphNode(compilation, patch, pdNode, nodeId);\n            if (node === null) {\n                deletedNodeIds.add(nodeId);\n            }\n        });\n        // Convert pd patch connections to couples [source, sink]\n        // representing connections in the graph.\n        let allConnections = [];\n        patch.connections.forEach((patchConnection) => {\n            const sourceNodeId = buildGraphNodeId(patch.id, patchConnection.source.nodeId);\n            const sinkNodeId = buildGraphNodeId(patch.id, patchConnection.sink.nodeId);\n            if (deletedNodeIds.has(sourceNodeId) ||\n                deletedNodeIds.has(sinkNodeId)) {\n                return;\n            }\n            const source = {\n                nodeId: sourceNodeId,\n                portletId: patchConnection.source.portletId.toString(10),\n            };\n            allConnections.push([\n                source,\n                _rerouteMessageConnection(compilation, source, {\n                    nodeId: sinkNodeId,\n                    portletId: patchConnection.sink.portletId.toString(10),\n                }),\n            ]);\n        });\n        // In Pd, several signal sources are summed when connected to the same inlet.\n        // `_buildGraphConnections` is making that behavior explicit, therefore we can't create\n        // all connections one by one, and need to batch all connections to the same sink.\n        while (allConnections.length) {\n            const [, sink] = allConnections[0];\n            let connectionsToSink = [];\n            allConnections = allConnections.filter((connection) => {\n                const [, otherSink] = connection;\n                if (endpointsEqual(sink, otherSink)) {\n                    connectionsToSink.push(connection);\n                    return false;\n                }\n                return true;\n            });\n            _buildGraphConnections(compilation, patch, connectionsToSink.map(([source]) => source), sink);\n        }\n    });\n};\nconst _buildGraphNode = (compilation, patch, pdNode, nodeId) => {\n    const { nodeBuilder, nodeType } = _getNodeBuilder(compilation, pdNode.type);\n    if (nodeBuilder.isNoop === true) {\n        return null;\n    }\n    const nodeArgs = nodeBuilder.translateArgs(pdNode, patch, compilation.pd);\n    const partialNode = nodeBuilder.build(nodeArgs);\n    return addNode(compilation.graph, {\n        id: nodeId,\n        type: nodeType,\n        args: nodeArgs,\n        sources: {},\n        sinks: {},\n        ...partialNode,\n    });\n};\nconst _buildGraphConnections = (compilation, patch, sources, sink) => {\n    const { graph } = compilation;\n    if (sources.length === 1) {\n        connect(graph, sources[0], sink);\n        return;\n    }\n    // Create Mixer node according to sink type\n    let mixerNode = null;\n    const sinkNode = getNode(compilation.graph, sink.nodeId);\n    const sinkType = getInlet(sinkNode, sink.portletId).type;\n    // Pd implicitely sums multiple signals when they are connected to the same inlet.\n    // We want this behavior to be explicit, so we put a mixer node in between instead.\n    if (sinkType === 'message') ;\n    else if (sinkType === 'signal') {\n        mixerNode = _buildGraphNode(compilation, patch, {\n            id: 'dummy',\n            type: MIXER_NODE_TYPE,\n            args: [sources.length],\n            nodeClass: 'generic',\n        }, buildMixerNodeId(sink.nodeId, sink.portletId));\n    }\n    else {\n        throw new Error(`unexpected portlet type \"${sinkType}\"`);\n    }\n    // Connect all sources to mixer, and mixer output to sink.\n    // We assume that each source is connected to a different inlet of the mixer node.\n    if (mixerNode) {\n        sources.forEach((source, inletIndex) => {\n            const mixerInlet = getInlet(mixerNode, inletIndex.toString());\n            connect(graph, source, {\n                nodeId: mixerNode.id,\n                portletId: mixerInlet.id,\n            });\n        });\n        const mixerOutlet = '0';\n        connect(graph, {\n            nodeId: mixerNode.id,\n            portletId: mixerOutlet,\n        }, sink);\n    }\n    else {\n        sources.forEach((source) => {\n            connect(graph, source, sink);\n        });\n    }\n};\nconst _rerouteMessageConnection = (compilation, source, sink) => {\n    // If the source isnt a message, we don't need to do anything\n    const sourceNode = getNode(compilation.graph, source.nodeId);\n    const outlet = getOutlet(sourceNode, source.portletId);\n    if (outlet.type !== 'message') {\n        return sink;\n    }\n    const sinkNode = getNode(compilation.graph, sink.nodeId);\n    const { nodeBuilder: pdSinkNodeBuilder } = _getNodeBuilder(compilation, sinkNode.type);\n    if (pdSinkNodeBuilder.rerouteMessageConnection) {\n        const newInletId = pdSinkNodeBuilder.rerouteMessageConnection(sink.portletId);\n        if (newInletId !== undefined) {\n            return { nodeId: sink.nodeId, portletId: newInletId };\n        }\n    }\n    return sink;\n};\nconst _getNodeBuilder = (compilation, nodeType) => {\n    const coreNodeBuilder = NODE_BUILDERS[nodeType];\n    if (coreNodeBuilder) {\n        return { nodeBuilder: coreNodeBuilder, nodeType };\n    }\n    const nodeBuilder = compilation.nodeBuilders[nodeType];\n    if (!nodeBuilder) {\n        throw new Error(`unknown node type ${nodeType}`);\n    }\n    if (nodeBuilder.aliasTo) {\n        return _getNodeBuilder(compilation, nodeBuilder.aliasTo);\n    }\n    else {\n        return { nodeBuilder: nodeBuilder, nodeType };\n    }\n};\n// --------------------------------------------- FLATTENING THE GRAPH\n/*\n * Given a pd object, inline all the subpatches into the given `graph`, so that objects indirectly wired through\n * the [inlet] and [outlet] objects of a subpatch are instead directly wired into the same graph. Also, deletes\n * [pd subpatch], [inlet] and [outlet] nodes (tilde or not).\n */\nconst flattenGraph = (compilation) => {\n    const { pd } = compilation;\n    const patchesToInline = new Set(Object.keys(pd.patches));\n    // Iterate until all patches have been inlined\n    while (patchesToInline.size) {\n        patchesToInline.forEach((patchId) => {\n            const patch = pd.patches[patchId];\n            // If `patch` contains subpatches which haven't yet been inlined,\n            // we need to inline these first.\n            if (Object.values(patch.nodes).some((node) => node.nodeClass === 'subpatch' &&\n                patchesToInline.has(node.patchId))) {\n                return;\n            }\n            _inlineSubpatch(compilation, patch);\n            patchesToInline.delete(patch.id);\n        });\n    }\n};\n// This inlines a subpatch in all the patches where it is defined.\n// !!! This works only on one level. If the subpatch contains other subpatches they won't be inlined\nconst _inlineSubpatch = (compilation, subpatch) => {\n    const { pd, graph } = compilation;\n    const subpatchNodeIds = getReferencesToSubpatch(pd, subpatch.id)\n        .map(([patchId, nodeLocalId]) => buildGraphNodeId(patchId, nodeLocalId))\n        // Remove subpatches that have not been inserted in the graph because they were noop objects.\n        .filter((subpatchNodeId) => !!compilation.graph[subpatchNodeId]);\n    _inlineSubpatchInlets(compilation, subpatch, subpatchNodeIds);\n    _inlineSubpatchOutlets(compilation, subpatch, subpatchNodeIds);\n    subpatchNodeIds.forEach((nodeId) => deleteNode(graph, nodeId));\n};\n// Outer patch :                    Inside [ pd someSubpatch ] :\n//\n// [ osc~ ]  [ bla~ ]                      [ inlet (**) ]\n//       \\    /                               /\\\n//         \\/                                /  \\\n//         (*)                              /    \\\n//       [ pd someSubpatch ]          [ blo~ ]  [ hihi~ ]\n//\nconst _inlineSubpatchInlets = (compilation, subpatch, subpatchNodeIds) => {\n    const { graph } = compilation;\n    // (**) Get graph node ids of the [inlet] objects\n    const inletNodeIds = subpatch.inlets.map((inletPdNodeId) => buildGraphNodeId(subpatch.id, inletPdNodeId));\n    subpatchNodeIds.forEach((subpatchNodeId) => {\n        const subpatchNode = getNode(graph, subpatchNodeId);\n        inletNodeIds.forEach((inletNodeId, i) => {\n            // (*) Inlet id of the subpatch node\n            // We add an additional id for message inlets.\n            const subpatchNodeInletIds = [\n                i.toString(),\n            ];\n            if (`${i}_message` in subpatchNode.inlets) {\n                subpatchNodeInletIds.push(`${i}_message`);\n            }\n            subpatchNodeInletIds.forEach((subpatchNodeInletId) => {\n                _deproxyConnections(compilation, {\n                    nodeId: subpatchNodeId,\n                    portletId: subpatchNodeInletId,\n                }, {\n                    nodeId: inletNodeId,\n                    portletId: '0',\n                });\n            });\n        });\n    });\n    inletNodeIds.forEach((inletNodeId) => {\n        deleteNode(graph, inletNodeId);\n    });\n    // The subpatch node is not deleted at this stage, because it might be used by other processing steps\n    // after this one.\n};\n// Inside [ pd someSubpatch ] :             Outer patch :\n//\n// [ osc~ ]   [ bla~ ]                  [ pd someSubpatch ]\n//       \\    /                               (*)\n//        \\  /                                 /\\\n//         \\/                                /    \\\n//       [ outlet (**) ]               [ blo~ ]  [ hihi~ ]\n//\nconst _inlineSubpatchOutlets = (compilation, subpatch, subpatchNodeIds) => {\n    const { graph } = compilation;\n    // (**) Get graph node ids of the [outlet] objects\n    const outletNodeIds = subpatch.outlets.map((outletPdNodeId) => buildGraphNodeId(subpatch.id, outletPdNodeId));\n    const outletNodeInletIds = ['0', '0_message'];\n    subpatchNodeIds.forEach((subpatchNodeId) => {\n        outletNodeIds.forEach((outletNodeId, i) => {\n            // (*) Outlet id of the subpatch node\n            // We add an additional id for message inlets.\n            const subpatchNodeOutletId = `${i}`;\n            outletNodeInletIds.forEach((outletNodeInletId) => {\n                _deproxyConnections(compilation, {\n                    nodeId: outletNodeId,\n                    portletId: outletNodeInletId,\n                }, {\n                    nodeId: subpatchNodeId,\n                    portletId: subpatchNodeOutletId,\n                });\n            });\n        });\n    });\n    outletNodeIds.forEach((outletNodeId) => {\n        deleteNode(graph, outletNodeId);\n    });\n    // The subpatch node is not deleted at this stage, because it might be used by other processing steps\n    // after this one.\n};\n// --------------------------------------------- HELPERS\n// Helper allowing to get rid of a couple of proxy nodes.\n// Connections are moved, but the proxy nodes are not deleted.\n// e.g. :\n//\n// ```text\n//   [float 440]  [330(            [r BLA]\n//           \\     /                / \\\n//             \\ /                /     \\\n//            [s BLA]         [osc~]   [phasor~]\n// ```\n//\n// With call `deproxyConnections(graph, {nodeId: sId, portletId: '0'}, {nodeId: rId, portletId: '0'})`,\n// graph will become this :\n//\n// ```text\n// [float 440]  [330(\n//      |\\      /|\n//      |  \\  /  |\n//      |  / \\   |\n//      |/     \\ |\n//    [osc ~]  [phasor~]\n// ```\n//\n//\nconst _deproxyConnections = (compilation, proxyIn, proxyOut) => {\n    const { graph } = compilation;\n    const proxyInNode = getNode(graph, proxyIn.nodeId);\n    const proxyOutNode = getNode(graph, proxyOut.nodeId);\n    const sources = getSources(proxyInNode, proxyIn.portletId);\n    const sinks = getSinks(proxyOutNode, proxyOut.portletId);\n    sinks.forEach((sink) => sources.forEach((source) => {\n        // Disconnect first : this is important for\n        // signals which can't take in multiple connections.\n        disconnect(graph, source, proxyIn);\n        disconnect(graph, proxyOut, sink);\n        sink = _rerouteMessageConnection(compilation, source, sink);\n        connect(graph, source, sink);\n    }));\n};\nconst buildGraphNodeId = (patchId, nodeLocalId) => {\n    return `${IdNamespaces.PD}_${patchId}_${nodeLocalId}`;\n};\nconst buildMixerNodeId = (sinkId, inletId) => {\n    return `${IdNamespaces.MIXER}_${sinkId}_${inletId}`;\n};\n\nexport { MIXER_NODE_TYPE, _deproxyConnections, _inlineSubpatch, _inlineSubpatchInlets, _inlineSubpatchOutlets, _rerouteMessageConnection, buildGraph, buildGraphNodeId, buildMixerNodeId, toDspGraph as default, flattenGraph };\n//# sourceMappingURL=to-dsp-graph.js.map\n","\nexport const makeTranslationTransform = (fromPoint, toPoint) => {\n    const xOffset = toPoint.x - fromPoint.x\n    const yOffset = toPoint.y - fromPoint.y\n    return (fromPoint) => {\n        return {\n            x: fromPoint.x + xOffset,\n            y: fromPoint.y + yOffset,\n        }\n    }\n}\n\nexport const addPoints = (p1, p2) => ({\n    x: p1.x + p2.x,\n    y: p1.y + p2.y,\n})\n\nexport const scalePoint = (p1, r) => ({\n    x: p1.x * r,\n    y: p1.y * r,\n})\n\nexport const computeRectanglesIntersection = (r1, r2) => {\n    const topLeft = {\n        x: Math.max(r1.topLeft.x, r2.topLeft.x),\n        y: Math.max(r1.topLeft.y, r2.topLeft.y),\n    }\n    const bottomRight = {\n        x: Math.min(r1.bottomRight.x, r2.bottomRight.x),\n        y: Math.min(r1.bottomRight.y, r2.bottomRight.y),\n    }\n    if (bottomRight.x <= topLeft.x || bottomRight.y <= topLeft.y) {\n        return null\n    } else {\n        return { topLeft, bottomRight }\n    }\n}\n\nexport const isPointInsideRectangle = (p, r) =>\n    r.topLeft.x <= p.x && p.x <= r.bottomRight.x \n    && r.topLeft.y <= p.y && p.y <= r.bottomRight.y \n\nexport const arePointsEqual = (p1, p2) => {\n    return p1.x === p2.x && p1.y === p2.y\n}\n\nexport const areRectanglesEqual = (bb1, bb2) => {\n    return (arePointsEqual(bb1.topLeft, bb2.topLeft) \n        && arePointsEqual(bb1.bottomRight, bb2.bottomRight))\n}\n\nexport const computePointsBoundingBox = (points) => points.reduce(\n    ({ topLeft, bottomRight }, point) => {\n        return {\n            topLeft: {\n                x: Math.min(point.x, topLeft.x),\n                y: Math.min(point.y, topLeft.y),\n            },\n            bottomRight: {\n                x: Math.max(point.x, bottomRight.x),\n                y: Math.max(point.y, bottomRight.y),\n            },\n        }\n    },\n    {\n        topLeft: { x: Infinity, y: Infinity },\n        bottomRight: { x: -Infinity, y: -Infinity },\n    }\n)\n\nexport const computeRectangleDimensions = (r) => ({\n    x: r.bottomRight.x - r.topLeft.x,\n    y: r.bottomRight.y - r.topLeft.y,\n})","import parse from '@webpd/pd-parser'\nimport { CONTROL_TYPE } from '@webpd/pd-json'\nimport {\n    makeTranslationTransform,\n    computeRectanglesIntersection,\n    isPointInsideRectangle,\n    addPoints,\n} from './math-utils'\n\nexport const PORTLET_ID = '0'\n\nexport const loadPdJson = async (url) => {\n    const response = await fetch(url)\n    const pdFile = await response.text()\n    return parse(pdFile)\n}\n\nexport const getPdNode = (pdJson, [patchId, nodeId]) =>\n    pdJson.patches[patchId].nodes[nodeId]\n\nexport const createModels = (STATE) => \n    // We make sure all controls are inside a container at top level for easier layout\n    _createModelsRecursive(STATE, STATE.pdJson.patches['0'])\n    .map((control) =>\n            control.type === 'control'\n                ? _buildContainerModel(control.patch, control.node, [control])\n                : control\n        )\n\nexport const _createModelsRecursive = (STATE, patch, viewport = null) => {\n    const { pdJson } = STATE\n    if (viewport === null) {\n        viewport = {\n            topLeft: { x: -Infinity, y: -Infinity },\n            bottomRight: { x: Infinity, y: Infinity },\n        }\n    }\n\n    const controls = []\n    Object.values(patch.nodes).forEach((node) => {\n        if (node.type === 'pd') {\n            const subpatch = pdJson.patches[node.patchId]\n            if (!subpatch.layout.graphOnParent) {\n                return\n            }\n\n            // 1. we convert all coordinates to the subpatch coords system\n            const toSubpatchCoords = makeTranslationTransform(\n                { x: node.layout.x, y: node.layout.y },\n                { x: subpatch.layout.viewportX, y: subpatch.layout.viewportY }\n            )\n            const parentViewport = {\n                topLeft: toSubpatchCoords(viewport.topLeft),\n                bottomRight: toSubpatchCoords(viewport.bottomRight),\n            }\n\n            const topLeft = {\n                x: subpatch.layout.viewportX,\n                y: subpatch.layout.viewportY,\n            }\n            const subpatchViewport = {\n                topLeft,\n                bottomRight: addPoints(topLeft, {\n                    x: subpatch.layout.viewportWidth,\n                    y: subpatch.layout.viewportHeight,\n                }),\n            }\n\n            // 2. we compute the visible intersection in the subpatch coords system\n            // and call the function for the subpatch\n            const visibleSubpatchViewport = computeRectanglesIntersection(\n                parentViewport,\n                subpatchViewport\n            )\n\n            if (visibleSubpatchViewport === null) {\n                return\n            }\n\n            const children = _createModelsRecursive(\n                STATE,\n                subpatch,\n                visibleSubpatchViewport\n            )\n\n            controls.push(_buildContainerModel(patch, node, children))\n\n            // 3. When we get ab actual control node, we see if it is inside the\n            // visible viewport (which was previously transformed to local coords).\n        } else if (node.type in CONTROL_TYPE) {\n            if (\n                !isPointInsideRectangle(\n                    {\n                        x: node.layout.x,\n                        y: node.layout.y,\n                    },\n                    viewport\n                )\n            ) {\n                return\n            }\n            controls.push(_buildControlModel(patch, node))\n        }\n    })\n    return controls\n}\n\nconst _buildContainerModel = (patch, node, children) => ({\n    type: 'container',\n    patch,\n    node,\n    children,\n})\n\nconst _buildControlModel = (patch, node) => ({\n    type: 'control',\n    patch,\n    node,\n})\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst Var = (name) => `${name}`;\nconst Func = (args) => `(${args.join(', ')})`;\nconst macros = {\n    Var,\n    Func,\n};\n\nexport { macros as default };\n//# sourceMappingURL=macros.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst Var = (name, typeString) => `${name}: ${typeString}`;\nconst Func = (args, returnType) => `(${args.join(', ')}): ${returnType}`;\nconst macros = {\n    Var,\n    Func,\n};\n\nexport { macros as default };\n//# sourceMappingURL=macros.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst getNode = (graph, nodeId) => {\n    const node = graph[nodeId];\n    if (node) {\n        return node;\n    }\n    throw new Error(`Node \"${nodeId}\" not found in graph`);\n};\nconst getInlet = (node, inletId) => {\n    const inlet = node.inlets[inletId];\n    if (inlet) {\n        return inlet;\n    }\n    throw new Error(`Inlet \"${inletId}\" not found in node ${node.id}`);\n};\nconst getOutlet = (node, outletId) => {\n    const outlet = node.outlets[outletId];\n    if (outlet) {\n        return outlet;\n    }\n    throw new Error(`Outlet \"${outletId}\" not found in node ${node.id}`);\n};\n/** Returns the list of sinks for the outlet or an empty list. */\nconst getSinks = (node, outletId) => node.sinks[outletId] || [];\n/** Returns the list of sources for the inlet or an empty list. */\nconst getSources = (node, inletId) => node.sources[inletId] || [];\n\nexport { getInlet, getNode, getOutlet, getSinks, getSources };\n//# sourceMappingURL=graph-getters.js.map\n","import { getInlet, getNode, getOutlet } from './graph-getters.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n/**\n * Breadth first traversal for signal in the graph.\n * Traversal path is calculated by pulling incoming connections from\n * {@link nodesPullingSignal}.\n */\nconst signalNodes = (graph, nodesPullingSignal) => {\n    const traversal = [];\n    nodesPullingSignal.forEach((node) => _signalNodesBreadthFirstRecursive(traversal, [], graph, node));\n    return traversal;\n};\nconst _signalNodesBreadthFirstRecursive = (traversal, currentPath, graph, node) => {\n    const nextPath = [...currentPath, node.id];\n    Object.entries(node.sources)\n        .filter(([inletId]) => getInlet(node, inletId).type === 'signal')\n        .forEach(([_, sources]) => {\n        sources.forEach((source) => {\n            const sourceNode = getNode(graph, source.nodeId);\n            if (currentPath.indexOf(sourceNode.id) !== -1) {\n                return;\n            }\n            _signalNodesBreadthFirstRecursive(traversal, nextPath, graph, sourceNode);\n        });\n    });\n    if (traversal.indexOf(node.id) === -1) {\n        traversal.push(node.id);\n    }\n};\n/**\n * Breadth first traversal for signal in the graph.\n * Traversal path is calculated by pulling incoming connections from\n * {@link nodesPushingMessages}.\n */\nconst messageNodes = (graph, nodesPushingMessages) => {\n    const traversal = [];\n    nodesPushingMessages.forEach((node) => {\n        _messageNodesDepthFirstRecursive(traversal, graph, node);\n    });\n    return traversal;\n};\nconst _messageNodesDepthFirstRecursive = (traversal, graph, node) => {\n    if (traversal.indexOf(node.id) !== -1) {\n        return;\n    }\n    traversal.push(node.id);\n    Object.entries(node.sinks)\n        .filter(([outletId]) => getOutlet(node, outletId).type === 'message')\n        .forEach(([_, sinks]) => {\n        sinks.forEach((sink) => {\n            _messageNodesDepthFirstRecursive(traversal, graph, getNode(graph, sink.nodeId));\n        });\n    });\n};\n/**\n * When `node` has a sink node that is not connected to an end sink, that sink node won't be included\n * in the traversal, but will still appear in `node.sinks`.\n * Therefore, we need to make sure to filter `node.sinks` to exclude sink nodes that don't\n * appear in the traversal.\n */\nconst removeDeadSinks = (sinks, graphTraversal) => {\n    const filteredSinks = {};\n    Object.entries(sinks).forEach(([outletId, outletSinks]) => {\n        const filteredOutletSinks = outletSinks.filter(({ nodeId: sinkNodeId }) => graphTraversal.includes(sinkNodeId));\n        if (filteredOutletSinks.length) {\n            filteredSinks[outletId] = filteredOutletSinks;\n        }\n    });\n    return filteredSinks;\n};\n/**\n * Filters a node's sources to exclude source nodes that don't\n * appear in the traversal.\n */\nconst removeDeadSources = (sources, graphTraversal) => {\n    const filteredSources = {};\n    Object.entries(sources).forEach(([inletId, inletSources]) => {\n        const filteredInletSources = inletSources.filter(({ nodeId: sourceNodeId }) => graphTraversal.includes(sourceNodeId));\n        if (filteredInletSources.length) {\n            filteredSources[inletId] = filteredInletSources;\n        }\n    });\n    return filteredSources;\n};\n\nexport { messageNodes, removeDeadSinks, removeDeadSources, signalNodes };\n//# sourceMappingURL=graph-traversal.js.map\n","const FS_OPERATION_SUCCESS = 0;\nconst FS_OPERATION_FAILURE = 1;\n\nexport { FS_OPERATION_FAILURE, FS_OPERATION_SUCCESS };\n//# sourceMappingURL=constants.js.map\n","import { removeDeadSources, removeDeadSinks, messageNodes, signalNodes } from '../../WebPd_dsp-graph/dist/src/graph-traversal.js';\nimport { getNode, getSinks, getSources } from '../../WebPd_dsp-graph/dist/src/graph-getters.js';\nimport { FS_OPERATION_SUCCESS, FS_OPERATION_FAILURE } from './constants.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n/** Helper to get node implementation or throw an error if not implemented. */\nconst getNodeImplementation = (nodeImplementations, nodeType) => {\n    const nodeImplementation = nodeImplementations[nodeType];\n    if (!nodeImplementation) {\n        throw new Error(`node [${nodeType}] is not implemented`);\n    }\n    return {\n        stateVariables: {},\n        declare: () => '',\n        loop: () => '',\n        messages: () => ({}),\n        sharedCode: [],\n        ...nodeImplementation,\n    };\n};\n/** Helper to build engine metadata from compilation object */\nconst buildMetadata = (compilation) => {\n    const { audioSettings, inletCallerSpecs, outletListenerSpecs, codeVariableNames, } = compilation;\n    return {\n        audioSettings: {\n            ...audioSettings,\n            // Determined at configure\n            sampleRate: 0,\n            blockSize: 0,\n        },\n        compilation: {\n            inletCallerSpecs,\n            outletListenerSpecs,\n            codeVariableNames: {\n                inletCallers: codeVariableNames.inletCallers,\n                outletListeners: codeVariableNames.outletListeners,\n            },\n        },\n    };\n};\n/**\n * Remove dead sinks and sources in graph.\n */\nconst trimGraph = (compilation, graphTraversal) => {\n    const { graph } = compilation;\n    Object.entries(graph).forEach(([nodeId, node]) => {\n        if (!graphTraversal.includes(nodeId)) {\n            delete graph[nodeId];\n        }\n        else {\n            graph[nodeId] = {\n                ...node,\n                sources: removeDeadSources(node.sources, graphTraversal),\n                sinks: removeDeadSinks(node.sinks, graphTraversal),\n            };\n        }\n    });\n};\n/**\n * Takes the graph traversal, and for each node directly assign the\n * inputs of its next nodes where this can be done.\n * This allow the engine to avoid having to copy between a node's outs\n * and its next node's ins in order to pass data around.\n *\n * @returns Maps that contain inlets and outlets that have been handled\n * by precompilation and don't need to be dealt with further.\n */\nconst preCompileSignalAndMessageFlow = (compilation, graphTraversal) => {\n    const { graph, codeVariableNames, inletCallerSpecs, outletListenerSpecs } = compilation;\n    const graphTraversalNodes = graphTraversal.map((nodeId) => getNode(graph, nodeId));\n    const precompiledInlets = {};\n    const precompiledOutlets = {};\n    const _pushEntry = (portletsIndex, nodeId, portletId) => {\n        portletsIndex[nodeId] = portletsIndex[nodeId] || [];\n        if (!portletsIndex[nodeId].includes(portletId)) {\n            portletsIndex[nodeId].push(portletId);\n        }\n    };\n    graphTraversalNodes.forEach((node) => {\n        const { outs, snds } = codeVariableNames.nodes[node.id];\n        Object.entries(node.outlets).forEach(([outletId, outlet]) => {\n            const outletSinks = getSinks(node, outletId);\n            const nodeOutletListenerSpecs = outletListenerSpecs[node.id] || [];\n            // Signal inlets can receive input from ONLY ONE signal.\n            // Therefore, we replace signal inlet directly with\n            // previous node's outs. e.g. instead of :\n            //\n            //      NODE1_OUT = A + B\n            //      NODE2_IN = NODE1_OUT\n            //      NODE2_OUT = NODE2_IN * 2\n            //\n            // we will have :\n            //\n            //      NODE1_OUT = A + B\n            //      NODE2_OUT = NODE1_OUT * 2\n            //\n            if (outlet.type === 'signal') {\n                outletSinks.forEach((sink) => {\n                    codeVariableNames.nodes[sink.nodeId].ins[sink.portletId] =\n                        outs[outletId];\n                    _pushEntry(precompiledInlets, sink.nodeId, sink.portletId);\n                });\n                // For a message outlet that sends to a single sink node\n                // its out can be directly replaced by next node's in.\n                // e.g. instead of :\n                //\n                //      const NODE1_MSG = () => {\n                //          NODE1_SND('bla')\n                //      }\n                //\n                //      const NODE1_SND = NODE2_MSG\n                //\n                // we can have :\n                //\n                //      const NODE1_MSG = () => {\n                //          NODE2_MSG('bla')\n                //      }\n                //\n            }\n            else if (outlet.type === 'message') {\n                if (outletSinks.length === 1 &&\n                    !nodeOutletListenerSpecs.includes(outlet.id)) {\n                    snds[outletId] =\n                        codeVariableNames.nodes[outletSinks[0].nodeId].rcvs[outletSinks[0].portletId];\n                    _pushEntry(precompiledOutlets, node.id, outletId);\n                    // Same thing if there's no sink, but one outlet listener\n                }\n                else if (outletSinks.length === 0 &&\n                    nodeOutletListenerSpecs.includes(outlet.id)) {\n                    snds[outletId] =\n                        codeVariableNames.outletListeners[node.id][outletId];\n                    _pushEntry(precompiledOutlets, node.id, outletId);\n                    // If no sink, no message receiver, we assign the node SND\n                    // a function that does nothing\n                }\n                else if (outletSinks.length === 0 &&\n                    !nodeOutletListenerSpecs.includes(outlet.id)) {\n                    snds[outletId] =\n                        compilation.codeVariableNames.globs.nullMessageReceiver;\n                    _pushEntry(precompiledOutlets, node.id, outletId);\n                }\n            }\n        });\n        Object.entries(node.inlets).forEach(([inletId, inlet]) => {\n            const nodeInletCallerSpecs = inletCallerSpecs[node.id] || [];\n            // If message inlet has no source, no need to compile it.\n            if (inlet.type === 'message' &&\n                getSources(node, inletId).length === 0 &&\n                !nodeInletCallerSpecs.includes(inlet.id)) {\n                _pushEntry(precompiledInlets, node.id, inletId);\n            }\n        });\n    });\n    return { precompiledInlets, precompiledOutlets };\n};\n// TODO : no need for the whole codeVariableNames here\nconst replaceCoreCodePlaceholders = (codeVariableNames, code) => {\n    const { Int, Float, FloatArray, getFloat, setFloat } = codeVariableNames.types;\n    return code\n        .replaceAll('${Int}', Int)\n        .replaceAll('${Float}', Float)\n        .replaceAll('${FloatArray}', FloatArray)\n        .replaceAll('${getFloat}', getFloat)\n        .replaceAll('${setFloat}', setFloat)\n        .replaceAll('${FS_OPERATION_SUCCESS}', FS_OPERATION_SUCCESS.toString())\n        .replaceAll('${FS_OPERATION_FAILURE}', FS_OPERATION_FAILURE.toString());\n};\n/**\n * Build graph traversal for the compilation.\n * We first put nodes that push messages, so they have the opportunity\n * to change the engine state before running the loop.\n * !!! This is not fullproof ! For example if a node is pushing messages\n * but also writing signal outputs, it might be run too early / too late.\n * @TODO : outletListeners should also be included\n */\nconst graphTraversalForCompile = (graph, inletCallerSpecs) => {\n    const nodesPullingSignal = Object.values(graph).filter((node) => !!node.isPullingSignal);\n    const nodesPushingMessages = Object.values(graph).filter((node) => !!node.isPushingMessages);\n    const graphTraversalSignal = messageNodes(graph, nodesPushingMessages);\n    const combined = graphTraversalSignal;\n    signalNodes(graph, nodesPullingSignal).forEach((nodeId) => {\n        if (combined.indexOf(nodeId) === -1) {\n            combined.push(nodeId);\n        }\n    });\n    Object.keys(inletCallerSpecs).forEach(nodeId => {\n        if (combined.indexOf(nodeId) === -1) {\n            combined.push(nodeId);\n        }\n    });\n    return combined;\n};\nconst getFloatArrayType = (bitDepth) => bitDepth === 64 ? Float64Array : Float32Array;\n\nexport { buildMetadata, getFloatArrayType, getNodeImplementation, graphTraversalForCompile, preCompileSignalAndMessageFlow, replaceCoreCodePlaceholders, trimGraph };\n//# sourceMappingURL=compile-helpers.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n/**\n * Renders templated strings which contain nested arrays of strings.\n * This helper allows to use functions such as `.map` to generate several lines\n * of code, without having to use `.join('\\n')`.\n */\nconst renderCode = (strings, ...codeLines) => {\n    let rendered = '';\n    for (let i = 0; i < strings.length; i++) {\n        rendered += strings[i];\n        if (codeLines[i]) {\n            rendered += _renderCodeRecursive(codeLines[i]);\n        }\n    }\n    return rendered;\n};\nconst _renderCodeRecursive = (codeLines) => {\n    if (Array.isArray(codeLines)) {\n        return codeLines\n            .map(_renderCodeRecursive)\n            .filter((line) => line.length)\n            .join('\\n');\n    }\n    return codeLines.toString();\n};\n/** Generate an integer series from 0 to `count`. */\nconst countTo = (count) => {\n    const results = [];\n    for (let i = 0; i < count; i++) {\n        results.push(i);\n    }\n    return results;\n};\n/**\n * @returns Generates a new object with the same keys as `src` and whose\n * values are the result of mapping `src`'s values with `func`.\n *\n * @todo : fix typings so that keys of SrcType appear in DestType.\n */\nconst mapObject = (src, func) => {\n    const dest = {};\n    Object.entries(src).forEach(([key, srcValue], i) => {\n        dest[key] = func(srcValue, key, i);\n    });\n    return dest;\n};\n/**\n * @param func Called for each element in `src`. Returns a pair `[<key>, <value>]`.\n * @returns A new object whoses keys and values are the result of\n * applying `func` to each element in `src`.\n */\nconst mapArray = (src, func) => {\n    const dest = {};\n    src.forEach((srcValue, i) => {\n        const [key, destValue] = func(srcValue, i);\n        dest[key] = destValue;\n    });\n    return dest;\n};\n/**\n * Renders one of several alternative bits of code.\n *\n * @param routes A list of alternatives `[<test>, <code>]`\n * @returns The first `code` whose `test` evaluated to true.\n */\nconst renderSwitch = (...routes) => {\n    const route = routes.find(([test]) => test);\n    if (!route) {\n        throw new Error(`no route found`);\n    }\n    return route[1];\n};\n/** Renders `code` only if `test` is truthy. */\nconst renderIf = (test, code) => {\n    if (!test) {\n        return '';\n    }\n    if (typeof code === 'function') {\n        return code();\n    }\n    else {\n        return code;\n    }\n};\n\nexport { countTo, mapArray, mapObject, renderCode, renderIf, renderSwitch };\n//# sourceMappingURL=functional-helpers.js.map\n","import { getNode, getSinks } from '../../../WebPd_dsp-graph/dist/src/graph-getters.js';\nimport { getNodeImplementation } from '../compile-helpers.js';\nimport { renderCode } from '../functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nvar compileDeclare = (compilation, graphTraversal, { precompiledInlets, precompiledOutlets }) => {\n    const { graph, macros, codeVariableNames, nodeImplementations, outletListenerSpecs, debug, } = compilation;\n    const graphTraversalNodes = graphTraversal.map((nodeId) => getNode(graph, nodeId));\n    const { Var, Func } = macros;\n    const { globs } = codeVariableNames;\n    const sharedCode = new Set();\n    const _isInletAlreadyHandled = (nodeId, portletId) => (precompiledInlets[nodeId] || []).includes(portletId);\n    const _isOutletAlreadyHandled = (nodeId, portletId) => (precompiledOutlets[nodeId] || []).includes(portletId);\n    // prettier-ignore\n    return renderCode `\n        let ${Var(globs.iterFrame, 'Int')} = 0\n        let ${Var(globs.frame, 'Int')} = 0\n        let ${Var(globs.blockSize, 'Int')} = 0\n        let ${Var(globs.sampleRate, 'Float')} = 0\n        function ${globs.nullMessageReceiver} ${Func([Var('m', 'Message')], 'void')} {}\n\n\n        ${graphTraversalNodes.map(node => {\n        // 0. De-duplicate and insert shared code required by nodes\n        const nodeImplementation = getNodeImplementation(nodeImplementations, node.type);\n        return nodeImplementation.sharedCode.map(codeGenerator => codeGenerator({ macros }))\n            .filter(code => {\n            if (sharedCode.has(code)) {\n                return false;\n            }\n            else {\n                sharedCode.add(code);\n                return true;\n            }\n        });\n    })}\n\n        ${graphTraversalNodes.map(node => {\n        const { ins, outs, rcvs, snds, state } = codeVariableNames.nodes[node.id];\n        const nodeImplementation = getNodeImplementation(nodeImplementations, node.type);\n        const nodeMessageReceivers = nodeImplementation.messages({\n            macros, globs, state, snds, node, compilation\n        });\n        return [\n            // 1. Declares signal inlets and outlets\n            Object.values(node.inlets)\n                .filter(inlet => inlet.type === 'signal')\n                .filter(inlet => !_isInletAlreadyHandled(node.id, inlet.id))\n                .map(inlet => `let ${Var(ins[inlet.id], 'Float')} = 0`),\n            Object.values(node.outlets)\n                .filter(outlet => outlet.type === 'signal')\n                .filter(outlet => !_isOutletAlreadyHandled(node.id, outlet.id))\n                .map(outlet => `let ${Var(outs[outlet.id], 'Float')} = 0`),\n            // 2. Declares message receivers for all message inlets.\n            Object.values(node.inlets)\n                .filter(inlet => inlet.type === 'message')\n                .filter(inlet => !_isInletAlreadyHandled(node.id, inlet.id))\n                // prettier-ignore\n                .map(inlet => {\n                if (typeof nodeMessageReceivers[inlet.id] !== 'string') {\n                    throw new Error(`Message receiver for inlet \"${inlet.id}\" of node type \"${node.type}\" is not implemented`);\n                }\n                return `\n                            function ${rcvs[inlet.id]} ${Func([\n                    Var(globs.m, 'Message')\n                ], 'void')} {\n                                ${nodeMessageReceivers[inlet.id]}\n                                throw new Error('[${node.type}], id \"${node.id}\", inlet \"${inlet.id}\", unsupported message : ' + msg_display(${globs.m})${debug ? \" + '\\\\nDEBUG : remember, you must return from message receiver'\" : ''})\n                            }\n                        `;\n            }),\n            // 3. Custom declarations for the node\n            nodeImplementation.declare({\n                macros, globs, state, node, compilation\n            }),\n        ];\n    })}\n\n        ${ // 4. Declares message senders for all message outlets.\n    // This needs to come after all message receivers are declared since we reference them here.\n    // If there are outlets listeners declared we also inject the code here.\n    graphTraversalNodes.map(node => {\n        const { snds } = codeVariableNames.nodes[node.id];\n        const nodeOutletListeners = outletListenerSpecs[node.id] || [];\n        return Object.values(node.outlets)\n            .filter(outlet => outlet.type === 'message')\n            .filter(outlet => !_isOutletAlreadyHandled(node.id, outlet.id))\n            .map(outlet => {\n            const hasOutletListener = nodeOutletListeners.includes(outlet.id);\n            const outletSinks = getSinks(node, outlet.id);\n            return renderCode `\n                            function ${snds[outlet.id]} ${Func([\n                Var('m', 'Message')\n            ], 'void')} {\n                                ${[\n                hasOutletListener ?\n                    `${codeVariableNames.outletListeners[node.id][outlet.id]}(${globs.m})` : '',\n                outletSinks.map(({ nodeId: sinkNodeId, portletId: inletId }) => `${codeVariableNames.nodes[sinkNodeId].rcvs[inletId]}(${globs.m})`)\n            ]}\n                            }\n                        `;\n        });\n    })}\n    `;\n};\n\nexport { compileDeclare as default };\n//# sourceMappingURL=compile-declare.js.map\n","import { getNode } from '../../../WebPd_dsp-graph/dist/src/graph-getters.js';\nimport { getNodeImplementation } from '../compile-helpers.js';\nimport { renderCode } from '../functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nvar compileLoop = (compilation, graphTraversal) => {\n    const { graph, codeVariableNames, macros, nodeImplementations } = compilation;\n    const { globs } = codeVariableNames;\n    const graphTraversalNodes = graphTraversal.map((nodeId) => getNode(graph, nodeId));\n    // prettier-ignore\n    return renderCode `\n        for (${globs.iterFrame} = 0; ${globs.iterFrame} < ${globs.blockSize}; ${globs.iterFrame}++) {\n            ${graphTraversalNodes.map((node) => {\n        const { outs, ins, snds, state } = codeVariableNames.nodes[node.id];\n        const nodeImplementation = getNodeImplementation(nodeImplementations, node.type);\n        return [\n            // 1. Node loop implementation\n            nodeImplementation.loop({\n                macros,\n                globs,\n                node,\n                state,\n                ins,\n                outs,\n                snds,\n                compilation,\n            }),\n        ];\n    })}\n            ${globs.frame}++\n        }\n    `;\n};\n\nexport { compileLoop as default };\n//# sourceMappingURL=compile-loop.js.map\n","var BUF_JS = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n// =========================== BUF API\\n/**\\n * Ring buffer\\n */\\nclass buf_SoundBuffer {\\n    constructor(length) {\\n        this.length = length;\\n        this.data = new ${FloatArray}(length);\\n        this.writeCursor = 0;\\n        this.pullAvailableLength = 0;\\n    }\\n}\\n/** Erases all the content from the buffer */\\nfunction buf_create(length) {\\n    return new buf_SoundBuffer(length);\\n}\\n/** Erases all the content from the buffer */\\nfunction buf_clear(buffer) {\\n    buffer.data.fill(0);\\n}\\n/**\\n * Pushes a block to the buffer, throwing an error if the buffer is full.\\n * If the block is written successfully, {@link buf_SoundBuffer#writeCursor}\\n * is moved corresponding with the length of data written.\\n *\\n * @todo : Optimize by allowing to read/write directly from host\\n */\\nfunction buf_pushBlock(buffer, block) {\\n    if (buffer.pullAvailableLength + block.length > buffer.length) {\\n        throw new Error('buffer full');\\n    }\\n    let left = block.length;\\n    while (left > 0) {\\n        const lengthToWrite = toInt(Math.min(toFloat(buffer.length - buffer.writeCursor), toFloat(left)));\\n        buffer.data.set(block.subarray(block.length - left, block.length - left + lengthToWrite), buffer.writeCursor);\\n        left -= lengthToWrite;\\n        buffer.writeCursor = (buffer.writeCursor + lengthToWrite) % buffer.length;\\n        buffer.pullAvailableLength += lengthToWrite;\\n    }\\n    return buffer.pullAvailableLength;\\n}\\n/**\\n * Pulls a single sample from the buffer.\\n * This is a destructive operation, and the sample will be\\n * unavailable for subsequent readers with the same operation.\\n */\\nfunction buf_pullSample(buffer) {\\n    if (buffer.pullAvailableLength <= 0) {\\n        return 0;\\n    }\\n    const readCursor = buffer.writeCursor - buffer.pullAvailableLength;\\n    buffer.pullAvailableLength -= 1;\\n    return buffer.data[readCursor >= 0 ? readCursor : buffer.length + readCursor];\\n}\\n/**\\n * Writes a sample at `@link writeCursor` and increments `writeCursor` by one.\\n */\\nfunction buf_writeSample(buffer, value) {\\n    buffer.data[buffer.writeCursor] = value;\\n    buffer.writeCursor = (buffer.writeCursor + 1) % buffer.length;\\n}\\n/**\\n * Reads the sample at position `writeCursor - offset`.\\n * @param offset Must be between 0 (for reading the last written sample)\\n *  and {@link buf_SoundBuffer#length} - 1. A value outside these bounds will not cause\\n *  an error, but might cause unexpected results.\\n */\\nfunction buf_readSample(buffer, offset) {\\n    // R = (buffer.writeCursor - 1 - offset) -> ideal read position\\n    // W = R % buffer.length -> wrap it so that its within buffer length bounds (but could be negative)\\n    // (W + buffer.length) % buffer.length -> if W negative, (W + buffer.length) shifts it back to positive.\\n    return buffer.data[(buffer.length + ((buffer.writeCursor - 1 - offset) % buffer.length)) % buffer.length];\\n}\\n\";\n\nexport { BUF_JS as default };\n//# sourceMappingURL=buf.generated.js.txt.js.map\n","var SKED_JS = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n/**\\n * Skeduler id that will never be used.\\n * Can be used as a \\\"no id\\\", or \\\"null\\\" value.\\n */\\nconst SKED_ID_NULL = -1;\\nconst _SKED_WAIT_IN_PROGRESS = 0;\\nconst _SKED_WAIT_OVER = 1;\\nconst _SKED_MODE_WAIT = 0;\\nconst _SKED_MODE_SUBSCRIBE = 1;\\n// =========================== SKED API\\nclass SkedRequest {\\n}\\nclass Skeduler {\\n    constructor() {\\n        this.eventLog = new Set();\\n        this.requests = new Map();\\n        this.callbacks = new Map();\\n        this.idCounter = 1;\\n        this.isLoggingEvents = false;\\n    }\\n}\\nfunction sked_create(isLoggingEvents) {\\n    const skeduler = new Skeduler();\\n    skeduler.isLoggingEvents = isLoggingEvents;\\n    return skeduler;\\n}\\nfunction sked_wait(skeduler, event, callback) {\\n    if (skeduler.isLoggingEvents === false) {\\n        throw new Error(\\\"Please activate skeduler's isLoggingEvents\\\");\\n    }\\n    if (skeduler.eventLog.has(event)) {\\n        callback(event);\\n        return SKED_ID_NULL;\\n    }\\n    else {\\n        return _sked_createRequest(skeduler, event, callback, _SKED_MODE_WAIT);\\n    }\\n}\\nfunction sked_subscribe(skeduler, event, callback) {\\n    return _sked_createRequest(skeduler, event, callback, _SKED_MODE_SUBSCRIBE);\\n}\\nfunction sked_emit(skeduler, event) {\\n    if (skeduler.isLoggingEvents === true) {\\n        skeduler.eventLog.add(event);\\n    }\\n    if (skeduler.requests.has(event)) {\\n        const requests = skeduler.requests.get(event);\\n        const requestsStaying = [];\\n        for (let i = 0; i < requests.length; i++) {\\n            const request = requests[i];\\n            if (skeduler.callbacks.has(request.id)) {\\n                skeduler.callbacks.get(request.id)(event);\\n                if (request.mode === _SKED_MODE_WAIT) {\\n                    skeduler.callbacks.delete(request.id);\\n                }\\n                else {\\n                    requestsStaying.push(request);\\n                }\\n            }\\n        }\\n        skeduler.requests.set(event, requestsStaying);\\n    }\\n}\\nfunction sked_cancel(skeduler, id) {\\n    skeduler.callbacks.delete(id);\\n}\\nfunction _sked_createRequest(skeduler, event, callback, mode) {\\n    const id = _sked_nextId(skeduler);\\n    const request = { id, mode };\\n    skeduler.callbacks.set(id, callback);\\n    if (!skeduler.requests.has(event)) {\\n        skeduler.requests.set(event, [request]);\\n    }\\n    else {\\n        skeduler.requests.get(event).push(request);\\n    }\\n    return id;\\n}\\nfunction _sked_nextId(skeduler) {\\n    return skeduler.idCounter++;\\n}\\n\";\n\nexport { SKED_JS as default };\n//# sourceMappingURL=sked.generated.js.txt.js.map\n","var FS_JS = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\nconst FS_OPERATION_SUCCESS = ${FS_OPERATION_SUCCESS};\\nconst FS_OPERATION_FAILURE = ${FS_OPERATION_FAILURE};\\nconst _FS_OPERATIONS_IDS = new Set();\\nconst _FS_OPERATIONS_CALLBACKS = new Map();\\nconst _FS_OPERATIONS_SOUND_CALLBACKS = new Map();\\nconst _FS_SOUND_STREAM_BUFFERS = new Map();\\n// We start at 1, because 0 is what ASC uses when host forgets to pass an arg to \\n// a function. Therefore we can get false negatives when a test happens to expect a 0.\\nlet _FS_OPERATION_COUNTER = 1;\\nconst _FS_SOUND_BUFFER_LENGTH = 20 * 44100;\\n// =========================== EXPORTED API\\nfunction x_fs_onReadSoundFileResponse(id, status, sound) {\\n    _fs_assertOperationExists(id, 'x_fs_onReadSoundFileResponse');\\n    _FS_OPERATIONS_IDS.delete(id);\\n    // Finish cleaning before calling the callback in case it would throw an error.\\n    const callback = _FS_OPERATIONS_SOUND_CALLBACKS.get(id);\\n    callback(id, status, sound);\\n    _FS_OPERATIONS_SOUND_CALLBACKS.delete(id);\\n}\\nfunction x_fs_onWriteSoundFileResponse(id, status) {\\n    _fs_assertOperationExists(id, 'x_fs_onWriteSoundFileResponse');\\n    _FS_OPERATIONS_IDS.delete(id);\\n    // Finish cleaning before calling the callback in case it would throw an error.\\n    const callback = _FS_OPERATIONS_CALLBACKS.get(id);\\n    callback(id, status);\\n    _FS_OPERATIONS_CALLBACKS.delete(id);\\n}\\nfunction x_fs_onSoundStreamData(id, block) {\\n    _fs_assertOperationExists(id, 'x_fs_onSoundStreamData');\\n    const buffers = _FS_SOUND_STREAM_BUFFERS.get(id);\\n    for (let i = 0; i < buffers.length; i++) {\\n        buf_pushBlock(buffers[i], block[i]);\\n    }\\n    return buffers[0].pullAvailableLength;\\n}\\nfunction x_fs_onCloseSoundStream(id, status) {\\n    fs_closeSoundStream(id, status);\\n}\\n// =========================== FS API\\nclass fs_SoundInfo {\\n}\\nfunction fs_readSoundFile(url, soundInfo, callback) {\\n    const id = _fs_createOperationId();\\n    _FS_OPERATIONS_SOUND_CALLBACKS.set(id, callback);\\n    i_fs_readSoundFile(id, url, fs_soundInfoToMessage(soundInfo));\\n    return id;\\n}\\nfunction fs_writeSoundFile(sound, url, soundInfo, callback) {\\n    const id = _fs_createOperationId();\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback);\\n    i_fs_writeSoundFile(id, sound, url, fs_soundInfoToMessage(soundInfo));\\n    return id;\\n}\\nfunction fs_openSoundReadStream(url, soundInfo, callback) {\\n    const id = _fs_createOperationId();\\n    const buffers = [];\\n    for (let channel = 0; channel < soundInfo.channelCount; channel++) {\\n        buffers.push(new buf_SoundBuffer(_FS_SOUND_BUFFER_LENGTH));\\n    }\\n    _FS_SOUND_STREAM_BUFFERS.set(id, buffers);\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback);\\n    i_fs_openSoundReadStream(id, url, fs_soundInfoToMessage(soundInfo));\\n    return id;\\n}\\nfunction fs_openSoundWriteStream(url, soundInfo, callback) {\\n    const id = _fs_createOperationId();\\n    _FS_SOUND_STREAM_BUFFERS.set(id, []);\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback);\\n    i_fs_openSoundWriteStream(id, url, fs_soundInfoToMessage(soundInfo));\\n    return id;\\n}\\nfunction fs_sendSoundStreamData(id, block) {\\n    _fs_assertOperationExists(id, 'fs_sendSoundStreamData');\\n    i_fs_sendSoundStreamData(id, block);\\n}\\nfunction fs_closeSoundStream(id, status) {\\n    if (!_FS_OPERATIONS_IDS.has(id)) {\\n        return;\\n    }\\n    _FS_OPERATIONS_IDS.delete(id);\\n    _FS_OPERATIONS_CALLBACKS.get(id)(id, status);\\n    _FS_OPERATIONS_CALLBACKS.delete(id);\\n    // Delete this last, to give the callback \\n    // a chance to save a reference to the buffer\\n    // If write stream, there won't be a buffer\\n    if (_FS_SOUND_STREAM_BUFFERS.has(id)) {\\n        _FS_SOUND_STREAM_BUFFERS.delete(id);\\n    }\\n    i_fs_closeSoundStream(id, status);\\n}\\nfunction fs_soundInfoToMessage(soundInfo) {\\n    const info = msg_create([\\n        MSG_FLOAT_TOKEN,\\n        MSG_FLOAT_TOKEN,\\n        MSG_FLOAT_TOKEN,\\n        MSG_STRING_TOKEN,\\n        soundInfo.encodingFormat.length,\\n        MSG_STRING_TOKEN,\\n        soundInfo.endianness.length,\\n        MSG_STRING_TOKEN,\\n        soundInfo.extraOptions.length\\n    ]);\\n    msg_writeFloatToken(info, 0, ${Float}(soundInfo.channelCount));\\n    msg_writeFloatToken(info, 1, ${Float}(soundInfo.sampleRate));\\n    msg_writeFloatToken(info, 2, ${Float}(soundInfo.bitDepth));\\n    msg_writeStringToken(info, 3, soundInfo.encodingFormat);\\n    msg_writeStringToken(info, 4, soundInfo.endianness);\\n    msg_writeStringToken(info, 5, soundInfo.extraOptions);\\n    return info;\\n}\\n// =========================== PRIVATE\\nfunction _fs_createOperationId() {\\n    const id = _FS_OPERATION_COUNTER++;\\n    _FS_OPERATIONS_IDS.add(id);\\n    return id;\\n}\\nfunction _fs_assertOperationExists(id, operationName) {\\n    if (!_FS_OPERATIONS_IDS.has(id)) {\\n        throw new Error(operationName + ' operation unknown : ' + id.toString());\\n    }\\n}\\n\";\n\nexport { FS_JS as default };\n//# sourceMappingURL=fs.generated.js.txt.js.map\n","var COMMONS_JS = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\nconst _commons_ARRAYS = new Map();\\nconst _commons_ARRAYS_SKEDULER = sked_create(false);\\nconst _commons_ENGINE_LOGGED_SKEDULER = sked_create(true);\\n// =========================== COMMONS API\\n/**\\n * @param callback Called when the engine is configured, or immediately if the engine\\n * was already configured.\\n */\\nfunction commons_waitEngineConfigure(callback) {\\n    sked_wait(_commons_ENGINE_LOGGED_SKEDULER, 'configure', callback);\\n}\\n/**\\n * @param callback Called immediately if the array exists, and subsequently, everytime\\n * the array is set again.\\n * @returns An id that can be used to cancel the subscription.\\n */\\nfunction commons_subscribeArrayChanges(arrayName, callback) {\\n    const id = sked_subscribe(_commons_ARRAYS_SKEDULER, arrayName, callback);\\n    if (_commons_ARRAYS.has(arrayName)) {\\n        callback(arrayName);\\n    }\\n    return id;\\n}\\n/**\\n * @param id The id received when subscribing.\\n */\\nfunction commons_cancelArrayChangesSubscription(id) {\\n    sked_cancel(_commons_ARRAYS_SKEDULER, id);\\n}\\n/** Gets an named array, throwing an error if the array doesn't exist. */\\nfunction commons_getArray(arrayName) {\\n    if (!_commons_ARRAYS.has(arrayName)) {\\n        throw new Error('Unknown array ' + arrayName);\\n    }\\n    return _commons_ARRAYS.get(arrayName);\\n}\\nfunction commons_hasArray(arrayName) {\\n    return _commons_ARRAYS.has(arrayName);\\n}\\nfunction commons_setArray(arrayName, array) {\\n    _commons_ARRAYS.set(arrayName, array);\\n    sked_emit(_commons_ARRAYS_SKEDULER, arrayName);\\n}\\n// =========================== PRIVATE API\\nfunction _commons_emitEngineConfigure() {\\n    sked_emit(_commons_ENGINE_LOGGED_SKEDULER, 'configure');\\n}\\n\";\n\nexport { COMMONS_JS as default };\n//# sourceMappingURL=commons.generated.js.txt.js.map\n","import { replaceCoreCodePlaceholders } from '../../compile-helpers.js';\nimport BUF_JS from './buf.generated.js.txt.js';\nimport SKED_JS from './sked.generated.js.txt.js';\nimport FS_JS from './fs.generated.js.txt.js';\nimport COMMONS_JS from './commons.generated.js.txt.js';\n\nconst CORE = `\nconst i32 = (v) => v\nconst f32 = i32\nconst f64 = i32\nconst toInt = (v) => v\nconst toFloat = (v) => v\nconst createFloatArray = (length) => \n    new \\${FloatArray}(length)\n`;\nconst MSG = `\nconst MSG_FLOAT_TOKEN = \"number\"\nconst MSG_STRING_TOKEN = \"string\"\nconst msg_create = () => []\nconst msg_getLength = (m) => m.length\nconst msg_getTokenType = (m, i) => typeof m[i]\nconst msg_isStringToken = (m, i) => msg_getTokenType(m, i) === 'string'\nconst msg_isFloatToken = (m, i) => msg_getTokenType(m, i) === 'number'\nconst msg_isMatching = (m, tokenTypes) => {\n    return (m.length === tokenTypes.length) \n        && m.every((v, i) => msg_getTokenType(m, i) === tokenTypes[i])\n}\nconst msg_writeFloatToken = ( m, i, v ) => m[i] = v\nconst msg_writeStringToken = msg_writeFloatToken\nconst msg_readFloatToken = ( m, i ) => m[i]\nconst msg_readStringToken = msg_readFloatToken\nconst msg_floats = (v) => v\nconst msg_strings = (v) => v\nconst msg_display = (m) => '[' + m\n    .map(t => typeof t === 'string' ? '\"' + t + '\"' : t.toString())\n    .join(', ') + ']'\n`;\n// TODO : no need for the whole codeVariableNames here\nvar generateCoreCodeJs = (codeVariableNames) => {\n    return replaceCoreCodePlaceholders(codeVariableNames, CORE + BUF_JS + SKED_JS + COMMONS_JS + MSG + FS_JS);\n};\n\nexport { generateCoreCodeJs as default };\n//# sourceMappingURL=index.js.map\n","import { renderCode } from '../functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst compileOutletListeners = ({ outletListenerSpecs, codeVariableNames }, generateCode) => renderCode `${Object.entries(outletListenerSpecs).map(([nodeId, outletIds]) => outletIds.map((outletId) => {\n    const listenerVariableName = codeVariableNames.outletListeners[nodeId][outletId];\n    return generateCode(listenerVariableName, nodeId, outletId);\n}))}`;\nconst compileInletCallers = ({ inletCallerSpecs, codeVariableNames, macros: { Var, Func }, }) => \n// Here not possible to assign directly the receiver because otherwise assemblyscript\n// doesn't export a function but a global instead.\nrenderCode `${Object.entries(inletCallerSpecs).map(([nodeId, inletIds]) => inletIds.map((inletId) => `function ${codeVariableNames.inletCallers[nodeId][inletId]} ${Func([Var('m', 'Message')], 'void')} {${codeVariableNames.nodes[nodeId].rcvs[inletId]}(m)}`))}`;\n\nexport { compileInletCallers, compileOutletListeners };\n//# sourceMappingURL=compile-portlet-accessors.js.map\n","import { graphTraversalForCompile, buildMetadata, trimGraph, preCompileSignalAndMessageFlow } from '../compile-helpers.js';\nimport compileDeclare from '../engine-common/compile-declare.js';\nimport compileLoop from '../engine-common/compile-loop.js';\nimport generateCoreCodeJs from './core-code/index.js';\nimport { renderCode } from '../functional-helpers.js';\nimport { compileInletCallers, compileOutletListeners } from '../engine-common/compile-portlet-accessors.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nvar compileToJavascript = (compilation) => {\n    const { codeVariableNames, outletListenerSpecs, inletCallerSpecs, graph } = compilation;\n    const graphTraversal = graphTraversalForCompile(graph, inletCallerSpecs);\n    const globs = compilation.codeVariableNames.globs;\n    const { FloatArray } = codeVariableNames.types;\n    const metadata = buildMetadata(compilation);\n    trimGraph(compilation, graphTraversal);\n    const precompiledPortlets = preCompileSignalAndMessageFlow(compilation, graphTraversal);\n    // prettier-ignore\n    return renderCode `\n        ${generateCoreCodeJs(codeVariableNames)}\n\n        ${compileDeclare(compilation, graphTraversal, precompiledPortlets)}\n\n        ${compileInletCallers(compilation)}\n\n        ${compileOutletListeners(compilation, (variableName, nodeId, outletId) => `\n            const ${variableName} = (m) => {\n                exports.outletListeners['${nodeId}']['${outletId}'].onMessage(m)\n            }\n        `)}\n\n        const exports = {\n            metadata: ${JSON.stringify(metadata)},\n            configure: (sampleRate, blockSize) => {\n                exports.metadata.audioSettings.sampleRate = sampleRate\n                exports.metadata.audioSettings.blockSize = blockSize\n                ${globs.sampleRate} = sampleRate\n                ${globs.blockSize} = blockSize\n                _commons_emitEngineConfigure()\n            },\n            loop: (${globs.input}, ${globs.output}) => {\n                ${compileLoop(compilation, graphTraversal)}\n            },\n            commons: {\n                getArray: commons_getArray,\n                setArray: (arrayName, array) => commons_setArray(arrayName, new ${FloatArray}(array)),\n            },\n            outletListeners: {\n                ${Object.entries(outletListenerSpecs).map(([nodeId, outletIds]) => renderCode `${nodeId}: {\n                        ${outletIds.map(outletId => `\"${outletId}\": {onMessage: () => undefined},`)}\n                    },`)}\n            },\n            inletCallers: {\n                ${Object.entries(inletCallerSpecs).map(([nodeId, inletIds]) => renderCode `${nodeId}: {\n                        ${inletIds.map(inletId => `\"${inletId}\": ${codeVariableNames.inletCallers[nodeId][inletId]},`)}\n                    },`)}\n            },\n            fs: {\n                onReadSoundFile: () => undefined,\n                onWriteSoundFile: () => undefined,\n                onOpenSoundReadStream: () => undefined,\n                onOpenSoundWriteStream: () => undefined,\n                onSoundStreamData: () => undefined,\n                onCloseSoundStream: () => undefined,\n                sendReadSoundFileResponse: x_fs_onReadSoundFileResponse,\n                sendWriteSoundFileResponse: x_fs_onWriteSoundFileResponse,\n                sendSoundStreamData: x_fs_onSoundStreamData,\n                closeSoundStream: x_fs_onCloseSoundStream,\n            },\n        }\n\n        // FS IMPORTS\n        const i_fs_readSoundFile = (...args) => exports.fs.onReadSoundFile(...args)\n        const i_fs_writeSoundFile = (...args) => exports.fs.onWriteSoundFile(...args)\n        const i_fs_openSoundReadStream = (...args) => exports.fs.onOpenSoundReadStream(...args)\n        const i_fs_openSoundWriteStream = (...args) => exports.fs.onOpenSoundWriteStream(...args)\n        const i_fs_sendSoundStreamData = (...args) => exports.fs.onSoundStreamData(...args)\n        const i_fs_closeSoundStream = (...args) => exports.fs.onCloseSoundStream(...args)\n    `;\n};\n\nexport { compileToJavascript as default };\n//# sourceMappingURL=compile-to-javascript.js.map\n","var CORE_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\ntype FloatArray = ${FloatArray}\\ntype Float = ${Float}\\ntype Int = ${Int}\\n\\n// =========================== CORE API\\nfunction toInt (v: ${Float}): ${Int} { return ${Int}(v) }\\nfunction toFloat (v: ${Int}): ${Float} { return ${Float}(v) }\\nfunction createFloatArray (length: Int): FloatArray {\\n    return new ${FloatArray}(length)\\n}\\n\\n// =========================== EXPORTED API\\nfunction x_core_createListOfArrays(): FloatArray[] {\\n    const arrays: FloatArray[] = []\\n    return arrays\\n}\\n\\nfunction x_core_pushToListOfArrays(arrays: FloatArray[], array: FloatArray): void {\\n    arrays.push(array)\\n}\\n\\nfunction x_core_getListOfArraysLength(arrays: FloatArray[]): Int {\\n    return arrays.length\\n}\\n\\nfunction x_core_getListOfArraysElem(arrays: FloatArray[], index: Int): FloatArray {\\n    return arrays[index]\\n}\";\n\nexport { CORE_ASC as default };\n//# sourceMappingURL=core.asc.js.map\n","var BUF_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\n// =========================== BUF API\\n/**\\n * Ring buffer \\n */\\nclass buf_SoundBuffer {\\n    public data: FloatArray\\n    public length: Int\\n    public writeCursor: Int\\n    public pullAvailableLength: Int\\n\\n    constructor(length: Int) {\\n        this.length = length\\n        this.data = new ${FloatArray}(length)\\n        this.writeCursor = 0\\n        this.pullAvailableLength = 0\\n    }\\n}\\n\\n/** Erases all the content from the buffer */\\nfunction buf_create (length: Int): buf_SoundBuffer {\\n    return new buf_SoundBuffer(length)\\n}\\n\\n/** Erases all the content from the buffer */\\nfunction buf_clear (buffer: buf_SoundBuffer): void {\\n    buffer.data.fill(0)\\n}\\n\\n/**\\n * Pushes a block to the buffer, throwing an error if the buffer is full. \\n * If the block is written successfully, {@link buf_SoundBuffer#writeCursor} \\n * is moved corresponding with the length of data written.\\n * \\n * @todo : Optimize by allowing to read/write directly from host\\n */\\nfunction buf_pushBlock (\\n    buffer: buf_SoundBuffer,\\n    block: FloatArray,\\n): Int {\\n    if (buffer.pullAvailableLength + block.length > buffer.length) {\\n        throw new Error('buffer full')\\n    }\\n\\n    let left: Int = block.length\\n    while (left > 0) {\\n        const lengthToWrite = toInt(Math.min(\\n            toFloat(buffer.length - buffer.writeCursor), \\n            toFloat(left)\\n        ))\\n        buffer.data.set(\\n            block.subarray(\\n                block.length - left, \\n                block.length - left + lengthToWrite\\n            ), \\n            buffer.writeCursor\\n        )\\n        left -= lengthToWrite\\n        buffer.writeCursor = (buffer.writeCursor + lengthToWrite) % buffer.length\\n        buffer.pullAvailableLength += lengthToWrite\\n    }\\n    return buffer.pullAvailableLength\\n}\\n\\n/**\\n * Pulls a single sample from the buffer. \\n * This is a destructive operation, and the sample will be \\n * unavailable for subsequent readers with the same operation.\\n */\\nfunction buf_pullSample (buffer: buf_SoundBuffer): Float {\\n    if (buffer.pullAvailableLength <= 0) {\\n        return 0\\n    }\\n    const readCursor: Int = buffer.writeCursor - buffer.pullAvailableLength\\n    buffer.pullAvailableLength -= 1\\n    return buffer.data[readCursor >= 0 ? readCursor : buffer.length + readCursor]\\n}\\n\\n/**\\n * Writes a sample at `@link writeCursor` and increments `writeCursor` by one.\\n */\\nfunction buf_writeSample (buffer: buf_SoundBuffer, value: Float): void {\\n    buffer.data[buffer.writeCursor] = value\\n    buffer.writeCursor = (buffer.writeCursor + 1) % buffer.length\\n}\\n\\n/**\\n * Reads the sample at position `writeCursor - offset`.\\n * @param offset Must be between 0 (for reading the last written sample)\\n *  and {@link buf_SoundBuffer#length} - 1. A value outside these bounds will not cause \\n *  an error, but might cause unexpected results.\\n */\\nfunction buf_readSample (buffer: buf_SoundBuffer, offset: Int): Float {\\n    // R = (buffer.writeCursor - 1 - offset) -> ideal read position\\n    // W = R % buffer.length -> wrap it so that its within buffer length bounds (but could be negative)\\n    // (W + buffer.length) % buffer.length -> if W negative, (W + buffer.length) shifts it back to positive.\\n    return buffer.data[(buffer.length + ((buffer.writeCursor - 1 - offset) % buffer.length)) % buffer.length]\\n}\";\n\nexport { BUF_ASC as default };\n//# sourceMappingURL=buf.asc.js.map\n","var SKED_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\ntype SkedCallback = (event: SkedEvent) => void\\ntype SkedId = Int\\ntype SkedMode = Int\\ntype SkedEvent = string\\n\\n/** \\n * Skeduler id that will never be used. \\n * Can be used as a \\\"no id\\\", or \\\"null\\\" value. \\n */\\nconst SKED_ID_NULL: SkedId = -1\\n\\nconst _SKED_WAIT_IN_PROGRESS: Int = 0\\nconst _SKED_WAIT_OVER: Int = 1\\n\\nconst _SKED_MODE_WAIT = 0\\nconst _SKED_MODE_SUBSCRIBE = 1\\n\\n// =========================== SKED API\\n\\nclass SkedRequest {\\n    id: SkedId\\n    mode: SkedMode\\n}\\n\\nclass Skeduler {\\n    requests: Map<SkedEvent, Array<SkedRequest>>\\n\\n    callbacks: Map<SkedId, SkedCallback>\\n\\n    isLoggingEvents: boolean\\n    eventLog: Set<SkedEvent>\\n\\n    idCounter: SkedId\\n    \\n    constructor() {\\n        this.eventLog = new Set()\\n        this.requests = new Map()\\n        this.callbacks = new Map()\\n        this.idCounter = 1\\n        this.isLoggingEvents = false\\n    }\\n}\\n\\nfunction sked_create (isLoggingEvents: boolean): Skeduler {\\n    const skeduler = new Skeduler()\\n    skeduler.isLoggingEvents = isLoggingEvents\\n    return skeduler\\n}\\n\\nfunction sked_wait (\\n    skeduler: Skeduler,\\n    event: SkedEvent,\\n    callback: SkedCallback,\\n): SkedId {\\n    if (skeduler.isLoggingEvents === false) {\\n        throw new Error(\\\"Please activate skeduler's isLoggingEvents\\\")\\n    }\\n\\n    if (skeduler.eventLog.has(event)) {\\n        callback(event)\\n        return SKED_ID_NULL\\n    } else {\\n        return _sked_createRequest(skeduler, event, callback, _SKED_MODE_WAIT)\\n    }\\n}\\n\\nfunction sked_subscribe (\\n    skeduler: Skeduler,\\n    event: SkedEvent,\\n    callback: SkedCallback,\\n): SkedId {\\n    return _sked_createRequest(skeduler, event, callback, _SKED_MODE_SUBSCRIBE)\\n}\\n\\nfunction sked_emit (\\n    skeduler: Skeduler,\\n    event: SkedEvent,\\n): void {\\n    if (skeduler.isLoggingEvents === true) {\\n        skeduler.eventLog.add(event)\\n    }\\n    if (skeduler.requests.has(event)) {\\n        const requests: Array<SkedRequest> = skeduler.requests.get(event)\\n        const requestsStaying: Array<SkedRequest> = []\\n        for (let i: Int = 0; i < requests.length; i++) {\\n            const request: SkedRequest = requests[i]\\n            if (skeduler.callbacks.has(request.id)) {\\n                skeduler.callbacks.get(request.id)(event)\\n                if (request.mode === _SKED_MODE_WAIT) {\\n                    skeduler.callbacks.delete(request.id)\\n                } else {\\n                    requestsStaying.push(request)\\n                }\\n            }\\n        }\\n        skeduler.requests.set(event, requestsStaying)\\n    }\\n}\\n\\nfunction sked_cancel (\\n    skeduler: Skeduler,\\n    id: SkedId,\\n): void {\\n    skeduler.callbacks.delete(id)\\n}\\n\\nfunction _sked_createRequest (\\n    skeduler: Skeduler,\\n    event: SkedEvent,\\n    callback: SkedCallback,\\n    mode: SkedMode,\\n): SkedId {\\n    const id = _sked_nextId(skeduler)\\n    const request: SkedRequest = {id, mode}\\n    skeduler.callbacks.set(id, callback)\\n    if (!skeduler.requests.has(event)) {\\n        skeduler.requests.set(event, [request])    \\n    } else {\\n        skeduler.requests.get(event).push(request)\\n    }\\n    return id\\n}\\n\\nfunction _sked_nextId (\\n    skeduler: Skeduler,\\n): SkedId {\\n    return skeduler.idCounter++\\n}\";\n\nexport { SKED_ASC as default };\n//# sourceMappingURL=sked.asc.js.map\n","var MSG_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\ntype MessageFloatToken = Float\\ntype MessageCharToken = Int\\n\\ntype MessageTemplate = Array<Int>\\ntype MessageHeaderEntry = Int\\ntype MessageHeader = Int32Array\\n\\nconst MSG_FLOAT_TOKEN: MessageHeaderEntry = 0\\nconst MSG_STRING_TOKEN: MessageHeaderEntry = 1\\n\\n\\n// =========================== EXPORTED API\\nfunction x_msg_create(templateTypedArray: Int32Array): Message {\\n    const template: MessageTemplate = new Array<Int>(templateTypedArray.length)\\n    for (let i: Int = 0; i < templateTypedArray.length; i++) {\\n        template[i] = templateTypedArray[i]\\n    }\\n    return msg_create(template)\\n}\\n\\nfunction x_msg_getTokenTypes(message: Message): MessageHeader {\\n    return message.tokenTypes\\n}\\n\\nfunction x_msg_createTemplate(length: i32): Int32Array {\\n    return new Int32Array(length)\\n}\\n\\n\\n// =========================== MSG API\\nfunction msg_create(template: MessageTemplate): Message {\\n    let i: Int = 0\\n    let byteCount: Int = 0\\n    let tokenTypes: Array<MessageHeaderEntry> = []\\n    let tokenPositions: Array<MessageHeaderEntry> = []\\n\\n    i = 0\\n    while (i < template.length) {\\n        switch(template[i]) {\\n            case MSG_FLOAT_TOKEN:\\n                byteCount += sizeof<MessageFloatToken>()\\n                tokenTypes.push(MSG_FLOAT_TOKEN)\\n                tokenPositions.push(byteCount)\\n                i += 1\\n                break\\n            case MSG_STRING_TOKEN:\\n                byteCount += sizeof<MessageCharToken>() * template[i + 1]\\n                tokenTypes.push(MSG_STRING_TOKEN)\\n                tokenPositions.push(byteCount)\\n                i += 2\\n                break\\n            default:\\n                throw new Error(`unknown token type \\\" + template[i]`)\\n        }\\n    }\\n\\n    const tokenCount = tokenTypes.length\\n    const headerByteCount = _msg_computeHeaderLength(tokenCount) * sizeof<MessageHeaderEntry>()\\n    byteCount += headerByteCount\\n\\n    const buffer = new ArrayBuffer(byteCount)\\n    const dataView = new DataView(buffer)\\n    let writePosition: Int = 0\\n    \\n    dataView.setInt32(writePosition, tokenCount)\\n    writePosition += sizeof<MessageHeaderEntry>()\\n\\n    for (i = 0; i < tokenCount; i++) {\\n        dataView.setInt32(writePosition, tokenTypes[i])\\n        writePosition += sizeof<MessageHeaderEntry>()\\n    }\\n\\n    dataView.setInt32(writePosition, headerByteCount)\\n    writePosition += sizeof<MessageHeaderEntry>()\\n    for (i = 0; i < tokenCount; i++) {\\n        dataView.setInt32(writePosition, headerByteCount + tokenPositions[i])\\n        writePosition += sizeof<MessageHeaderEntry>()\\n    }\\n\\n    return new Message(buffer)\\n}\\n\\nfunction msg_writeStringToken(\\n    message: Message, \\n    tokenIndex: Int,\\n    value: string,\\n): void {\\n    const startPosition = message.tokenPositions[tokenIndex]\\n    const endPosition = message.tokenPositions[tokenIndex + 1]\\n    const expectedStringLength: Int = (endPosition - startPosition) / sizeof<MessageCharToken>()\\n    if (value.length !== expectedStringLength) {\\n        throw new Error('Invalid string size, specified ' + expectedStringLength.toString() + ', received ' + value.length.toString())\\n    }\\n\\n    for (let i = 0; i < value.length; i++) {\\n        message.dataView.setInt32(\\n            startPosition + i * sizeof<MessageCharToken>(), \\n            value.codePointAt(i)\\n        )\\n    }\\n}\\n\\nfunction msg_writeFloatToken(\\n    message: Message, \\n    tokenIndex: Int,\\n    value: MessageFloatToken,\\n): void {\\n    message.dataView.${setFloat}(message.tokenPositions[tokenIndex], value)\\n}\\n\\nfunction msg_readStringToken(\\n    message: Message, \\n    tokenIndex: Int,\\n): string {\\n    const startPosition = message.tokenPositions[tokenIndex]\\n    const endPosition = message.tokenPositions[tokenIndex + 1]\\n    const stringLength: Int = (endPosition - startPosition) / sizeof<MessageCharToken>()\\n    let value: string = ''\\n    for (let i = 0; i < stringLength; i++) {\\n        value += String.fromCodePoint(message.dataView.getInt32(startPosition + sizeof<MessageCharToken>() * i))\\n    }\\n    return value\\n}\\n\\nfunction msg_readFloatToken(\\n    message: Message, \\n    tokenIndex: Int,\\n): MessageFloatToken {\\n    return message.dataView.${getFloat}(message.tokenPositions[tokenIndex])\\n}\\n\\nfunction msg_getLength(message: Message): Int {\\n    return message.tokenTypes.length\\n}\\n\\nfunction msg_getTokenType(message: Message, tokenIndex: Int): Int {\\n    return message.tokenTypes[tokenIndex]\\n}\\n\\nfunction msg_isStringToken(\\n    message: Message, \\n    tokenIndex: Int    \\n): boolean {\\n    return msg_getTokenType(message, tokenIndex) === MSG_STRING_TOKEN\\n}\\n\\nfunction msg_isFloatToken(\\n    message: Message, \\n    tokenIndex: Int    \\n): boolean {\\n    return msg_getTokenType(message, tokenIndex) === MSG_FLOAT_TOKEN\\n}\\n\\nfunction msg_isMatching(message: Message, tokenTypes: Array<MessageHeaderEntry>): boolean {\\n    if (message.tokenTypes.length !== tokenTypes.length) {\\n        return false\\n    }\\n    for (let i: Int = 0; i < tokenTypes.length; i++) {\\n        if (message.tokenTypes[i] !== tokenTypes[i]) {\\n            return false\\n        }\\n    }\\n    return true\\n}\\n\\nfunction msg_floats(values: Array<Float>): Message {\\n    const message: Message = msg_create(values.map<MessageHeaderEntry>(v => MSG_FLOAT_TOKEN))\\n    for (let i: Int = 0; i < values.length; i++) {\\n        msg_writeFloatToken(message, i, values[i])\\n    }\\n    return message\\n}\\n\\nfunction msg_strings(values: Array<string>): Message {\\n    const template: MessageTemplate = []\\n    for (let i: Int = 0; i < values.length; i++) {\\n        template.push(MSG_STRING_TOKEN)\\n        template.push(values[i].length)\\n    }\\n    const message: Message = msg_create(template)\\n    for (let i: Int = 0; i < values.length; i++) {\\n        msg_writeStringToken(message, i, values[i])\\n    }\\n    return message\\n}\\n\\nfunction msg_display(message: Message): string {\\n    let displayArray: Array<string> = []\\n    for (let i: Int = 0; i < msg_getLength(message); i++) {\\n        if (msg_isFloatToken(message, i)) {\\n            displayArray.push(msg_readFloatToken(message, i).toString())\\n        } else {\\n            displayArray.push('\\\"' + msg_readStringToken(message, i) + '\\\"')\\n        }\\n    }\\n    return '[' + displayArray.join(', ') + ']'\\n}\\n\\n\\n// =========================== PRIVATE\\n// Message header : [\\n//      <Token count>, \\n//      <Token 1 type>,  ..., <Token N type>, \\n//      <Token 1 start>, ..., <Token N start>, <Token N end>\\n//      ... DATA ...\\n// ]\\nclass Message {\\n    public dataView: DataView\\n    public header: MessageHeader\\n    public tokenCount: MessageHeaderEntry\\n    public tokenTypes: MessageHeader\\n    public tokenPositions: MessageHeader\\n\\n    constructor(messageBuffer: ArrayBuffer) {\\n        const dataView = new DataView(messageBuffer)\\n        const tokenCount = _msg_unpackTokenCount(dataView)\\n        const header = _msg_unpackHeader(dataView, tokenCount)\\n        this.dataView = dataView\\n        this.tokenCount = tokenCount\\n        this.header = header \\n        this.tokenTypes = _msg_unpackTokenTypes(header)\\n        this.tokenPositions = _msg_unpackTokenPositions(header)\\n    }\\n}\\n\\nfunction _msg_computeHeaderLength(tokenCount: Int): Int {\\n    return 1 + tokenCount * 2 + 1\\n}\\n\\nfunction _msg_unpackTokenCount(messageDataView: DataView): MessageHeaderEntry {\\n    return messageDataView.getInt32(0)\\n}\\n\\nfunction _msg_unpackHeader(messageDataView: DataView, tokenCount: MessageHeaderEntry): MessageHeader {\\n    const headerLength = _msg_computeHeaderLength(tokenCount)\\n    // TODO : why is this `wrap` not working ?\\n    // return Int32Array.wrap(messageDataView.buffer, 0, headerLength)\\n    const messageHeader = new Int32Array(headerLength)\\n    for (let i = 0; i < headerLength; i++) {\\n        messageHeader[i] = messageDataView.getInt32(sizeof<MessageHeaderEntry>() * i)\\n    }\\n    return messageHeader\\n}\\n\\nfunction _msg_unpackTokenTypes(header: MessageHeader): MessageHeader {\\n    return header.slice(1, 1 + header[0])\\n}\\n\\nfunction _msg_unpackTokenPositions(header: MessageHeader): MessageHeader {\\n    return header.slice(1 + header[0])\\n}\";\n\nexport { MSG_ASC as default };\n//# sourceMappingURL=msg.asc.js.map\n","var COMMONS_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\nconst _commons_ARRAYS: Map<string, FloatArray> = new Map()\\nconst _commons_ARRAYS_SKEDULER: Skeduler = sked_create(false)\\n\\nconst _commons_ENGINE_LOGGED_SKEDULER: Skeduler = sked_create(true)\\n\\n// =========================== COMMONS API\\n/** \\n * @param callback Called when the engine is configured, or immediately if the engine\\n * was already configured.\\n */\\nfunction commons_waitEngineConfigure(\\n    callback: SkedCallback,\\n): void {\\n    sked_wait(_commons_ENGINE_LOGGED_SKEDULER, 'configure', callback)\\n}\\n\\n/** \\n * @param callback Called immediately if the array exists, and subsequently, everytime \\n * the array is set again.\\n * @returns An id that can be used to cancel the subscription.\\n */\\nfunction commons_subscribeArrayChanges(\\n    arrayName: string,\\n    callback: SkedCallback,\\n): SkedId {\\n    const id: SkedId = sked_subscribe(_commons_ARRAYS_SKEDULER, arrayName, callback)\\n    if (_commons_ARRAYS.has(arrayName)) {\\n        callback(arrayName)\\n    }\\n    return id\\n}\\n\\n/** \\n * @param id The id received when subscribing.\\n */\\nfunction commons_cancelArrayChangesSubscription(\\n    id: SkedId,\\n): void {\\n    sked_cancel(_commons_ARRAYS_SKEDULER, id)\\n}\\n\\n/** Gets an named array, throwing an error if the array doesn't exist. */\\nfunction commons_getArray(\\n    arrayName: string,\\n): FloatArray {\\n    if (!_commons_ARRAYS.has(arrayName)) {\\n        throw new Error('Unknown array ' + arrayName)\\n    }\\n    return _commons_ARRAYS.get(arrayName)\\n}\\n\\nfunction commons_hasArray(\\n    arrayName: string,\\n): boolean {\\n    return _commons_ARRAYS.has(arrayName)\\n}\\n\\nfunction commons_setArray(\\n    arrayName: string,\\n    array: FloatArray,\\n): void {\\n    _commons_ARRAYS.set(arrayName, array)\\n    sked_emit(_commons_ARRAYS_SKEDULER, arrayName)\\n}\\n\\n// =========================== PRIVATE API\\nfunction _commons_emitEngineConfigure(): void {\\n    sked_emit(_commons_ENGINE_LOGGED_SKEDULER, 'configure')\\n}\";\n\nexport { COMMONS_ASC as default };\n//# sourceMappingURL=commons.asc.js.map\n","var FS_ASC = \"/*\\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\\n *\\n * BSD Simplified License.\\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\\n * WARRANTIES, see the file, \\\"LICENSE.txt,\\\" in this distribution.\\n *\\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\\n *\\n */\\n\\nconst FS_OPERATION_SUCCESS: Int = ${FS_OPERATION_SUCCESS}\\nconst FS_OPERATION_FAILURE: Int = ${FS_OPERATION_FAILURE}\\n\\ntype fs_OperationId = Int\\ntype fs_OperationStatus = Int\\ntype fs_OperationCallback = (id: fs_OperationId, status: fs_OperationStatus) => void\\ntype fs_OperationSoundCallback = (id: fs_OperationId, status: fs_OperationStatus, sound: FloatArray[]) => void\\n\\ntype Url = string\\n\\nconst _FS_OPERATIONS_IDS = new Set<fs_OperationId>()\\nconst _FS_OPERATIONS_CALLBACKS = new Map<fs_OperationId, fs_OperationCallback>()\\nconst _FS_OPERATIONS_SOUND_CALLBACKS = new Map<fs_OperationId, fs_OperationSoundCallback>()\\nconst _FS_SOUND_STREAM_BUFFERS = new Map<fs_OperationId, Array<buf_SoundBuffer>>()\\n\\n// We start at 1, because 0 is what ASC uses when host forgets to pass an arg to \\n// a function. Therefore we can get false negatives when a test happens to expect a 0.\\nlet _FS_OPERATION_COUNTER: Int = 1\\n\\nconst _FS_SOUND_BUFFER_LENGTH = 20 * 44100\\n\\n// =========================== EXPORTED API\\nfunction x_fs_onReadSoundFileResponse (\\n    id: fs_OperationId, \\n    status: fs_OperationStatus,\\n    sound: FloatArray[]\\n): void {\\n    _fs_assertOperationExists(id, 'x_fs_onReadSoundFileResponse')\\n    _FS_OPERATIONS_IDS.delete(id)\\n    // Finish cleaning before calling the callback in case it would throw an error.\\n    const callback = _FS_OPERATIONS_SOUND_CALLBACKS.get(id)\\n    callback(id, status, sound)\\n    _FS_OPERATIONS_SOUND_CALLBACKS.delete(id)\\n}\\n\\nfunction x_fs_onWriteSoundFileResponse (\\n    id: fs_OperationId,\\n    status: fs_OperationStatus,\\n): void {\\n    _fs_assertOperationExists(id, 'x_fs_onWriteSoundFileResponse')\\n    _FS_OPERATIONS_IDS.delete(id)\\n    // Finish cleaning before calling the callback in case it would throw an error.\\n    const callback = _FS_OPERATIONS_CALLBACKS.get(id)\\n    callback(id, status)\\n    _FS_OPERATIONS_CALLBACKS.delete(id)\\n}\\n\\nfunction x_fs_onSoundStreamData (\\n    id: fs_OperationId, \\n    block: FloatArray[]\\n): Int {\\n    _fs_assertOperationExists(id, 'x_fs_onSoundStreamData')\\n    const buffers = _FS_SOUND_STREAM_BUFFERS.get(id)\\n    for (let i: Int = 0; i < buffers.length; i++) {\\n        buf_pushBlock(buffers[i], block[i])\\n    }\\n    return buffers[0].pullAvailableLength\\n}\\n\\nfunction x_fs_onCloseSoundStream (\\n    id: fs_OperationId, \\n    status: fs_OperationStatus\\n): void {\\n    fs_closeSoundStream(id, status)\\n}\\n\\n\\n// =========================== FS API\\nclass fs_SoundInfo {\\n    channelCount: Int\\n    sampleRate: Float\\n    bitDepth: Float\\n    encodingFormat: string\\n    endianness: string\\n    extraOptions: string\\n}\\n\\nfunction fs_readSoundFile(\\n    url: Url,\\n    soundInfo: fs_SoundInfo,\\n    callback: fs_OperationSoundCallback\\n): fs_OperationId {\\n    const id: fs_OperationId = _fs_createOperationId()\\n    _FS_OPERATIONS_SOUND_CALLBACKS.set(id, callback)\\n    i_fs_readSoundFile(id, url, fs_soundInfoToMessage(soundInfo))\\n    return id\\n}\\n\\nfunction fs_writeSoundFile(\\n    sound: FloatArray[],\\n    url: Url,\\n    soundInfo: fs_SoundInfo,\\n    callback: fs_OperationCallback,\\n): fs_OperationId {\\n    const id: fs_OperationId = _fs_createOperationId()\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback)\\n    i_fs_writeSoundFile(id, sound, url, fs_soundInfoToMessage(soundInfo))\\n    return id\\n}\\n\\nfunction fs_openSoundReadStream(\\n    url: Url, \\n    soundInfo: fs_SoundInfo,\\n    callback: fs_OperationCallback,\\n): fs_OperationId {\\n    const id: fs_OperationId = _fs_createOperationId()\\n    const buffers: Array<buf_SoundBuffer> = []\\n    for (let channel = 0; channel < soundInfo.channelCount; channel++) {\\n        buffers.push(new buf_SoundBuffer(_FS_SOUND_BUFFER_LENGTH))\\n    }\\n    _FS_SOUND_STREAM_BUFFERS.set(id, buffers)\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback)\\n    i_fs_openSoundReadStream(id, url, fs_soundInfoToMessage(soundInfo))\\n    return id\\n}\\n\\nfunction fs_openSoundWriteStream(\\n    url: Url, \\n    soundInfo: fs_SoundInfo,\\n    callback: fs_OperationCallback,\\n): fs_OperationId {\\n    const id: fs_OperationId = _fs_createOperationId()\\n    _FS_SOUND_STREAM_BUFFERS.set(id, [])\\n    _FS_OPERATIONS_CALLBACKS.set(id, callback)\\n    i_fs_openSoundWriteStream(id, url, fs_soundInfoToMessage(soundInfo))\\n    return id\\n}\\n\\nfunction fs_sendSoundStreamData(\\n    id: fs_OperationId, \\n    block: FloatArray[],\\n): void {\\n    _fs_assertOperationExists(id, 'fs_sendSoundStreamData')\\n    i_fs_sendSoundStreamData(id, block)\\n}\\n\\nfunction fs_closeSoundStream (\\n    id: fs_OperationId, \\n    status: fs_OperationStatus\\n): void {\\n    if (!_FS_OPERATIONS_IDS.has(id)) {\\n        return\\n    }\\n    _FS_OPERATIONS_IDS.delete(id)\\n    _FS_OPERATIONS_CALLBACKS.get(id)(id, status)\\n    _FS_OPERATIONS_CALLBACKS.delete(id)\\n    // Delete this last, to give the callback \\n    // a chance to save a reference to the buffer\\n    // If write stream, there won't be a buffer\\n    if (_FS_SOUND_STREAM_BUFFERS.has(id)) {\\n        _FS_SOUND_STREAM_BUFFERS.delete(id)\\n    }\\n    i_fs_closeSoundStream(id, status)\\n}\\n\\nfunction fs_soundInfoToMessage(soundInfo: fs_SoundInfo): Message {\\n    const info: Message = msg_create([\\n        MSG_FLOAT_TOKEN,\\n        MSG_FLOAT_TOKEN,\\n        MSG_FLOAT_TOKEN,\\n        MSG_STRING_TOKEN,\\n        soundInfo.encodingFormat.length,\\n        MSG_STRING_TOKEN,\\n        soundInfo.endianness.length,\\n        MSG_STRING_TOKEN,\\n        soundInfo.extraOptions.length\\n    ])\\n    msg_writeFloatToken(info, 0, ${Float}(soundInfo.channelCount))\\n    msg_writeFloatToken(info, 1, ${Float}(soundInfo.sampleRate))\\n    msg_writeFloatToken(info, 2, ${Float}(soundInfo.bitDepth))\\n    msg_writeStringToken(info, 3, soundInfo.encodingFormat)\\n    msg_writeStringToken(info, 4, soundInfo.endianness)\\n    msg_writeStringToken(info, 5, soundInfo.extraOptions)\\n    return info\\n}\\n\\n// =========================== PRIVATE\\nfunction _fs_createOperationId(): fs_OperationId {\\n    const id: fs_OperationId = _FS_OPERATION_COUNTER++\\n    _FS_OPERATIONS_IDS.add(id)\\n    return id\\n}\\n\\nfunction _fs_assertOperationExists(\\n    id: fs_OperationId,\\n    operationName: string,\\n): void {\\n    if (!_FS_OPERATIONS_IDS.has(id)) {\\n        throw new Error(operationName + ' operation unknown : ' + id.toString())\\n    }\\n}\";\n\nexport { FS_ASC as default };\n//# sourceMappingURL=fs.asc.js.map\n","import CORE_ASC from './core.asc.js';\nimport BUF_ASC from './buf.asc.js';\nimport SKED_ASC from './sked.asc.js';\nimport MSG_ASC from './msg.asc.js';\nimport COMMONS_ASC from './commons.asc.js';\nimport FS_ASC from './fs.asc.js';\nimport { replaceCoreCodePlaceholders } from '../../compile-helpers.js';\n\n// TODO : no need for the whole codeVariableNames here\nvar generateCoreCodeAsc = (codeVariableNames) => {\n    return (replaceCoreCodePlaceholders(codeVariableNames, CORE_ASC) +\n        replaceCoreCodePlaceholders(codeVariableNames, BUF_ASC) +\n        replaceCoreCodePlaceholders(codeVariableNames, SKED_ASC) +\n        replaceCoreCodePlaceholders(codeVariableNames, COMMONS_ASC) +\n        replaceCoreCodePlaceholders(codeVariableNames, MSG_ASC) +\n        replaceCoreCodePlaceholders(codeVariableNames, FS_ASC));\n};\n\nexport { generateCoreCodeAsc as default };\n//# sourceMappingURL=index.js.map\n","import { graphTraversalForCompile, buildMetadata, trimGraph, preCompileSignalAndMessageFlow } from '../compile-helpers.js';\nimport compileDeclare from '../engine-common/compile-declare.js';\nimport compileLoop from '../engine-common/compile-loop.js';\nimport { renderCode } from '../functional-helpers.js';\nimport generateCoreCodeAsc from './core-code/index.js';\nimport { compileInletCallers, compileOutletListeners } from '../engine-common/compile-portlet-accessors.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nvar compileToAssemblyscript = (compilation) => {\n    const { audioSettings, inletCallerSpecs, codeVariableNames } = compilation;\n    const { channelCount } = audioSettings;\n    const graphTraversal = graphTraversalForCompile(compilation.graph, inletCallerSpecs);\n    const globs = compilation.codeVariableNames.globs;\n    const { FloatArray } = codeVariableNames.types;\n    const metadata = buildMetadata(compilation);\n    trimGraph(compilation, graphTraversal);\n    const precompiledPortlets = preCompileSignalAndMessageFlow(compilation, graphTraversal);\n    // prettier-ignore\n    return renderCode `\n        ${generateCoreCodeAsc(codeVariableNames)}\n\n        ${compileDeclare(compilation, graphTraversal, precompiledPortlets)}\n\n        ${compileInletCallers(compilation)}\n        \n        ${compileOutletListeners(compilation, (variableName) => `\n            export declare function ${variableName}(m: Message): void\n        `)}\n\n        const metadata: string = '${JSON.stringify(metadata)}'\n        let ${globs.input}: FloatArray = new ${FloatArray}(0)\n        let ${globs.output}: FloatArray = new ${FloatArray}(0)\n        \n        export function configure(sampleRate: Float, blockSize: Int): void {\n            ${globs.input} = new ${FloatArray}(blockSize * ${channelCount.in.toString()})\n            ${globs.output} = new ${FloatArray}(blockSize * ${channelCount.out.toString()})\n            ${globs.sampleRate} = sampleRate\n            ${globs.blockSize} = blockSize\n            _commons_emitEngineConfigure()\n        }\n\n        export function getInput(): ${FloatArray} { return ${globs.input} }\n\n        export function getOutput(): ${FloatArray} { return ${globs.output} }\n\n        export function loop(): void {\n            ${compileLoop(compilation, graphTraversal)}\n        }\n\n        // FS IMPORTS\n        export declare function i_fs_readSoundFile (id: fs_OperationId, url: Url, info: Message): void\n        export declare function i_fs_writeSoundFile (id: fs_OperationId, sound: FloatArray[], url: Url, info: Message): void\n        export declare function i_fs_openSoundReadStream (id: fs_OperationId, url: Url, info: Message): void\n        export declare function i_fs_openSoundWriteStream (id: fs_OperationId, url: Url, info: Message): void\n        export declare function i_fs_sendSoundStreamData (id: fs_OperationId, block: FloatArray[]): void\n        export declare function i_fs_closeSoundStream (id: fs_OperationId, status: fs_OperationStatus): void\n\n        export {\n            metadata,\n\n            // FS EXPORTS\n            x_fs_onReadSoundFileResponse as fs_onReadSoundFileResponse,\n            x_fs_onWriteSoundFileResponse as fs_onWriteSoundFileResponse,\n            x_fs_onSoundStreamData as fs_onSoundStreamData,\n            x_fs_onCloseSoundStream as fs_onCloseSoundStream,\n\n            // MSG EXPORTS\n            x_msg_create as msg_create,\n            x_msg_getTokenTypes as msg_getTokenTypes,\n            x_msg_createTemplate as msg_createTemplate,\n            msg_writeStringToken,\n            msg_writeFloatToken,\n            msg_readStringToken,\n            msg_readFloatToken,\n            MSG_FLOAT_TOKEN,\n            MSG_STRING_TOKEN,\n\n            // COMMONS EXPORTS\n            commons_setArray,\n            commons_getArray, \n\n            // CORE EXPORTS\n            createFloatArray,\n            x_core_createListOfArrays as core_createListOfArrays,\n            x_core_pushToListOfArrays as core_pushToListOfArrays,\n            x_core_getListOfArraysLength as core_getListOfArraysLength,\n            x_core_getListOfArraysElem as core_getListOfArraysElem,\n\n            // INLET CALLERS\n            ${Object.entries(inletCallerSpecs).map(([nodeId, inletIds]) => inletIds.map(inletId => codeVariableNames.inletCallers[nodeId][inletId] + ','))}\n        }\n    `;\n};\n\nexport { compileToAssemblyscript as default };\n//# sourceMappingURL=compile-to-assemblyscript.js.map\n","import { getNodeImplementation } from '../compile-helpers.js';\nimport { mapObject, mapArray } from '../functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n/**\n * Generates the whole set of variable names for a compilation for a given graph.\n *\n * @param nodeImplementations\n * @param graph\n * @returns\n */\nconst generate = (nodeImplementations, graph, debug) => ({\n    nodes: createNamespace('n', Object.values(graph).reduce((nodeMap, node) => {\n        const nodeImplementation = getNodeImplementation(nodeImplementations, node.type);\n        const namespaceLabel = `[${node.type}] ${node.id}`;\n        const prefix = debug\n            ? _v(`${node.type.replace(/[^a-zA-Z0-9_]/g, '')}_${node.id}`)\n            : _v(node.id);\n        nodeMap[node.id] = {\n            ins: createNamespaceFromPortlets(`${namespaceLabel}.ins`, node.inlets, 'signal', (inlet) => `${prefix}_INS_${_v(inlet.id)}`),\n            rcvs: createNamespaceFromPortlets(`${namespaceLabel}.rcvs`, node.inlets, 'message', (inlet) => `${prefix}_RCVS_${_v(inlet.id)}`),\n            outs: createNamespaceFromPortlets(`${namespaceLabel}.outs`, node.outlets, 'signal', (outlet) => `${prefix}_OUTS_${_v(outlet.id)}`),\n            snds: createNamespaceFromPortlets(`${namespaceLabel}.snds`, node.outlets, 'message', (outlet) => `${prefix}_SNDS_${_v(outlet.id)}`),\n            state: createNamespace(`${namespaceLabel}.state`, mapObject(nodeImplementation.stateVariables, (_, stateVariable) => `${prefix}_STATE_${_v(stateVariable)}`)),\n        };\n        return nodeMap;\n    }, {})),\n    globs: createNamespace('g', {\n        iterFrame: 'F',\n        frame: 'FRAME',\n        blockSize: 'BLOCK_SIZE',\n        sampleRate: 'SAMPLE_RATE',\n        output: 'OUTPUT',\n        input: 'INPUT',\n        nullMessageReceiver: 'SND_TO_NULL',\n        // TODO : not a glob\n        m: 'm',\n    }),\n    outletListeners: createNamespace('outletListeners', {}),\n    inletCallers: createNamespace('inletCallers', {}),\n    types: createNamespace('types', {}),\n});\n/**\n * Helper that attaches to the generated `codeVariableNames` the names of specified outlet listeners.\n *\n * @param codeVariableNames\n * @param outletListenerSpecs\n */\nconst attachOutletListeners = (codeVariableNames, outletListenerSpecs) => {\n    Object.entries(outletListenerSpecs).forEach(([nodeId, outletIds]) => {\n        codeVariableNames.outletListeners[nodeId] = {};\n        outletIds.forEach((outletId) => {\n            codeVariableNames.outletListeners[nodeId][outletId] = `outletListener_${nodeId}_${outletId}`;\n        });\n    });\n};\n/**\n * Helper that attaches to the generated `codeVariableNames` the names of specified inlet callers.\n *\n * @param codeVariableNames\n * @param inletCallerSpecs\n */\nconst attachInletCallers = (codeVariableNames, inletCallerSpecs) => {\n    Object.entries(inletCallerSpecs).forEach(([nodeId, inletIds]) => {\n        codeVariableNames.inletCallers[nodeId] = {};\n        inletIds.forEach((inletId) => {\n            codeVariableNames.inletCallers[nodeId][inletId] = `inletCaller_${nodeId}_${inletId}`;\n        });\n    });\n};\n/** Helper to attach types to variable names depending on compile target and bitDepth. */\nconst attachTypes = (codeVariableNames, bitDepth) => {\n    codeVariableNames.types.Int = 'i32';\n    codeVariableNames.types.Float = bitDepth === 32 ? 'f32' : 'f64';\n    codeVariableNames.types.FloatArray =\n        bitDepth === 32 ? 'Float32Array' : 'Float64Array';\n    codeVariableNames.types.getFloat =\n        bitDepth === 32 ? 'getFloat32' : 'getFloat64';\n    codeVariableNames.types.setFloat =\n        bitDepth === 32 ? 'setFloat32' : 'setFloat64';\n};\n/**\n * Helper to generate VariableNames, essentially a proxy object that throws an error\n * when trying to access undefined properties.\n *\n * @param namespace\n * @returns\n */\nconst createNamespace = (label, namespace) => {\n    return new Proxy(namespace, {\n        get: (target, k) => {\n            const key = String(k);\n            if (!target.hasOwnProperty(key)) {\n                if (key[0] === '$' && target.hasOwnProperty(key.slice(1))) {\n                    return target[key.slice(1)];\n                }\n                // Whitelist some fields that are undefined but accessed at\n                // some point or another by our code.\n                if ([\n                    'toJSON',\n                    'Symbol(Symbol.toStringTag)',\n                    'constructor',\n                    '$$typeof',\n                    '@@__IMMUTABLE_ITERABLE__@@',\n                    '@@__IMMUTABLE_RECORD__@@',\n                ].includes(key)) {\n                    return undefined;\n                }\n                throw new Error(`Namespace \"${label}\" doesn't know key \"${String(key)}\"`);\n            }\n            return target[key];\n        },\n    });\n};\nconst assertValidNamePart = (namePart) => {\n    const isInvalid = !VALID_NAME_PART_REGEXP.exec(namePart);\n    if (isInvalid) {\n        throw new Error(`Invalid variable name for code generation \"${namePart}\"`);\n    }\n    return namePart;\n};\nconst _v = assertValidNamePart;\nconst VALID_NAME_PART_REGEXP = /^[a-zA-Z0-9_]+$/;\nconst createNamespaceFromPortlets = (label, portletMap, portletType, mapFunction) => createNamespace(label, mapArray(Object.values(portletMap).filter((portlet) => portlet.type === portletType), (portlet) => [portlet.id, mapFunction(portlet)]));\n\nexport { assertValidNamePart, attachInletCallers, attachOutletListeners, attachTypes, createNamespace, createNamespaceFromPortlets, generate };\n//# sourceMappingURL=code-variable-names.js.map\n","import macros from './engine-javascript/macros.js';\nimport macros$1 from './engine-assemblyscript/macros.js';\nimport compileToJavascript from './engine-javascript/compile-to-javascript.js';\nimport compileToAssemblyscript from './engine-assemblyscript/compile-to-assemblyscript.js';\nimport { generate, attachInletCallers, attachOutletListeners, attachTypes } from './engine-common/code-variable-names.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nvar compile = (graph, nodeImplementations, compilerSettings) => {\n    const { audioSettings, inletCallerSpecs, outletListenerSpecs, target, debug, } = validateSettings(compilerSettings);\n    const macros = getMacros(target);\n    const codeVariableNames = generate(nodeImplementations, graph, debug);\n    attachInletCallers(codeVariableNames, inletCallerSpecs);\n    attachOutletListeners(codeVariableNames, outletListenerSpecs);\n    attachTypes(codeVariableNames, audioSettings.bitDepth);\n    return executeCompilation({\n        target,\n        graph,\n        nodeImplementations,\n        audioSettings,\n        inletCallerSpecs,\n        outletListenerSpecs,\n        codeVariableNames,\n        macros,\n        debug,\n    });\n};\n/** Asserts settings are valid (or throws error) and sets default values. */\nconst validateSettings = (settings) => {\n    const inletCallerSpecs = settings.inletCallerSpecs || {};\n    const outletListenerSpecs = settings.outletListenerSpecs || {};\n    const debug = settings.debug || false;\n    if (![32, 64].includes(settings.audioSettings.bitDepth)) {\n        throw new InvalidSettingsError(`\"bitDepth\" can be only 32 or 64`);\n    }\n    return {\n        ...settings,\n        outletListenerSpecs,\n        inletCallerSpecs,\n        debug,\n    };\n};\n/** Helper to get code macros from compile target. */\nconst getMacros = (target) => ({ javascript: macros, assemblyscript: macros$1 }[target]);\n/** Helper to execute compilation */\nconst executeCompilation = (compilation) => {\n    if (compilation.target === 'javascript') {\n        return compileToJavascript(compilation);\n    }\n    else if (compilation.target === 'assemblyscript') {\n        return compileToAssemblyscript(compilation);\n    }\n    else {\n        throw new Error(`Invalid compilation.target ${compilation.target}`);\n    }\n};\nclass InvalidSettingsError extends Error {\n}\n\nexport { compile as default, executeCompilation, getMacros, validateSettings };\n//# sourceMappingURL=compile.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n/**\n * Renders templated strings which contain nested arrays of strings.\n * This helper allows to use functions such as `.map` to generate several lines\n * of code, without having to use `.join('\\n')`.\n */\nconst renderCode = (strings, ...codeLines) => {\n    let rendered = '';\n    for (let i = 0; i < strings.length; i++) {\n        rendered += strings[i];\n        if (codeLines[i]) {\n            rendered += _renderCodeRecursive(codeLines[i]);\n        }\n    }\n    return rendered;\n};\nconst _renderCodeRecursive = (codeLines) => {\n    if (Array.isArray(codeLines)) {\n        return codeLines\n            .map(_renderCodeRecursive)\n            .filter((line) => line.length)\n            .join('\\n');\n    }\n    return codeLines.toString();\n};\n/** Generate an integer series from 0 to `count`. */\nconst countTo = (count) => {\n    const results = [];\n    for (let i = 0; i < count; i++) {\n        results.push(i);\n    }\n    return results;\n};\n/**\n * @param func Called for each element in `src`. Returns a pair `[<key>, <value>]`.\n * @returns A new object whoses keys and values are the result of\n * applying `func` to each element in `src`.\n */\nconst mapArray = (src, func) => {\n    const dest = {};\n    src.forEach((srcValue, i) => {\n        const [key, destValue] = func(srcValue, i);\n        dest[key] = destValue;\n    });\n    return dest;\n};\n/**\n * Renders one of several alternative bits of code.\n *\n * @param routes A list of alternatives `[<test>, <code>]`\n * @returns The first `code` whose `test` evaluated to true.\n */\nconst renderSwitch = (...routes) => {\n    const route = routes.find(([test]) => test);\n    if (!route) {\n        throw new Error(`no route found`);\n    }\n    return route[1];\n};\n/** Renders `code` only if `test` is truthy. */\nconst renderIf = (test, code) => {\n    if (!test) {\n        return '';\n    }\n    if (typeof code === 'function') {\n        return code();\n    }\n    else {\n        return code;\n    }\n};\n\nexport { countTo, mapArray, renderCode, renderIf, renderSwitch };\n//# sourceMappingURL=functional-helpers.js.map\n","var IdNamespaces;\n(function (IdNamespaces) {\n    IdNamespaces[\"PD\"] = \"n\";\n    IdNamespaces[\"MIXER\"] = \"m\";\n})(IdNamespaces || (IdNamespaces = {}));\n//# sourceMappingURL=to-dsp-graph.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst assertNumber = (value) => {\n    if (typeof value !== 'number') {\n        throw new ValidationError(`${value} is not a number`);\n    }\n    return value;\n};\nconst assertString = (value) => {\n    if (typeof value !== 'string') {\n        throw new ValidationError(`${value} is not a string`);\n    }\n    return value;\n};\nconst assertOptionalNumber = (value) => {\n    return value !== undefined ? assertNumber(value) : undefined;\n};\nconst assertOptionalString = (value) => {\n    return value !== undefined ? assertString(value) : undefined;\n};\nclass ValidationError extends Error {\n}\n\nexport { ValidationError, assertNumber, assertOptionalNumber, assertOptionalString, assertString };\n//# sourceMappingURL=validation.js.map\n","import { mapArray } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// TODO : set message not supported\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode, patch) => {\n        let channelMapping;\n        if (pdNode.args.length) {\n            // Channels are provided as 1-indexed, so we translate them back to 0-indexed.\n            channelMapping = pdNode.args.map((channel) => assertNumber(channel) - 1);\n        }\n        else {\n            // If no channel is provided, since a patch doesn't contain the channel count info,\n            // we just guess the `channelMapping` according to inlets that are defined on the dac.\n            const dacInletIds = new Set();\n            patch.connections.forEach((connection) => {\n                if (connection.sink.nodeId === pdNode.id) {\n                    dacInletIds.add(connection.sink.portletId);\n                }\n            });\n            const maxInlet = Math.max(...dacInletIds);\n            channelMapping = [];\n            for (let channel = 0; channel <= maxInlet; channel++) {\n                channelMapping.push(channel);\n            }\n        }\n        return { channelMapping };\n    },\n    build: (nodeArgs) => ({\n        inlets: mapArray(nodeArgs.channelMapping, (_, i) => [`${i}`, { type: 'signal', id: `${i}` }]),\n        outlets: {},\n        isPullingSignal: true,\n    }),\n};\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, globs, node, compilation: { audioSettings, target }, }) => node.args.channelMapping\n    // Save the original index\n    .map((destination, i) => [destination, i])\n    // Ignore channels that are out of bounds\n    .filter(([destination]) => 0 <= destination && destination < audioSettings.channelCount.out)\n    .map(([destination, i]) => target === 'javascript'\n    ? `${globs.output}[${destination}][${globs.iterFrame}] = ${ins[`${i}`]}`\n    : `${globs.output}[${globs.iterFrame} + ${globs.blockSize} * ${destination}] = ${ins[`${i}`]}`)\n    .join('\\n') + '\\n';\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { loop, stateVariables };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=dac~.js.map\n","import { mapArray } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// TODO : set message not supported\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode, patch) => {\n        let channelMapping;\n        if (pdNode.args.length) {\n            // Channels are provided as 1-indexed, so we translate them back to 0-indexed.\n            channelMapping = pdNode.args.map((channel) => assertNumber(channel) - 1);\n        }\n        else {\n            // If no channel is provided, since a patch doesn't contain the channel count info,\n            // we just guess the `channelMapping` according to inlets that are defined on the dac.\n            const adcOutletIds = new Set();\n            patch.connections.forEach((connection) => {\n                if (connection.source.nodeId === pdNode.id) {\n                    adcOutletIds.add(connection.source.portletId);\n                }\n            });\n            const maxOutlet = Math.max(...adcOutletIds);\n            channelMapping = [];\n            for (let channel = 0; channel <= maxOutlet; channel++) {\n                channelMapping.push(channel);\n            }\n        }\n        return { channelMapping };\n    },\n    build: (nodeArgs) => ({\n        inlets: {},\n        outlets: mapArray(nodeArgs.channelMapping, (_, i) => [`${i}`, { type: 'signal', id: `${i}` }]),\n    }),\n};\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ outs, globs, node, compilation: { audioSettings, target }, }) => node.args.channelMapping\n    // Save the original index \n    .map((source, i) => [source, i])\n    // Ignore channels that are out of bounds\n    .filter(([source]) => 0 <= source && source < audioSettings.channelCount.in)\n    .map(([source, i]) => target === 'javascript'\n    ? `${outs[`${i}`]} = ${globs.input}[${source}][${globs.iterFrame}]`\n    : `${outs[`${i}`]} = ${globs.input}[${globs.iterFrame} + ${globs.blockSize} * ${source}]`)\n    .join('\\n') + '\\n';\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { loop, stateVariables };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=adc~.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst coldFloatInlet = (messageName, storageName) => {\n    return `if (msg_isMatching(${messageName}, [MSG_FLOAT_TOKEN])) {\n        ${storageName} = msg_readFloatToken(${messageName}, 0)\n        return\n    }`;\n};\nconst coldFloatInletWithSetter = (messageName, setterName) => {\n    return `if (msg_isMatching(${messageName}, [MSG_FLOAT_TOKEN])) {\n        ${setterName}(msg_readFloatToken(${messageName}, 0))\n        return\n    }`;\n};\n\nexport { coldFloatInlet, coldFloatInletWithSetter };\n//# sourceMappingURL=standard-message-receivers.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    phase: 1,\n    frequency: 1,\n    J: 1,\n    K: 1,\n    funcSetFrequency: 1,\n    funcSetPhase: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        frequency: assertOptionalNumber(pdNode.args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0_message': { type: 'message', id: '0_message' },\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\nconst makeNodeImplementation = ({ coeff, generateOperation, }) => {\n    // ------------------------------ declare ------------------------------ //\n    const declare = (context) => {\n        const { state, macros: { Var, Func } } = context;\n        return (_hasSignalInput(context.node)\n            ? declareSignal(context)\n            : declareMessage(context)) + `\n                const ${state.funcSetPhase} = ${Func([\n            Var('phase', 'Float')\n        ], 'void')} => {${state.phase} = phase % 1.0${coeff ? ` * ${coeff}` : ''}}\n            `;\n    };\n    const declareSignal = ({ state, globs, macros: { Var }, }) => `\n        let ${Var(state.phase, 'Float')} = 0\n        let ${Var(state.J, 'Float')}\n\n        commons_waitEngineConfigure(() => {\n            ${state.J} = ${coeff ? `${coeff}` : '1'} / ${globs.sampleRate}\n        })\n    `;\n    const declareMessage = ({ state, globs, node: { args }, macros: { Func, Var }, }) => `\n        let ${Var(state.phase, 'Float')} = 0\n        let ${Var(state.frequency, 'Float')} = ${args.frequency}\n        let ${Var(state.K, 'Float')} = 0\n\n        const ${state.funcSetFrequency} = ${Func([\n        Var('frequency', 'Float')\n    ], 'void')} => {\n            ${state.frequency} = frequency\n            ${state.K} = ${coeff ? `${coeff} * ` : ''}${state.frequency} / ${globs.sampleRate}\n        }\n\n        commons_waitEngineConfigure(() => {\n            ${state.funcSetFrequency}(${state.frequency})\n        })\n    `;\n    // ------------------------------- loop ------------------------------ //\n    const loop = (context) => _hasSignalInput(context.node)\n        ? loopSignal(context)\n        : loopMessage(context);\n    const loopSignal = ({ ins, state, outs }) => `\n        ${outs.$0} = ${generateOperation(state.phase)}\n        ${state.phase} += (${state.J} * ${ins.$0})\n    `;\n    // Take only the last received frequency message (first in the list)\n    const loopMessage = ({ state, outs }) => `\n        ${outs.$0} = ${generateOperation(state.phase)}\n        ${state.phase} += ${state.K}\n    `;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ globs, state }) => ({\n        '0_message': coldFloatInletWithSetter(globs.m, state.funcSetFrequency),\n        '1': coldFloatInletWithSetter(globs.m, state.funcSetPhase),\n    });\n    return {\n        declare,\n        messages,\n        loop,\n        stateVariables,\n    };\n};\n// ------------------------------------------------------------------- //\nconst _hasSignalInput = (node) => node.sources['0'] && node.sources['0'].length;\nconst nodeImplementations = {\n    'osc~': makeNodeImplementation({\n        coeff: '2 * Math.PI',\n        generateOperation: (phase) => `Math.cos(${phase})`\n    }),\n    'phasor~': makeNodeImplementation({\n        generateOperation: (phase) => `${phase} % 1`\n    }),\n};\nconst builders = {\n    'osc~': builder,\n    'phasor~': builder,\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=osc~-phasor~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInlet } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    minValue: 1,\n    maxValue: 1,\n    inputValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        minValue: assertOptionalNumber(args[0]) || 0,\n        maxValue: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node: { args }, state, macros: { Var } }) => `\n    let ${Var(state.inputValue, 'Float')} = 0\n    let ${Var(state.minValue, 'Float')} = ${args.minValue}\n    let ${Var(state.maxValue, 'Float')} = ${args.maxValue}\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, outs, state, node }) => `\n    ${outs.$0} = Math.max(Math.min(${state.maxValue}, ${_hasSignalInput(node) ? ins.$0 : state.inputValue}), ${state.minValue})\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0_message': coldFloatInlet(globs.m, state.inputValue),\n    '1': coldFloatInlet(globs.m, state.minValue),\n    '2': coldFloatInlet(globs.m, state.maxValue),\n});\n// ------------------------------------------------------------------- //\nconst _hasSignalInput = (node) => node.sources['0'] && node.sources['0'].length;\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=clip~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInlet } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    currentValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node: { args }, state, macros: { Var } }) => `\n    let ${Var(state.currentValue, 'Float')} = ${args.initValue}\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, outs, state }) => `\n    ${outs.$0} = ${state.currentValue}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0': coldFloatInlet(globs.m, state.currentValue),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=sig~.js.map\n","const bangUtils = ({ macros: { Func, Var } }) => `\n    function msg_isBang ${Func([\n    Var('message', 'Message'),\n], 'boolean')} {\n        return (\n            msg_isStringToken(message, 0) \n            && msg_readStringToken(message, 0) === 'bang'\n        )\n    }\n\n    function msg_bang ${Func([], 'Message')} {\n        const ${Var('message', 'Message')} = msg_create([MSG_STRING_TOKEN, 4])\n        msg_writeStringToken(message, 0, 'bang')\n        return message\n    }\n`;\n\nexport { bangUtils };\n//# sourceMappingURL=core.js.map\n","import { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    currentValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPullingSignal: true,\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, macros: { Var } }) => `\n    let ${Var(state.currentValue, 'Float')} = 0\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, state }) => `\n    ${state.currentValue} = ${ins.$0}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs, snds }) => ({\n    '0_message': `\n        if (msg_isBang(${globs.m})) {\n            ${snds.$0}(msg_floats([${state.currentValue}]))\n            return \n        }\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n    sharedCode: [bangUtils]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=snapshot~.js.map\n","const point = ({ macros: { Var } }) => `\n    class Point {\n        ${Var('x', 'Float')}\n        ${Var('y', 'Float')}\n    }\n`;\nconst interpolateLin = [point, ({ macros: { Var, Func } }) => `\n    function interpolateLin ${Func([\n        Var('x', 'Float'),\n        Var('p0', 'Point'),\n        Var('p1', 'Point'),\n    ], 'Float')} {\n        return p0.y + (x - p0.x) * (p1.y - p0.y) / (p1.x - p0.x)\n    }\n`];\n\nexport { interpolateLin, point };\n//# sourceMappingURL=points.js.map\n","import { interpolateLin } from './points.js';\n\n// TODO : unit tests\nconst linesUtils = [...interpolateLin, ({ macros: { Var, Func } }) => `\n\n    class LineSegment {\n        ${Var('p0', 'Point')}\n        ${Var('p1', 'Point')}\n        ${Var('slope', 'Float')}\n    }\n\n    function removePointsBeforeFrame ${Func([\n        Var('points', 'Array<Point>'),\n        Var('frame', 'Float'),\n    ], 'Array<Point>')} {\n        const ${Var('newPoints', 'Array<Point>')} = []\n        let ${Var('i', 'Int')} = 0\n        while (i < points.length) {\n            if (frame <= points[i].x) {\n                newPoints.push(points[i])\n            }\n            i++\n        }\n        return newPoints\n    }\n\n    function insertNewLinePoints ${Func([\n        Var('points', 'Array<Point>'),\n        Var('p0', 'Point'),\n        Var('p1', 'Point'),\n    ], 'Array<Point>')} {\n        const ${Var('newPoints', 'Array<Point>')} = []\n        let ${Var('i', 'Int')} = 0\n        \n        // Keep the points that are before the new points added\n        while (i < points.length && points[i].x <= p0.x) {\n            newPoints.push(points[i])\n            i++\n        }\n        \n        // Find the start value of the start point :\n        \n        // 1. If there is a previous point and that previous point\n        // is on the same frame, we don't modify the start point value.\n        // (represents a vertical line).\n        if (0 < i - 1 && points[i - 1].x === p0.x) {\n\n        // 2. If new points are inserted in between already existing points \n        // we need to interpolate the existing line to find the startValue.\n        } else if (0 < i && i < points.length) {\n            newPoints.push({\n                x: p0.x,\n                y: interpolateLin(p0.x, points[i - 1], points[i])\n            })\n\n        // 3. If new line is inserted after all existing points, \n        // we just take the value of the last point\n        } else if (i >= points.length && points.length) {\n            newPoints.push({\n                x: p0.x,\n                y: points[points.length - 1].y,\n            })\n\n        // 4. If new line placed in first position, we take the defaultStartValue.\n        } else if (i === 0) {\n            newPoints.push({\n                x: p0.x,\n                y: p0.y,\n            })\n        }\n        \n        newPoints.push({\n            x: p1.x,\n            y: p1.y,\n        })\n        return newPoints\n    }\n\n    function computeFrameAjustedPoints ${Func([\n        Var('points', 'Array<Point>'),\n    ], 'Array<Point>')} {\n        if (points.length < 2) {\n            throw new Error('invalid length for points')\n        }\n\n        const ${Var('newPoints', 'Array<Point>')} = []\n        let ${Var('i', 'Int')} = 0\n        let ${Var('p', 'Point')} = points[0]\n        let ${Var('frameLower', 'Float')} = 0\n        let ${Var('frameUpper', 'Float')} = 0\n        \n        while(i < points.length) {\n            p = points[i]\n            frameLower = Math.floor(p.x)\n            frameUpper = frameLower + 1\n\n            // I. Placing interpolated point at the lower bound of the current frame\n            // ------------------------------------------------------------------------\n            // 1. Point is already on an exact frame,\n            if (p.x === frameLower) {\n                newPoints.push({ x: p.x, y: p.y })\n\n                // 1.a. if several of the next points are also on the same X,\n                // we find the last one to draw a vertical line.\n                while (\n                    (i + 1) < points.length\n                    && points[i + 1].x === frameLower\n                ) {\n                    i++\n                }\n                if (points[i].y !== newPoints[newPoints.length - 1].y) {\n                    newPoints.push({ x: points[i].x, y: points[i].y })\n                }\n\n                // 1.b. if last point, we quit\n                if (i + 1 >= points.length) {\n                    break\n                }\n\n                // 1.c. if next point is in a different frame we can move on to next iteration\n                if (frameUpper <= points[i + 1].x) {\n                    i++\n                    continue\n                }\n            \n            // 2. Point isn't on an exact frame\n            // 2.a. There's a previous point, the we use it to interpolate the value.\n            } else if (newPoints.length) {\n                newPoints.push({\n                    x: frameLower,\n                    y: interpolateLin(frameLower, points[i - 1], p),\n                })\n            \n            // 2.b. It's the very first point, then we don't change its value.\n            } else {\n                newPoints.push({ x: frameLower, y: p.y })\n            }\n\n            // II. Placing interpolated point at the upper bound of the current frame\n            // ---------------------------------------------------------------------------\n            // First, we find the closest point from the frame upper bound (could be the same p).\n            // Or could be a point that is exactly placed on frameUpper.\n            while (\n                (i + 1) < points.length \n                && (\n                    Math.ceil(points[i + 1].x) === frameUpper\n                    || Math.floor(points[i + 1].x) === frameUpper\n                )\n            ) {\n                i++\n            }\n            p = points[i]\n\n            // 1. If the next point is directly in the next frame, \n            // we do nothing, as this corresponds with next iteration frameLower.\n            if (Math.floor(p.x) === frameUpper) {\n                continue\n            \n            // 2. If there's still a point after p, we use it to interpolate the value\n            } else if (i < points.length - 1) {\n                newPoints.push({\n                    x: frameUpper,\n                    y: interpolateLin(frameUpper, p, points[i + 1]),\n                })\n\n            // 3. If it's the last point, we dont change the value\n            } else {\n                newPoints.push({ x: frameUpper, y: p.y })\n            }\n\n            i++\n        }\n\n        return newPoints\n    }\n\n    function computeLineSegments ${Func([\n        Var('points', 'Array<Point>'),\n    ], 'Array<LineSegment>')} {\n        const ${Var('lineSegments', 'Array<LineSegment>')} = []\n        let ${Var('i', 'Int')} = 0\n        let ${Var('p0', 'Point')}\n        let ${Var('p1', 'Point')}\n\n        while(i < points.length - 1) {\n            p0 = points[i]\n            p1 = points[i + 1]\n            lineSegments.push({\n                p0, p1, slope: p1.x !== p0.x ? (p1.y - p0.y) / (p1.x - p0.x) : 0\n            })\n            i++\n        }\n        return lineSegments\n    }\n\n`];\n\nexport { linesUtils };\n//# sourceMappingURL=lines.js.map\n","// TODO : unit testing\n// TODO : amount = 0 ?\n// TODO : missing persec and all per...\nconst computeUnitInSamples = ({ macros: { Func, Var } }) => `\n    function computeUnitInSamples ${Func([\n    Var('sampleRate', 'Float'),\n    Var('amount', 'Float'),\n    Var('unit', 'string'),\n], 'Float')} {\n        if (unit === 'msec' || unit === 'millisecond') {\n            return amount / 1000 * sampleRate\n        } else if (unit === 'sec' || unit === 'seconds' || unit === 'second') {\n            return amount * sampleRate\n        } else if (unit === 'min' || unit === 'minutes' || unit === 'minute') {\n            return amount * 60 * sampleRate\n        } else if (unit === 'samp' || unit === 'samples' || unit === 'sample') {\n            return amount\n        } else {\n            throw new Error(\"invalid time unit : \" + unit)\n        }\n    }\n`;\n\nexport { computeUnitInSamples };\n//# sourceMappingURL=timing.js.map\n","import { linesUtils } from './shared-code/lines.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    points: 1,\n    lineSegments: 1,\n    currentValue: 1,\n    nextDurationSamp: 1,\n    nextDelaySamp: 1,\n    funcSetNewLine: 1,\n    funcSetNextDuration: 1,\n    funcSetNextDelay: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ globs, state, macros: { Var, Func } }) => `\n    let ${Var(state.points, 'Array<Point>')} = []\n    let ${Var(state.lineSegments, 'Array<LineSegment>')} = []\n    let ${Var(state.currentValue, 'Float')} = 0\n    let ${Var(state.nextDurationSamp, 'Float')} = 0\n    let ${Var(state.nextDelaySamp, 'Float')} = 0\n\n    function ${state.funcSetNewLine} ${Func([\n    Var('targetValue', 'Float'),\n], 'void')} {\n        ${state.points} = removePointsBeforeFrame(${state.points}, toFloat(${globs.frame}))\n        const ${Var('startFrame', 'Float')} = toFloat(${globs.frame}) + ${state.nextDelaySamp}\n        ${state.points} = insertNewLinePoints(\n            ${state.points}, \n            {x: startFrame, y: ${state.currentValue}},\n            {x: startFrame + ${state.nextDurationSamp}, y: targetValue}\n        )\n        ${state.lineSegments} = computeLineSegments(\n            computeFrameAjustedPoints(${state.points}))\n        ${state.nextDurationSamp} = 0\n        ${state.nextDelaySamp} = 0\n    }\n\n    function ${state.funcSetNextDuration} ${Func([\n    Var('durationMsec', 'Float'),\n], 'void')} {\n        ${state.nextDurationSamp} = computeUnitInSamples(${globs.sampleRate}, durationMsec, 'msec')\n    }\n\n    function ${state.funcSetNextDelay} ${Func([\n    Var('delayMsec', 'Float'),\n], 'void')} {\n        ${state.nextDelaySamp} = computeUnitInSamples(${globs.sampleRate}, delayMsec, 'msec')\n    }\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ outs, state, globs }) => `\n    if (${state.lineSegments}.length) {\n        if (toFloat(${globs.frame}) < ${state.lineSegments}[0].p0.x) {\n\n        // This should come first to handle vertical lines\n        } else if (toFloat(${globs.frame}) === ${state.lineSegments}[0].p1.x) {\n            ${state.currentValue} = ${state.lineSegments}[0].p1.y\n            ${state.lineSegments}.shift()\n            \n        } else if (toFloat(${globs.frame}) === ${state.lineSegments}[0].p0.x) {\n            ${state.currentValue} = ${state.lineSegments}[0].p0.y\n\n        } else if (toFloat(${globs.frame}) < ${state.lineSegments}[0].p1.x) {\n            ${state.currentValue} += ${state.lineSegments}[0].slope\n\n        }\n    }\n    ${outs.$0} = ${state.currentValue}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0': `\n    if (\n        msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])\n        || msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN, MSG_FLOAT_TOKEN])\n        || msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN, MSG_FLOAT_TOKEN, MSG_FLOAT_TOKEN])\n    ) {\n        switch (msg_getLength(${globs.m})) {\n            case 3:\n                ${state.funcSetNextDelay}(msg_readFloatToken(${globs.m}, 2))\n            case 2:\n                ${state.funcSetNextDuration}(msg_readFloatToken(${globs.m}, 1))\n            case 1:\n                ${state.funcSetNewLine}(msg_readFloatToken(${globs.m}, 0))\n        }\n        return\n\n    } else if (\n        msg_isMatching(${globs.m}, [MSG_STRING_TOKEN])\n        && msg_readStringToken(${globs.m}, 0) === 'stop'\n    ) {\n        ${state.points} = []\n        ${state.lineSegments} = []\n        return\n    }\n    `,\n    '1': coldFloatInletWithSetter(globs.m, state.funcSetNextDuration),\n    '2': coldFloatInletWithSetter(globs.m, state.funcSetNextDelay),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n    sharedCode: [...linesUtils, computeUnitInSamples]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=vline~.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- loop ------------------------------ //\nconst makeNodeImplementation = ({ generateOperation, }) => {\n    const loop = ({ ins, outs }) => `\n        ${outs.$0} = ${generateOperation(ins.$0)}\n    `;\n    return { loop, stateVariables };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    'abs~': makeNodeImplementation({ generateOperation: (input) => `Math.abs(${input})` }),\n    'cos~': makeNodeImplementation({ generateOperation: (input) => `Math.cos(${input} * 2 * Math.PI)` }),\n};\nconst builders = {\n    'abs~': builder,\n    'cos~': builder,\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=funcs~.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\n// Regular expressions to deal with dollar-args\nconst DOLLAR_VAR_REGEXP_GLOB = /\\$(\\d+)/g;\n// Takes an object string arg which might contain dollars, and returns the resolved version.\n// e.g. :\n// [table $0-ARRAY] inside a patch with ID 1887 would resolve to [table 1887-ARRAY]\nconst resolveDollarArg = (arg, patch) => {\n    const patchArgs = [patch.id, ...patch.args.map((arg) => arg.toString())];\n    let matchDollar;\n    while ((matchDollar = DOLLAR_VAR_REGEXP_GLOB.exec(arg))) {\n        const patchInd = parseInt(matchDollar[1], 10);\n        if (patchInd >= patchArgs.length || patchInd < 0) {\n            throw new Error('$' + (patchInd + 1) + ': argument number out of range');\n        }\n        arg = arg.replace(matchDollar[0], patchArgs[patchInd]);\n    }\n    return arg;\n};\n\nexport { resolveDollarArg };\n//# sourceMappingURL=pdjson-helpers.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { resolveDollarArg } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/pdjson-helpers.js';\nimport { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    array: 1,\n    arrayName: 1,\n    arrayChangesSubscription: 1,\n    readPosition: 1,\n    readUntil: 1,\n    funcSetArrayName: 1,\n    funcPlay: 1,\n};\n// TODO : Should work also if array was set the play started\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode, patch) => ({\n        arrayName: resolveDollarArg(pdNode.args[0].toString(), patch),\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ state, node, macros: { Func, Var } }) => `\n    let ${Var(state.array, 'FloatArray')} = createFloatArray(0)\n    let ${Var(state.arrayName, 'string')} = \"${node.args.arrayName}\"\n    let ${Var(state.arrayChangesSubscription, 'SkedId')} = SKED_ID_NULL\n    let ${Var(state.readPosition, 'Int')} = 0\n    let ${Var(state.readUntil, 'Int')} = 0\n\n    const ${state.funcSetArrayName} = ${Func([\n    Var('arrayName', 'string')\n], 'void')} => {\n        if (${state.arrayChangesSubscription} != SKED_ID_NULL) {\n            commons_cancelArrayChangesSubscription(${state.arrayChangesSubscription})\n        }\n        ${state.arrayName} = arrayName\n        ${state.array} = createFloatArray(0)\n        ${state.readPosition} = 0\n        ${state.readUntil} = 0        \n        commons_subscribeArrayChanges(arrayName, () => {\n            ${state.array} = commons_getArray(${state.arrayName})\n            ${state.readPosition} = ${state.array}.length\n            ${state.readUntil} = ${state.array}.length\n        })\n    }\n\n    commons_waitEngineConfigure(() => {\n        if (${state.arrayName}.length) {\n            ${state.funcSetArrayName}(${state.arrayName})\n        }\n    })\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ state, snds, outs }) => `\n    if (${state.readPosition} < ${state.readUntil}) {\n        ${outs.$0} = ${state.array}[${state.readPosition}]\n        ${state.readPosition}++\n        if (${state.readPosition} >= ${state.readUntil}) {\n            ${snds.$1}(msg_bang())\n        }\n    } else {\n        ${outs.$0} = 0\n    }\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0': `\n    if (msg_getLength(${globs.m}) === 1) {\n        if (msg_isBang(${globs.m})) {\n            ${state.readPosition} = 0\n            ${state.readUntil} = ${state.array}.length\n            return \n\n        } else if (msg_isFloatToken(${globs.m}, 0)) {\n            ${state.readPosition} = toInt(msg_readFloatToken(${globs.m}, 0))\n            ${state.readUntil} = ${state.array}.length\n            return \n        }\n    \n    } else if (\n        msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_STRING_TOKEN])\n        && msg_readStringToken(${globs.m}, 0) === 'set'\n    ) {\n        ${state.funcSetArrayName}(msg_readStringToken(${globs.m}, 1))   \n        return\n\n    } else if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN, MSG_FLOAT_TOKEN])) {\n        ${state.readPosition} = toInt(msg_readFloatToken(${globs.m}, 0))\n        ${state.readUntil} = toInt(Math.min(\n            toFloat(${state.readPosition}) + msg_readFloatToken(${globs.m}, 1), \n            toFloat(${state.array}.length)\n        ))\n        return\n    }\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    loop,\n    stateVariables,\n    sharedCode: [bangUtils],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=tabplay~.js.map\n","// TODO : support for -raw (see soundfiler help)\n// TODO : find a better way to factorize this code\n// TODO : unit testing\nconst parseSoundFileOpenOpts = ({ macros: { Func, Var } }) => `\n    function parseSoundFileOpenOpts ${Func([\n    Var('m', 'Message'),\n    Var('soundInfo', 'fs_SoundInfo'),\n], 'Set<Int>')} {\n        const ${Var('unhandled', 'Set<Int>')} = new Set()\n        let ${Var('i', 'Int')} = 0\n        while (i < msg_getLength(m)) {\n            if (msg_isStringToken(m, i)) {\n                const ${Var('str', 'string')} = msg_readStringToken(m, i)\n                if (['-wave', '-aiff', '-caf', '-next', '-ascii'].includes(str)) {\n                    soundInfo.encodingFormat = str.slice(1)\n\n                } else if (str === '-raw') {\n                    console.log('-raw format not yet supported')\n                    i += 4\n                    \n                } else if (str === '-big') {\n                    soundInfo.endianness = 'b'\n\n                } else if (str === '-little') {\n                    soundInfo.endianness = 'l'\n\n                } else if (str === '-bytes') {\n                    if (i < msg_getLength(m) && msg_isFloatToken(m, i + 1)) {\n                        soundInfo.bitDepth = msg_readFloatToken(m, i + 1) * 8\n                        i++\n                    } else {\n                        console.log('failed to parse -bytes <value>')\n                    }\n\n                } else if (str === '-rate') {\n                    if (i < msg_getLength(m) && msg_isFloatToken(m, i + 1)) {\n                        soundInfo.sampleRate = msg_readFloatToken(m, i + 1)\n                        i++\n                    } else {\n                        console.log('failed to parse -rate <value>')\n                    }\n\n                } else {\n                    unhandled.add(i)\n                }\n                \n            } else {\n                unhandled.add(i)\n            }\n            i++\n        }\n        return unhandled\n    }\n`;\n// TODO : unit testing\nconst parseReadWriteFsOpts = ({ macros: { Func, Var } }) => `\n    function parseReadWriteFsOpts ${Func([\n    Var('m', 'Message'),\n    Var('soundInfo', 'fs_SoundInfo'),\n    Var('unhandledOptions', 'Set<Int>'),\n], 'string')} {\n        // Remove the \"open\" token\n        unhandledOptions.delete(0)\n\n        let ${Var('url', 'string')} = ''\n        let ${Var('urlFound', 'boolean')} = false\n        let ${Var('errored', 'boolean')} = false\n        let ${Var('i', 'Int')} = 1\n        while (i < msg_getLength(m)) {\n            if (!unhandledOptions.has(i)) {\n\n            } else if (msg_isStringToken(m, i)) {\n                url = msg_readStringToken(m, i)\n                urlFound = true\n\n            } else {\n                console.log(\"[writesf/readsf~] invalid option index \" + i.toString())\n                errored = true\n            }\n            i++\n        }\n        if (!urlFound) {\n            console.log(\"[writesf/readsf~] invalid options, file url not found\")\n            return ''\n        }\n        if (errored) {\n            return ''\n        }\n        return url\n    }\n`;\n\nexport { parseReadWriteFsOpts, parseSoundFileOpenOpts };\n//# sourceMappingURL=fs.js.map\n","import { mapArray, countTo, renderCode } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { parseSoundFileOpenOpts, parseReadWriteFsOpts } from './shared-code/fs.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    buffers: 1,\n    readingStatus: 1,\n    streamOperationId: 1,\n    frame: 1,\n};\n// TODO : check the real state machine of readsf\n//      - what happens when start / stopping / start stream ?\n//      - what happens when stream ended and starting again ?\n//      - etc ...\n// TODO : second arg : \"buffer channel size\" not implemented\n// TODO : implement raw\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertOptionalNumber(pdNode.args[0]) || 1,\n    }),\n    build: (nodeArgs) => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            ...mapArray(countTo(nodeArgs.channelCount), (channel) => [`${channel}`, { type: 'signal', id: `${channel}` }]),\n            [`${nodeArgs.channelCount}`]: {\n                type: 'message',\n                id: `${nodeArgs.channelCount}`,\n            }\n        },\n    })\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ macros: { Var }, state, }) => `\n    let ${Var(state.buffers, 'Array<buf_SoundBuffer>')} = []\n    let ${Var(state.streamOperationId, 'fs_OperationId')} = -1\n    let ${Var(state.readingStatus, 'Int')} = 0\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ state, snds, outs, node: { args: { channelCount }, }, }) => renderCode `\n    switch(${state.readingStatus}) {\n        case 1: \n            ${countTo(channelCount).map((i) => `${outs[i]} = buf_pullSample(${state.buffers}[${i}])`)}\n            break\n            \n        case 2: \n            ${countTo(channelCount).map((i) => `${outs[i]} = buf_pullSample(${state.buffers}[${i}])`)}\n            if (${state.buffers}[0].pullAvailableLength === 0) {\n                ${snds[channelCount]}(msg_bang())\n                ${state.readingStatus} = 3\n            }\n            break\n\n        case 3: \n            ${countTo(channelCount).map((i) => `${outs[i]} = 0`)}\n            ${state.readingStatus} = 0\n            break\n    }\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ node, state, globs, macros: { Var }, }) => ({\n    '0': `\n    if (msg_getLength(${globs.m}) >= 2) {\n        if (msg_isStringToken(${globs.m}, 0) \n            && msg_readStringToken(${globs.m}, 0) === 'open'\n        ) {\n            if (${state.streamOperationId} !== -1) {\n                ${state.readingStatus} = 3\n                fs_closeSoundStream(${state.streamOperationId}, FS_OPERATION_SUCCESS)\n            }\n\n            const ${Var('soundInfo', 'fs_SoundInfo')} = {\n                channelCount: ${node.args.channelCount},\n                sampleRate: ${globs.sampleRate},\n                bitDepth: 32,\n                encodingFormat: '',\n                endianness: '',\n                extraOptions: '',\n            }\n            const ${Var('unhandledOptions', 'Set<Int>')} = parseSoundFileOpenOpts(\n                ${globs.m},\n                soundInfo,\n            )\n            const ${Var('url', 'string')} = parseReadWriteFsOpts(\n                ${globs.m},\n                soundInfo,\n                unhandledOptions\n            )\n            if (url.length === 0) {\n                return\n            }\n            ${state.streamOperationId} = fs_openSoundReadStream(\n                url,\n                soundInfo,\n                () => {\n                    ${state.streamOperationId} = -1\n                    if (${state.readingStatus} === 1) {\n                        ${state.readingStatus} = 2\n                    } else {\n                        ${state.readingStatus} = 3\n                    }\n                }\n            )\n            ${state.buffers} = _FS_SOUND_STREAM_BUFFERS.get(${state.streamOperationId})\n            return\n        }\n\n    } else if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n        if (msg_readFloatToken(${globs.m}, 0) === 0) {\n            ${state.readingStatus} = 3\n            return\n\n        } else {\n            if (${state.streamOperationId} !== -1) {\n                ${state.readingStatus} = 1\n            } else {\n                console.log('[readsf~] start requested without prior open')\n            }\n            return\n\n        }\n    } else if (msg_isMatching(${globs.m}, [MSG_STRING_TOKEN])) {\n        const ${Var('action', 'string')} = msg_readStringToken(${globs.m}, 0)\n\n        if (action === 'print') {\n            console.log('[readsf~] reading = ' + ${state.readingStatus}.toString())\n            return\n        }\n    }    \n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    loop,\n    stateVariables,\n    sharedCode: [\n        parseSoundFileOpenOpts,\n        parseReadWriteFsOpts,\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=readsf~.js.map\n","import { mapArray, countTo, renderCode } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { parseSoundFileOpenOpts, parseReadWriteFsOpts } from './shared-code/fs.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst BLOCK_SIZE = 44100 * 5;\nconst stateVariables = {\n    isWriting: 1,\n    operationId: 1,\n    block: 1,\n    cursor: 1,\n    funcFlushBlock: 1,\n};\n// TODO: lots of things left to implement\n// TODO : check the real state machine of writesf\n//      - what happens when start / stopping / start stream ? \n//      - what happens when stream ended and starting again ? \n//      - etc ...\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertOptionalNumber(pdNode.args[0]) || 1,\n    }),\n    build: ({ channelCount }) => ({\n        inlets: {\n            '0_message': { type: 'message', id: '0_message' },\n            ...mapArray(countTo(channelCount), (channel) => [\n                `${channel}`,\n                { type: 'signal', id: `${channel}` },\n            ]),\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ state, node: { args }, macros: { Func, Var } }) => renderCode `\n    let ${Var(state.operationId, 'fs_OperationId')} = -1\n    let ${Var(state.isWriting, 'boolean')} = false\n    const ${Var(state.block, 'Array<FloatArray>')} = [\n        ${countTo(args.channelCount).map(() => `createFloatArray(${BLOCK_SIZE}),`)}\n    ]\n    let ${Var(state.cursor, 'Int')} = 0\n\n    const ${state.funcFlushBlock} = ${Func([], 'void')} => {\n        const ${Var('block', 'Array<FloatArray>')} = []\n        for (let ${Var('i', 'Int')} = 0; i < ${state.block}.length; i++) {\n            block.push(${state.block}[i].subarray(0, ${state.cursor}))\n        }\n        fs_sendSoundStreamData(${state.operationId}, block)\n        ${state.cursor} = 0\n    }\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ state, ins, node: { args } }) => renderCode `\n    if (${state.isWriting} === true) {\n        ${countTo(args.channelCount).map((i) => `${state.block}[${i}][${state.cursor}] = ${ins[i]}`)}\n        ${state.cursor}++\n        if (${state.cursor} === ${BLOCK_SIZE}) {\n            ${state.funcFlushBlock}()\n        }\n    }\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ node, state, globs, macros: { Var } }) => ({\n    '0_message': `\n    if (msg_getLength(${globs.m}) >= 2) {\n        if (\n            msg_isStringToken(${globs.m}, 0) \n            && msg_readStringToken(${globs.m}, 0) === 'open'\n        ) {\n            if (${state.operationId} !== -1) {\n                fs_closeSoundStream(${state.operationId}, FS_OPERATION_SUCCESS)\n            }\n\n            const ${Var('soundInfo', 'fs_SoundInfo')} = {\n                channelCount: ${node.args.channelCount},\n                sampleRate: ${globs.sampleRate},\n                bitDepth: 32,\n                encodingFormat: '',\n                endianness: '',\n                extraOptions: '',\n            }\n            const ${Var('unhandledOptions', 'Set<Int>')} = parseSoundFileOpenOpts(\n                ${globs.m},\n                soundInfo,\n            )\n            const ${Var('url', 'string')} = parseReadWriteFsOpts(\n                ${globs.m},\n                soundInfo,\n                unhandledOptions\n            )\n            if (url.length === 0) {\n                return\n            }\n            ${state.operationId} = fs_openSoundWriteStream(\n                url,\n                soundInfo,\n                () => {\n                    ${state.funcFlushBlock}()\n                    ${state.operationId} = -1\n                }\n            )\n            return\n        }\n\n    } else if (msg_isMatching(${globs.m}, [MSG_STRING_TOKEN])) {\n        const ${Var('action', 'string')} = msg_readStringToken(${globs.m}, 0)\n\n        if (action === 'start') {\n            ${state.isWriting} = true\n            return\n\n        } else if (action === 'stop') {\n            ${state.funcFlushBlock}()\n            ${state.isWriting} = false\n            return\n\n        } else if (action === 'print') {\n            console.log('[writesf~] writing = ' + ${state.isWriting}.toString())\n            return\n        }\n    }    \n    `\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    loop,\n    stateVariables,\n    sharedCode: [\n        parseSoundFileOpenOpts,\n        parseReadWriteFsOpts,\n    ],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=writesf~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    frequency: 1,\n    Q: 1,\n    // Output value Y[n]\n    y: 1,\n    // Last output value Y[n-1]\n    ym1: 1,\n    // Last output value Y[n-2]\n    ym2: 1,\n    coef1: 1,\n    coef2: 1,\n    gain: 1,\n    funcSetQ: 1,\n    funcSetFrequency: 1,\n    funcUpdateCoefs: 1,\n    funcClear: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        frequency: assertOptionalNumber(args[0]) || 0,\n        Q: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, globs, node: { args }, macros: { Var, Func } }) => `\n    let ${Var(state.frequency, 'Float')} = ${args.frequency}\n    let ${Var(state.Q, 'Float')} = ${args.Q}\n    let ${Var(state.coef1, 'Float')} = 0\n    let ${Var(state.coef2, 'Float')} = 0\n    let ${Var(state.gain, 'Float')} = 0\n    let ${Var(state.y, 'Float')} = 0\n    let ${Var(state.ym1, 'Float')} = 0\n    let ${Var(state.ym2, 'Float')} = 0\n\n    function ${state.funcUpdateCoefs} ${Func([], 'void')} {\n        let ${Var('omega', 'Float')} = ${state.frequency} * (2.0 * Math.PI) / ${globs.sampleRate};\n        let ${Var('oneminusr', 'Float')} = ${state.Q} < 0.001 ? 1.0 : Math.min(omega / ${state.Q}, 1)\n        let ${Var('r', 'Float')} = 1.0 - oneminusr\n        let ${Var('sigbp_qcos', 'Float')} = (omega >= -(0.5 * Math.PI) && omega <= 0.5 * Math.PI) ? \n            (((Math.pow(omega, 6) * (-1.0 / 720.0) + Math.pow(omega, 4) * (1.0 / 24)) - Math.pow(omega, 2) * 0.5) + 1)\n            : 0\n\n        ${state.coef1} = 2.0 * sigbp_qcos * r\n        ${state.coef2} = - r * r\n        ${state.gain} = 2 * oneminusr * (oneminusr + r * omega)\n    }\n\n    function ${state.funcSetFrequency} ${Func([\n    Var('frequency', 'Float')\n], 'void')} {\n        ${state.frequency} = (frequency < 0.001) ? 10: frequency\n        ${state.funcUpdateCoefs}()\n    }\n\n    function ${state.funcSetQ} ${Func([\n    Var('Q', 'Float')\n], 'void')} {\n        ${state.Q} = Math.max(Q, 0)\n        ${state.funcUpdateCoefs}()\n    }\n\n    function ${state.funcClear} ${Func([], 'void')} {\n        ${state.ym1} = 0\n        ${state.ym2} = 0\n    }\n\n    commons_waitEngineConfigure(() => {\n        ${state.funcUpdateCoefs}()\n    })\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, outs, state }) => `\n    ${state.y} = ${ins.$0} + ${state.coef1} * ${state.ym1} + ${state.coef2} * ${state.ym2}\n    ${outs.$0} = ${state.gain} * ${state.y}\n    ${state.ym2} = ${state.ym1}\n    ${state.ym1} = ${state.y}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0_message': `\n        if (\n            msg_isMatching(${globs.m})\n            && msg_readStringToken(${globs.m}, 0) === 'clear'\n        ) {\n            ${state.funcClear}()\n            return \n        }\n    `,\n    '1': coldFloatInletWithSetter(globs.m, state.funcSetFrequency),\n    '2': coldFloatInletWithSetter(globs.m, state.funcSetQ),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=bp~.js.map\n","// TODO : unit tests\nconst buses = ({ macros: { Var, Func } }) => `\n    const ${Var('SIGNAL_BUSES', 'Map<string, Float>')} = new Map()\n    SIGNAL_BUSES.set('', 0)\n\n    function addAssignSignalBus ${Func([\n    Var('busName', 'string'),\n    Var('value', 'Float'),\n], 'Float')} {\n        const ${Var('newValue', 'Float')} = SIGNAL_BUSES.get(busName) + value\n        SIGNAL_BUSES.set(\n            busName,\n            newValue,\n        )\n        return newValue\n    }\n\n    function resetSignalBus ${Func([\n    Var('busName', 'string')\n], 'void')} {\n        SIGNAL_BUSES.set(busName, 0)\n    }\n\n    function readSignalBus ${Func([\n    Var('busName', 'string')\n], 'Float')} {\n        return SIGNAL_BUSES.get(busName)\n    }\n`;\n\nexport { buses };\n//# sourceMappingURL=buses.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { buses } from './shared-code/buses.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    busName: 1,\n    funcSetBusName: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        busName: assertOptionalString(args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, node: { args }, macros: { Var, Func } }) => `\n    let ${Var(state.busName, 'string')} = \"\"\n\n    const ${state.funcSetBusName} = ${Func([\n    Var('busName', 'string')\n], 'void')} => {\n        if (busName.length) {\n            ${state.busName} = busName\n            resetSignalBus(${state.busName})\n        }\n    }\n\n    ${state.funcSetBusName}(\"${args.busName}\")\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, state }) => `\n    addAssignSignalBus(${state.busName}, ${ins.$0})\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0_message': `\n    if (\n        msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_STRING_TOKEN])\n        && msg_readStringToken(${globs.m}, 0) === 'set'\n    ) {\n        ${state.funcSetBusName}(msg_readStringToken(${globs.m}, 1))\n        return\n    }\n    `\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    messages,\n    stateVariables,\n    declare,\n    sharedCode: [buses]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=throw~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { buses } from './shared-code/buses.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    busName: 1,\n    funcSetBusName: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        busName: assertOptionalString(args[0]) || '',\n    }),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, node: { args }, macros: { Var, Func } }) => `\n    let ${Var(state.busName, 'string')} = \"\"\n\n    const ${state.funcSetBusName} = ${Func([\n    Var('busName', 'string')\n], 'void')} => {\n        if (busName.length) {\n            ${state.busName} = busName\n            resetSignalBus(${state.busName})\n        }\n    }\n\n    ${state.funcSetBusName}(\"${args.busName}\")\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ outs, state }) => `\n    ${outs.$0} = readSignalBus(${state.busName})\n    resetSignalBus(${state.busName})\n`;\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    declare,\n    sharedCode: [buses]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=catch~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber, assertOptionalString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    rate: 1,\n    sampleRatio: 1,\n    nextTick: 1,\n    realNextTick: 1,\n    funcSetRate: 1,\n    funcScheduleNextTick: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        rate: assertOptionalNumber(pdNode.args[0]) || 0,\n        unitAmount: assertOptionalNumber(pdNode.args[1]) || 1,\n        unit: assertOptionalString(pdNode.args[2]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ state, globs, node: { args }, macros: { Func, Var }, }) => \n// Time units are all expressed in samples here\n`\n        let ${Var(state.rate, 'Float')} = 0\n        let ${Var(state.sampleRatio, 'Float')} = 1\n        let ${Var(state.nextTick, 'Int')} = -1\n        let ${Var(state.realNextTick, 'Float')} = -1\n\n        const ${state.funcSetRate} = ${Func([\n    Var('rate', 'Float')\n], 'void')} => {\n            ${state.rate} = Math.max(rate, 0)\n        }\n\n        const ${state.funcScheduleNextTick} = ${Func([], 'void')} => {\n            ${state.realNextTick} = ${state.realNextTick} + ${state.rate} * ${state.sampleRatio}\n            ${state.nextTick} = toInt(Math.round(${state.realNextTick}))\n        }\n\n        commons_waitEngineConfigure(() => {\n            ${state.sampleRatio} = computeUnitInSamples(${globs.sampleRate}, ${args.unitAmount}, \"${args.unit}\")\n            ${state.funcSetRate}(${args.rate})\n        })\n    `;\n// ------------------------------ messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0': `\n    if (msg_getLength(${globs.m}) === 1) {\n        if (\n            (msg_isFloatToken(${globs.m}, 0) && msg_readFloatToken(${globs.m}, 0) === 0)\n            || (msg_isStringToken(${globs.m}, 0) && msg_readStringToken(${globs.m}, 0) === 'stop')\n        ) {\n            ${state.nextTick} = 0\n            ${state.realNextTick} = 0\n            return\n\n        } else if (\n            msg_isFloatToken(${globs.m}, 0)\n            || msg_isBang(${globs.m})\n        ) {\n            ${state.nextTick} = ${globs.frame}\n            ${state.realNextTick} = toFloat(${globs.frame})\n            return\n        }\n    }\n    `,\n    '1': coldFloatInletWithSetter(globs.m, state.funcSetRate),\n});\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ state, snds, globs }) => `\n    if (${globs.frame} === ${state.nextTick}) {\n        ${snds.$0}(msg_bang())\n        ${state.funcScheduleNextTick}()\n    }\n`;\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    loop,\n    stateVariables,\n    sharedCode: [computeUnitInSamples, bangUtils],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=metro.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber, assertOptionalString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    resetTime: 1,\n    sampleRatio: 1\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        unitAmount: assertOptionalNumber(pdNode.args[0]) || 1,\n        unit: assertOptionalString(pdNode.args[1]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, globs, node: { args }, macros: { Var }, }) => `\n    let ${Var(state.sampleRatio, 'Float')} = 0\n    let ${Var(state.resetTime, 'Int')} = 0\n\n    commons_waitEngineConfigure(() => {\n        ${state.sampleRatio} = computeUnitInSamples(${globs.sampleRate}, ${args.unitAmount}, \"${args.unit}\")\n    })\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, }) => ({\n    '0': `\n    if (msg_isBang(${globs.m})) {\n        ${state.resetTime} = ${globs.frame}\n        return\n\n    } else if (\n        msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_FLOAT_TOKEN, MSG_STRING_TOKEN])\n        && msg_readStringToken(${globs.m}, 0) === 'tempo'\n    ) {\n        ${state.sampleRatio} = computeUnitInSamples(\n            ${globs.sampleRate}, \n            msg_readFloatToken(${globs.m}, 1), \n            msg_readStringToken(${globs.m}, 2)\n        )\n        return\n    }\n    `,\n    '1': `\n    if (msg_isBang(${globs.m})) {\n        ${snds.$0}(msg_floats([toFloat(${globs.frame} - ${state.resetTime}) / ${state.sampleRatio}]))\n        return\n    }\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    stateVariables,\n    declare,\n    messages,\n    sharedCode: [computeUnitInSamples, bangUtils]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=timer.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber, assertOptionalString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    funcSetDelay: 1,\n    funcScheduleDelay: 1,\n    funcStopDelay: 1,\n    delay: 1,\n    scheduledBang: 1,\n    sampleRatio: 1,\n};\n// TODO : alias [del]\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        delay: assertOptionalNumber(pdNode.args[0]) || 0,\n        unitAmount: assertOptionalNumber(pdNode.args[1]) || 1,\n        unit: assertOptionalString(pdNode.args[2]) || 'msec',\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ state, globs, node: { args }, macros: { Func, Var } }) => `\n        let ${Var(state.delay, 'Float')} = 0\n        let ${Var(state.sampleRatio, 'Float')} = 1\n        let ${Var(state.scheduledBang, 'Int')} = -1\n\n        const ${state.funcSetDelay} = ${Func([\n    Var('delay', 'Float')\n], 'void')} => {\n            ${state.delay} = Math.max(0, delay)\n        }\n\n        const ${state.funcScheduleDelay} = ${Func([], 'void')} => {\n            ${state.scheduledBang} = toInt(Math.round(\n                toFloat(${globs.frame}) + ${state.delay} * ${state.sampleRatio}))\n        }\n\n        const ${state.funcStopDelay} = ${Func([], 'void')} => {\n            ${state.scheduledBang} = -1\n        }\n\n        commons_waitEngineConfigure(() => {\n            ${state.sampleRatio} = computeUnitInSamples(${globs.sampleRate}, ${args.unitAmount}, \"${args.unit}\")\n            ${state.funcSetDelay}(${args.delay})\n        })\n    `;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ state, snds, globs }) => `\n    if (\n        ${state.scheduledBang} > -1 \n        && ${state.scheduledBang} <= ${globs.frame}\n    ) {\n        ${snds.$0}(msg_bang())\n        ${state.scheduledBang} = -1\n    }\n`;\n// ------------------------------ messages ------------------------------ //\nconst messages = ({ node, state, globs, macros: { Var } }) => ({\n    '0': `\n        if (msg_getLength(${globs.m}) === 1) {\n            if (msg_isStringToken(${globs.m}, 0)) {\n                const ${Var('action', 'string')} = msg_readStringToken(${globs.m}, 0)\n                if (action === 'bang' || action === 'start') {\n                    ${state.funcScheduleDelay}()\n                    return\n                } else if (action === 'stop') {\n                    ${state.funcStopDelay}()\n                    return\n                }\n                \n            } else if (msg_isFloatToken(${globs.m}, 0)) {\n                ${state.funcSetDelay}(msg_readFloatToken(${globs.m}, 0))\n                ${state.funcScheduleDelay}()\n                return \n            }\n        \n        } else if (\n            msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_FLOAT_TOKEN, MSG_STRING_TOKEN])\n            && msg_readStringToken(${globs.m}, 0) === 'tempo'\n        ) {\n            ${state.sampleRatio} = computeUnitInSamples(\n                ${globs.sampleRate}, \n                msg_readFloatToken(${globs.m}, 1), \n                msg_readStringToken(${globs.m}, 2)\n            )\n            return\n        }\n    `,\n    '1': coldFloatInletWithSetter(globs.m, state.funcSetDelay)\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    loop,\n    stateVariables,\n    sharedCode: [computeUnitInSamples, bangUtils]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=delay.js.map\n","import { renderIf } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    value: 1,\n    funcPrepareStoreValue: 1,\n    funcPrepareStoreValueBang: 1,\n};\n// TODO : send / receive + set send / receive messages\n// ------------------------------- node builder ------------------------------ //\nconst build = ({ outputOnLoad }) => {\n    const partialNode = {\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    };\n    if (outputOnLoad) {\n        partialNode.isPushingMessages = true;\n    }\n    return partialNode;\n};\nconst builderWithInit = {\n    translateArgs: ({ args: [minValue, maxValue, init, initValue], }) => ({\n        minValue: assertNumber(minValue),\n        maxValue: assertNumber(maxValue),\n        initValue: init === 1 ? assertNumber(initValue) : 0,\n        outputOnLoad: !!init,\n    }),\n    build,\n};\nconst builderWithoutInit = {\n    translateArgs: ({ args: [minValue, maxValue] }) => ({\n        minValue: assertNumber(minValue),\n        maxValue: assertNumber(maxValue),\n        initValue: 0,\n        outputOnLoad: false,\n    }),\n    build,\n};\nconst builderWithoutMin = {\n    translateArgs: ({ args: [maxValue, init, initValue], }) => ({\n        minValue: 0,\n        maxValue: assertNumber(maxValue),\n        initValue: init === 1 ? assertNumber(initValue) : 0,\n        outputOnLoad: !!init,\n    }),\n    build,\n};\nconst makeNodeImplementation = ({ prepareStoreValue, prepareStoreValueBang, }) => {\n    // ------------------------------- declare ------------------------------ //\n    const declare = ({ node, state, macros: { Var, Func } }) => `\n        let ${Var(state.value, 'Float')} = ${node.args.initValue}\n\n        ${renderIf(prepareStoreValue, () => `const ${state.funcPrepareStoreValue} = ${Func([\n        Var('value', 'Float')\n    ], 'Float')} => {\n                return ${prepareStoreValue(node.args)}\n            }`)}\n\n        ${renderIf(prepareStoreValueBang, () => `const ${state.funcPrepareStoreValueBang} = ${Func([\n        Var('value', 'Float')\n    ], 'Float')} => {\n                return ${prepareStoreValueBang(node.args)}\n            }`)}\n    `;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ globs, snds, state }) => ({\n        '0': `\n        if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n            ${prepareStoreValue ?\n            `${state.value} = ${state.funcPrepareStoreValue}(msg_readFloatToken(${globs.m}, 0))`\n            : `${state.value} = msg_readFloatToken(${globs.m}, 0)`}\n            ${snds.$0}(msg_floats([${state.value}]))\n            return\n\n        } else if (msg_isBang(${globs.m})) {\n            ${renderIf(prepareStoreValueBang, () => `${state.value} = ${state.funcPrepareStoreValueBang}(${state.value})`)}\n            ${snds.$0}(msg_floats([${state.value}]))\n            return\n\n        } else if (\n            msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_FLOAT_TOKEN]) \n            && msg_readStringToken(${globs.m}, 0) === 'set'\n        ) {\n            ${prepareStoreValue ?\n            `${state.value} = ${state.funcPrepareStoreValue}(msg_readFloatToken(${globs.m}, 1))`\n            : `${state.value} = msg_readFloatToken(${globs.m}, 1)`}\n            return\n        }\n        `\n    });\n    // ------------------------------- loop ------------------------------ //\n    const loop = ({ node, snds, globs, state }) => renderIf(node.args.outputOnLoad, () => `if (${globs.frame} === 0) {\n                ${snds.$0}(msg_floats([${state.value}]))\n            }`);\n    return { messages, declare, stateVariables, loop, sharedCode: [bangUtils] };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    'floatatom': makeNodeImplementation({}),\n    'tgl': makeNodeImplementation({\n        prepareStoreValueBang: ({ maxValue }) => `value === 0 ? ${maxValue}: 0`\n    }),\n    'nbx': makeNodeImplementation({\n        prepareStoreValue: ({ minValue, maxValue }) => `Math.min(Math.max(value,${minValue}),${maxValue})`\n    }),\n    'hsl': makeNodeImplementation({}),\n    'hradio': makeNodeImplementation({}),\n};\nnodeImplementations['vsl'] = nodeImplementations['hsl'];\nnodeImplementations['vradio'] = nodeImplementations['hradio'];\nconst builders = {\n    'floatatom': builderWithoutInit,\n    'tgl': builderWithoutMin,\n    'nbx': builderWithInit,\n    'hsl': builderWithInit,\n    'vsl': builderWithInit,\n    'hradio': builderWithoutMin,\n    'vradio': builderWithoutMin,\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=controls-float.js.map\n","import { renderIf } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// TODO : send / receive + set send / receive messages\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args: [init] }) => ({\n        bangOnLoad: !!init,\n    }),\n    build: ({ bangOnLoad }) => {\n        const partialNode = {\n            inlets: {\n                '0': { type: 'message', id: '0' },\n            },\n            outlets: {\n                '0': { type: 'message', id: '0' },\n            },\n        };\n        if (bangOnLoad) {\n            partialNode.isPushingMessages = true;\n        }\n        return partialNode;\n    },\n};\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds }) => ({\n    '0': `\n        ${snds.$0}(msg_bang())\n        return\n    `,\n});\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ node, snds, globs }) => renderIf(node.args.bangOnLoad, `if (${globs.frame} === 0) {\n            ${snds.$0}(msg_bang())\n        }`);\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    messages,\n    stateVariables,\n    sharedCode: [bangUtils],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=controls-bang.js.map\n","import { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {},\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true\n    }),\n};\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ snds, globs }) => `\n        if (${globs.frame} === 0) {\n            ${snds.$0}(msg_bang())\n        }\n    `;\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    sharedCode: [bangUtils],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=loadbang.js.map\n","const roundFloatAsPdInt = ({ macros: { Func, Var } }) => `\n    function roundFloatAsPdInt ${Func([\n    Var('value', 'Float'),\n], 'Float')} {\n        return value > 0 ? Math.floor(value): Math.ceil(value)\n    }\n`;\n\nexport { roundFloatAsPdInt };\n//# sourceMappingURL=numbers.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { roundFloatAsPdInt } from './shared-code/numbers.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    value: 1,\n    funcSetValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        value: assertOptionalNumber(pdNode.args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        isPushingMessages: true,\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst makeDeclare = (prepareValueCode = 'value') => ({ node: { args }, state, macros: { Var, Func } }) => `\n        let ${Var(state.value, 'Float')} = 0\n\n        const ${state.funcSetValue} = ${Func([\n    Var('value', 'Float')\n], 'void')} => { ${state.value} = ${prepareValueCode} }\n        \n        ${state.funcSetValue}(${args.value})\n    `;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, }) => ({\n    '0': `\n    if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n        ${state.funcSetValue}(msg_readFloatToken(${globs.m}, 0))\n        ${snds.$0}(msg_floats([${state.value}]))\n        return \n\n    } else if (msg_isBang(${globs.m})) {\n        ${snds.$0}(msg_floats([${state.value}]))\n        return\n        \n    }\n    `,\n    '1': coldFloatInletWithSetter(globs.m, state.funcSetValue),\n});\n// ------------------------------------------------------------------- //\nconst builders = {\n    float: builder,\n    f: { aliasTo: 'float' },\n    int: builder,\n    i: { aliasTo: 'int' },\n};\nconst nodeImplementations = {\n    float: {\n        declare: makeDeclare(),\n        messages,\n        stateVariables,\n        sharedCode: [bangUtils],\n    },\n    int: {\n        declare: makeDeclare('roundFloatAsPdInt(value)'),\n        messages,\n        stateVariables,\n        sharedCode: [roundFloatAsPdInt, bangUtils],\n    },\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=float-int.js.map\n","const stateVariables = {};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\nconst makeNodeImplementation = ({ operationCode, }) => {\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ globs, snds, macros: { Var } }) => ({\n        '0': `\n        if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n            const ${Var('value', 'Float')} = msg_readFloatToken(${globs.m}, 0)\n            ${snds.$0}(msg_floats([${operationCode}]))\n            return\n        }\n        `\n    });\n    return { messages, stateVariables };\n};\n// ------------------------------------------------------------------- //\nconst MAX_MIDI_FREQ = Math.pow(2, (1499 - 69) / 12) * 440;\nconst nodeImplementations = {\n    'abs': makeNodeImplementation({ operationCode: `Math.abs(value)` }),\n    // Also possible to use optimized version, but gives approximate results : 8.17579891564 * Math.exp(0.0577622650 * value)\n    'mtof': makeNodeImplementation({ operationCode: `value <= -1500 ? 0: (value > 1499 ? ${MAX_MIDI_FREQ} : Math.pow(2, (value - 69) / 12) * 440)` }),\n    // optimized version of formula : 12 * Math.log(freq / 440) / Math.LN2 + 69\n    // which is the same as : Math.log(freq / mtof(0)) * (12 / Math.LN2) \n    // which is the same as : Math.log(freq / 8.1757989156) * (12 / Math.LN2) \n    'ftom': makeNodeImplementation({ operationCode: `value <= 0 ? -1500: 12 * Math.log(value / 440) / Math.LN2 + 69` }),\n    'rmstodb': makeNodeImplementation({ operationCode: `value <= 0 ? 0 : 20 * Math.log(value) / Math.LN10 + 100` }),\n    'dbtorms': makeNodeImplementation({ operationCode: `value <= 0 ? 0 : Math.exp(Math.LN10 * (value - 100) / 20)` }),\n    'powtodb': makeNodeImplementation({ operationCode: `value <= 0 ? 0 : 10 * Math.log(value) / Math.LN10 + 100` }),\n    'dbtopow': makeNodeImplementation({ operationCode: `value <= 0 ? 0 : Math.exp(Math.LN10 * (value - 100) / 10)` }),\n};\nconst builders = {\n    'abs': builder,\n    'mtof': builder,\n    'ftom': builder,\n    'rmstodb': builder,\n    'dbtorms': builder,\n    'powtodb': builder,\n    'dbtopow': builder,\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=funcs.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { renderIf } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    'rightOp': 1\n};\n// ------------------------------- node builder ------------------------------ //\nconst makeBuilder = (defaultValue) => ({\n    translateArgs: (pdNode) => {\n        const value = assertOptionalNumber(pdNode.args[0]);\n        return {\n            value: value !== undefined ? value : defaultValue,\n        };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1_message': { type: 'message', id: '1_message' },\n            '1': { type: 'signal', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '1') {\n            return '1_message';\n        }\n        return undefined;\n    },\n});\nconst makeNodeImplementation = ({ generateOperation, }) => {\n    // ------------------------------ declare ------------------------------ //\n    const declare = ({ node, state, macros: { Var } }) => renderIf(_hasMessageRightInlet(node), `\n                let ${Var(state.rightOp, 'Float')} = ${node.args.value}\n            `);\n    // ------------------------------- loop ------------------------------ //\n    const loop = ({ node, ins, outs, state }) => _hasMessageRightInlet(node)\n        ? `${outs.$0} = ${generateOperation(ins.$0, state.rightOp)}`\n        : `${outs.$0} = ${generateOperation(ins.$0, ins.$1)}`;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ node, state, globs }) => ({\n        '1_message': renderIf(_hasMessageRightInlet(node), `\n            if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n                ${state.rightOp} = msg_readFloatToken(${globs.m}, 0)\n                return\n            }`)\n    });\n    return { declare, loop, messages, stateVariables };\n};\n// ------------------------------------------------------------------- //\nconst _hasMessageRightInlet = (node) => !node.sources['1'] || !node.sources['1'].length;\nconst nodeImplementations = {\n    '+~': makeNodeImplementation({ generateOperation: (leftOp, rightOp) => `${leftOp} + ${rightOp}` }),\n    '-~': makeNodeImplementation({ generateOperation: (leftOp, rightOp) => `${leftOp} - ${rightOp}` }),\n    '*~': makeNodeImplementation({ generateOperation: (leftOp, rightOp) => `${leftOp} * ${rightOp}` }),\n    '/~': makeNodeImplementation({ generateOperation: (leftOp, rightOp) => `${rightOp} !== 0 ? ${leftOp} / ${rightOp} : 0` }),\n};\nconst builders = {\n    '+~': makeBuilder(0),\n    '-~': makeBuilder(0),\n    '*~': makeBuilder(1),\n    '/~': makeBuilder(1),\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=binop~.js.map\n","import { mapArray, countTo } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => ({\n        channelCount: assertNumber(pdNode.args[0]),\n    }),\n    build: (nodeArgs) => ({\n        inlets: mapArray(countTo(nodeArgs.channelCount), (channel) => [`${channel}`, { type: 'signal', id: `${channel}` }]),\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n};\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ node, ins, outs }) => `\n    ${outs.$0} = ${Object.keys(node.inlets)\n    .map((inletId) => ins[inletId])\n    .join(' + ')}\n`;\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { loop, stateVariables };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=mixer~.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// TODO : left inlet ?\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => {\n        return {\n            inlets: {},\n            outlets: {\n                '0': { type: 'signal', id: '0' },\n            },\n        };\n    },\n};\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ outs }) => `\n    ${outs.$0} = Math.random() * 2 - 1\n`;\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { loop, stateVariables };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=noise~.js.map\n","// TODO : how to safely declare a global variable without clashing\nconst delayBuffers = ({ macros: { Var, Func } }) => `\n    const ${Var('DELAY_BUFFERS', 'Map<string, buf_SoundBuffer>')} = new Map()\n    const ${Var('DELAY_BUFFERS_SKEDULER', 'Skeduler')} = sked_create(true)\n    const ${Var('DELAY_BUFFERS_NULL', 'buf_SoundBuffer')} = buf_create(1)\n\n    function DELAY_BUFFERS_set ${Func([\n    Var('delayName', 'string'),\n    Var('buffer', 'buf_SoundBuffer'),\n], 'void')} {\n        DELAY_BUFFERS.set(delayName, buffer)\n        sked_emit(DELAY_BUFFERS_SKEDULER, delayName)\n    }\n\n    function DELAY_BUFFERS_get ${Func([\n    Var('delayName', 'string'),\n    Var('callback', '(event: string) => void'),\n], 'void')} {\n        sked_wait(DELAY_BUFFERS_SKEDULER, delayName, callback)\n    }\n\n    function DELAY_BUFFERS_delete ${Func([\n    Var('delayName', 'string'),\n], 'void')} {\n        DELAY_BUFFERS.delete(delayName)\n    }\n`;\n\nexport { delayBuffers };\n//# sourceMappingURL=delay-buffers.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalString, assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { delayBuffers } from './shared-code/delay-buffers.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    delayName: 1,\n    buffer: 1,\n    delaySamp: 1,\n    delayMsec: 1,\n    funcSetDelayName: 1,\n    funcSetDelayMsec: 1,\n};\n// TODO : Implement 4-point interpolation for delread4\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        delayName: assertOptionalString(args[0]) || '',\n        initDelayMsec: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\nconst makeNodeImplementation = () => {\n    // ------------------------------- declare ------------------------------ //\n    const declare = ({ state, globs, node: { args }, macros: { Var, Func } }) => `\n        let ${Var(state.delayName, 'string')} = \"\"\n        let ${Var(state.buffer, 'buf_SoundBuffer')} = DELAY_BUFFERS_NULL\n        let ${Var(state.delaySamp, 'Int')} = 0\n        let ${Var(state.delayMsec, 'Float')} = 0\n\n        const ${state.funcSetDelayMsec} = ${Func([\n        Var('delayMsec', 'Float')\n    ], 'void')} => {\n            ${state.delayMsec} = delayMsec\n            ${state.delaySamp} = toInt(Math.round(\n                Math.min(\n                    Math.max(computeUnitInSamples(${globs.sampleRate}, delayMsec, \"msec\"), 0), \n                    toFloat(${state.buffer}.length - 1)\n                )\n            ))\n        }\n\n        const ${state.funcSetDelayName} = ${Func([\n        Var('delayName', 'string')\n    ], 'void')} => {\n            if (${state.delayName}.length) {\n                ${state.buffer} = DELAY_BUFFERS_NULL\n            }\n            ${state.delayName} = delayName\n            if (${state.delayName}.length) {\n                DELAY_BUFFERS_get(${state.delayName}, () => { \n                    ${state.buffer} = DELAY_BUFFERS.get(${state.delayName})\n                    ${state.funcSetDelayMsec}(${state.delayMsec})\n                })\n            }\n        }\n\n        commons_waitEngineConfigure(() => {\n            if (\"${args.delayName}\".length) {\n                ${state.funcSetDelayName}(\"${args.delayName}\")\n            }\n            ${state.funcSetDelayMsec}(${args.initDelayMsec})\n        })\n    `;\n    // ------------------------------- loop ------------------------------ //\n    const loop = (context) => _hasSignalInput(context.node)\n        ? loopSignal(context)\n        : loopMessage(context);\n    const loopMessage = ({ outs, state }) => `\n        ${outs.$0} = buf_readSample(${state.buffer}, ${state.delaySamp})\n    `;\n    const loopSignal = ({ globs, outs, ins, state }) => `\n        ${outs.$0} = buf_readSample(${state.buffer}, toInt(Math.round(\n            Math.min(\n                Math.max(computeUnitInSamples(${globs.sampleRate}, ${ins.$0}, \"msec\"), 0), \n                toFloat(${state.buffer}.length - 1)\n            )\n        )))\n    `;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ state, globs }) => ({\n        '0_message': coldFloatInletWithSetter(globs.m, state.funcSetDelayMsec)\n    });\n    // ------------------------------------------------------------------- //\n    return {\n        loop,\n        stateVariables,\n        messages,\n        declare,\n        sharedCode: [computeUnitInSamples, delayBuffers]\n    };\n};\nconst _hasSignalInput = (node) => node.sources['0'] && node.sources['0'].length;\nconst builders = {\n    'delread~': builder,\n    'delread4~': builder,\n};\nconst nodeImplementations = {\n    'delread~': makeNodeImplementation(),\n    'delread4~': makeNodeImplementation(),\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=delread~-delread4~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalString, assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { delayBuffers } from './shared-code/delay-buffers.js';\nimport { computeUnitInSamples } from './shared-code/timing.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    delayName: 1,\n    buffer: 1,\n    funcSetDelayName: 1,\n};\n// TODO : default maxDurationMsec in Pd ? \n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        delayName: assertOptionalString(args[0]) || '',\n        maxDurationMsec: assertOptionalNumber(args[1]) || 100,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '0_message': { type: 'message', id: '0_message' },\n        },\n        outlets: {},\n        isPullingSignal: true,\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '0') {\n            return '0_message';\n        }\n        return undefined;\n    },\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ state, globs, node: { args }, macros: { Var, Func } }) => `\n    let ${Var(state.delayName, 'string')} = \"\"\n    let ${Var(state.buffer, 'buf_SoundBuffer')} = DELAY_BUFFERS_NULL\n\n    const ${state.funcSetDelayName} = ${Func([\n    Var('delayName', 'string')\n], 'void')} => {\n        if (${state.delayName}.length) {\n            DELAY_BUFFERS_delete(${state.delayName})\n        }\n        ${state.delayName} = delayName\n        if (${state.delayName}.length) {\n            DELAY_BUFFERS_set(${state.delayName}, ${state.buffer})\n        }\n    }\n\n    commons_waitEngineConfigure(() => {\n        ${state.buffer} = buf_create(\n            toInt(computeUnitInSamples(\n                ${globs.sampleRate}, \n                toFloat(${args.maxDurationMsec}), \n                \"msec\"\n            ))\n        )\n        if (\"${args.delayName}\".length) {\n            ${state.funcSetDelayName}(\"${args.delayName}\")\n        }\n    })\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ ins, state }) => `\n    buf_writeSample(${state.buffer}, ${ins.$0})\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ state, globs }) => ({\n    '0_message': `\n        if (\n            msg_isMatching(${globs.m}, [MSG_STRING_TOKEN]) \n            && msg_readStringToken(${globs.m}, 0) === 'clear'\n        ) {\n            buf_clear(${state.buffer})\n            return\n        }\n    `\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    stateVariables,\n    messages,\n    declare,\n    sharedCode: [computeUnitInSamples, delayBuffers]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=delwrite~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    lastInput: 1,\n    lastOutput: 1,\n    coeff: 1,\n    funcSetCoeff: 1,\n};\n// TODO : tests + cleaner implementations\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'signal', id: '0' },\n            '1': { type: 'signal', id: '1' },\n            '1_message': { type: 'message', id: '1_message' },\n        },\n        outlets: {\n            '0': { type: 'signal', id: '0' },\n        },\n    }),\n    rerouteMessageConnection: (inletId) => {\n        if (inletId === '1') {\n            return '1_message';\n        }\n        return undefined;\n    },\n};\nconst makeNodeImplementation = ({ generateOperation, computeCoeff = () => 'value', }) => {\n    // ------------------------------- declare ------------------------------ //\n    const declare = (context) => _hasSignalInput(context.node)\n        ? declareSignal(context)\n        : declareMessage(context);\n    const declareSignal = ({ state, macros: { Var }, }) => `\n        let ${Var(state.lastOutput, 'Float')} = 0\n        let ${Var(state.lastInput, 'Float')} = 0\n    `;\n    const declareMessage = ({ state, globs, node: { args }, macros: { Var, Func }, }) => `\n        let ${Var(state.lastOutput, 'Float')} = 0\n        let ${Var(state.lastInput, 'Float')} = 0\n        let ${Var(state.coeff, 'Float')} = 0\n\n        function ${state.funcSetCoeff} ${Func([\n        Var('value', 'Float')\n    ], 'void')} {\n            ${state.coeff} = ${computeCoeff(globs.sampleRate)}\n        }\n\n        commons_waitEngineConfigure(() => {\n            ${state.funcSetCoeff}(${args.initValue})\n        })\n    `;\n    // ------------------------------- loop ------------------------------ //\n    const loop = (context) => _hasSignalInput(context.node)\n        ? loopSignal(context)\n        : loopMessage(context);\n    const loopSignal = ({ ins, state, outs }) => `\n        ${state.lastOutput} = ${outs.$0} = ${generateOperation(ins.$0, ins.$1, state.lastOutput, state.lastInput)}\n        ${state.lastInput} = ${ins.$0}\n    `;\n    const loopMessage = ({ ins, state, outs }) => `\n        ${state.lastOutput} = ${outs.$0} = ${generateOperation(ins.$0, state.coeff, state.lastOutput, state.lastInput)}\n        ${state.lastInput} = ${ins.$0}\n    `;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ globs, state }) => ({\n        '1_message': coldFloatInletWithSetter(globs.m, state.funcSetCoeff),\n    });\n    return {\n        loop,\n        stateVariables,\n        messages,\n        declare,\n    };\n};\n// ------------------------------------------------------------------- //\nconst _hasSignalInput = (node) => node.sources['1'] && node.sources['1'].length;\nconst builders = {\n    'rpole~': builder,\n    'rzero_rev~': builder,\n    'hip~': builder,\n};\nconst nodeImplementations = {\n    'rpole~': makeNodeImplementation({\n        generateOperation: (input, coeff, lastOutput) => `${input} + ${coeff} * ${lastOutput}`,\n    }),\n    'rzero_rev~': makeNodeImplementation({\n        generateOperation: (input, coeff, _, lastInput) => `${lastInput} - ${coeff} * ${input}`\n    }),\n    'hip~': makeNodeImplementation({\n        generateOperation: (input, coeff, lastOutput, lastInput) => `${coeff} * (${lastOutput} + ${input} - ${lastInput})`,\n        computeCoeff: (sampleRate) => `Math.min(1, Math.max(0, 1 - Math.max(0, value) * 2 * Math.PI / ${sampleRate}))`\n    }),\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=filters-real~.js.map\n","import { renderCode, renderIf } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    outTemplates: 1,\n    outMessages: 1,\n    messageTransferFunctions: 1\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => {\n        const templates = [[]];\n        pdNode.args.forEach(arg => {\n            if (arg === ',') {\n                templates.push([]);\n            }\n            else {\n                templates[templates.length - 1].push(arg);\n            }\n        });\n        return ({\n            templates: templates.filter(template => template.length),\n        });\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = (context) => {\n    const { state, node, macros: { Var, Func }, } = context;\n    const transferCodes = node.args.templates.map((template, i) => buildMsgTransferCode(context, template, i));\n    return renderCode `\n        let ${Var(state.outTemplates, 'Array<MessageTemplate>')} = []\n        let ${Var(state.outMessages, 'Array<Message>')} = []\n        ${transferCodes.map(({ inMessageUsed, outMessageCode }) => renderIf(!inMessageUsed, outMessageCode))}\n        \n        const ${Var(state.messageTransferFunctions, 'Array<(m: Message) => Message>')} = [\n            ${transferCodes.map(({ inMessageUsed, outMessageCode }, i) => `\n                ${Func([\n        Var('inMessage', 'Message')\n    ], 'Message')} => {\n                    ${renderIf(inMessageUsed, outMessageCode)}\n                    return ${state.outMessages}[${i}]\n                }`).join(',')}\n        ]\n    `;\n};\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, state, globs, macros: { Var, Func }, }) => {\n    return {\n        '0': `\n        if (\n            msg_isStringToken(${globs.m}, 0) \n            && msg_readStringToken(${globs.m}, 0) === 'set'\n        ) {\n            ${state.outTemplates} = [[]]\n            for (let ${Var('i', 'Int')} = 1; i < msg_getLength(${globs.m}); i++) {\n                if (msg_isFloatToken(${globs.m}, i)) {\n                    ${state.outTemplates}[0].push(MSG_FLOAT_TOKEN)\n                } else {\n                    ${state.outTemplates}[0].push(MSG_STRING_TOKEN)\n                    ${state.outTemplates}[0].push(msg_readStringToken(${globs.m}, i).length)\n                }\n            }\n\n            const ${Var('message', 'Message')} = msg_create(${state.outTemplates}[0])\n            for (let ${Var('i', 'Int')} = 1; i < msg_getLength(${globs.m}); i++) {\n                if (msg_isFloatToken(${globs.m}, i)) {\n                    msg_writeFloatToken(\n                        message, i - 1, msg_readFloatToken(${globs.m}, i)\n                    )\n                } else {\n                    msg_writeStringToken(\n                        message, i - 1, msg_readStringToken(${globs.m}, i)\n                    )\n                }\n            }\n            ${state.outMessages}[0] = message\n            ${state.messageTransferFunctions}.splice(0, ${state.messageTransferFunctions}.length - 1)\n            ${state.messageTransferFunctions}[0] = ${Func([\n            Var('m', 'Message')\n        ], 'Message')} => { return ${state.outMessages}[0] }\n            return\n\n        } else {\n            for (let ${Var('i', 'Int')} = 0; i < ${state.messageTransferFunctions}.length; i++) {\n                ${snds.$0}(${state.messageTransferFunctions}[i](${globs.m}))\n            }\n            return    \n        }\n    `,\n    };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { declare, messages, stateVariables };\nconst buildMsgTransferCode = ({ state, macros: { Var } }, template, index) => {\n    const outTemplate = `${state.outTemplates}[${index}]`;\n    const outMessage = `${state.outMessages}[${index}]`;\n    const operations = buildMessageTransferOperations(template);\n    let outTemplateCode = '';\n    let outMessageCode = '';\n    let stringMemCount = 0;\n    operations.forEach((operation, outIndex) => {\n        if (operation.type === 'noop') {\n            const { inIndex } = operation;\n            outTemplateCode += `\n                ${outTemplate}.push(msg_getTokenType(inMessage, ${inIndex}))\n                if (msg_isStringToken(inMessage, ${inIndex})) {\n                    stringMem[${stringMemCount}] = msg_readStringToken(inMessage, ${inIndex})\n                    ${outTemplate}.push(stringMem[${stringMemCount}].length)\n                }\n            `;\n            outMessageCode += `\n                if (msg_isFloatToken(inMessage, ${inIndex})) {\n                    msg_writeFloatToken(${outMessage}, ${outIndex}, msg_readFloatToken(inMessage, ${inIndex}))\n                } else if (msg_isStringToken(inMessage, ${inIndex})) {\n                    msg_writeStringToken(${outMessage}, ${outIndex}, stringMem[${stringMemCount}])\n                }\n            `;\n            stringMemCount++;\n        }\n        else if (operation.type === 'string-template') {\n            outTemplateCode += `\n                stringToken = \"${operation.template}\"\n                ${operation.variables.map(({ placeholder, inIndex }) => `\n                    if (msg_isFloatToken(inMessage, ${inIndex})) {\n                        otherStringToken = msg_readFloatToken(inMessage, ${inIndex}).toString()\n                        if (otherStringToken.endsWith('.0')) {\n                            otherStringToken = otherStringToken.slice(0, -2)\n                        }\n                        stringToken = stringToken.replace(\"${placeholder}\", otherStringToken)\n                    } else if (msg_isStringToken(inMessage, ${inIndex})) {\n                        stringToken = stringToken.replace(\"${placeholder}\", msg_readStringToken(inMessage, ${inIndex}))\n                    }`)}\n                stringMem[${stringMemCount}] = stringToken\n                ${outTemplate}.push(MSG_STRING_TOKEN)\n                ${outTemplate}.push(stringMem[${stringMemCount}].length)\n            `;\n            outMessageCode += `\n                msg_writeStringToken(${outMessage}, ${outIndex}, stringMem[${stringMemCount}])\n            `;\n            stringMemCount++;\n        }\n        else if (operation.type === 'string-constant') {\n            outTemplateCode += `\n                ${outTemplate}.push(MSG_STRING_TOKEN)\n                ${outTemplate}.push(${operation.value.length})\n            `;\n            outMessageCode += `\n                msg_writeStringToken(${outMessage}, ${outIndex}, \"${operation.value}\")\n            `;\n        }\n        else if (operation.type === 'float-constant') {\n            outTemplateCode += `\n                ${outTemplate}.push(MSG_FLOAT_TOKEN)\n            `;\n            outMessageCode += `\n                msg_writeFloatToken(${outMessage}, ${outIndex}, ${operation.value})\n            `;\n        }\n    });\n    const hasStringTemplate = operations.some((op) => op.type === 'string-template');\n    const inMessageUsed = operations.some((op) => op.type === 'noop' || op.type === 'string-template');\n    return {\n        inMessageUsed,\n        outMessageCode: `\n            ${renderIf(hasStringTemplate, `let ${Var('stringToken', 'string')}`)}\n            ${renderIf(hasStringTemplate, `let ${Var('otherStringToken', 'string')}`)}\n            ${renderIf(inMessageUsed, `let ${Var('stringMem', 'Array<string>')} = []`)}\n            ${outTemplate} = []\n            ${outTemplateCode}           \n            ${outMessage} = msg_create(${outTemplate})\n            ${outMessageCode}\n        `,\n    };\n};\nconst buildMessageTransferOperations = (template) => {\n    // Creates an array of transfer functions `inVal -> outVal`.\n    return template.map((templateElem) => {\n        if (typeof templateElem === 'string') {\n            const matchDollar = DOLLAR_VAR_RE.exec(templateElem);\n            // If the transfer is a dollar var :\n            //      ['bla', 789] - ['$1'] -> ['bla']\n            //      ['bla', 789] - ['$2'] -> [789]\n            if (matchDollar && matchDollar[0] === templateElem) {\n                // -1, because $1 corresponds to value 0.\n                const inIndex = parseInt(matchDollar[1], 10) - 1;\n                return { type: 'noop', inIndex };\n            }\n            else if (matchDollar) {\n                const variables = [];\n                let matched;\n                while ((matched = DOLLAR_VAR_RE_GLOB.exec(templateElem))) {\n                    // position -1, because $1 corresponds to value 0.\n                    variables.push({\n                        placeholder: matched[0],\n                        inIndex: parseInt(matched[1], 10) - 1,\n                    });\n                }\n                return {\n                    type: 'string-template',\n                    template: templateElem,\n                    variables,\n                };\n                // Else the input doesn't matter\n            }\n            else {\n                return { type: 'string-constant', value: templateElem };\n            }\n        }\n        else {\n            return { type: 'float-constant', value: templateElem };\n        }\n    });\n};\nconst DOLLAR_VAR_RE = /\\$(\\d+)/;\nconst DOLLAR_VAR_RE_GLOB = /\\$(\\d+)/g;\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=msg.js.map\n","import { parseSoundFileOpenOpts } from './shared-code/fs.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    operations: 1,\n    buildMessage1: 1,\n};\n// TODO: Implement -normalize for write operation\n// TODO: Implement output headersize\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: () => ({}),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------ declare ------------------------------ //\nconst declare = ({ state, macros: { Func, Var } }) => `\n    class SfOperation {\n        ${Var('url', 'string')}\n        ${Var('arrayNames', 'Array<string>')}\n        ${Var('resize', 'boolean')}\n        ${Var('maxSize', 'Float')}\n        ${Var('framesToWrite', 'Float')}\n        ${Var('skip', 'Float')}\n        ${Var('soundInfo', 'fs_SoundInfo')}\n    }\n    const ${Var(state.operations, 'Map<fs_OperationId, SfOperation>')} = new Map()\n\n    const ${state.buildMessage1} = ${Func([\n    Var('soundInfo', 'fs_SoundInfo')\n], 'Message')} => {\n        const ${Var('m', 'Message')} = msg_create([\n            MSG_FLOAT_TOKEN,\n            MSG_FLOAT_TOKEN,\n            MSG_FLOAT_TOKEN,\n            MSG_FLOAT_TOKEN,\n            MSG_STRING_TOKEN,\n            soundInfo.endianness.length,\n        ])\n        msg_writeFloatToken(m, 0, soundInfo.sampleRate)\n        msg_writeFloatToken(m, 1, -1) // TODO IMPLEMENT headersize\n        msg_writeFloatToken(m, 2, toFloat(soundInfo.channelCount))\n        msg_writeFloatToken(m, 3, Math.round(soundInfo.bitDepth / 8))\n        msg_writeStringToken(m, 4, soundInfo.endianness)\n        return m\n    }\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ node, state, globs, snds, macros: { Func, Var } }) => ({\n    '0': `\n    if (\n        msg_getLength(${globs.m}) >= 3 \n        && msg_isStringToken(${globs.m}, 0)\n        && (\n            msg_readStringToken(${globs.m}, 0) === 'read'\n            || msg_readStringToken(${globs.m}, 0) === 'write'\n        )\n    ) {\n        const ${Var('operationType', 'string')} = msg_readStringToken(${globs.m}, 0)\n        const ${Var('soundInfo', 'fs_SoundInfo')} = {\n            channelCount: 0,\n            sampleRate: ${globs.sampleRate},\n            bitDepth: 32,\n            encodingFormat: '',\n            endianness: '',\n            extraOptions: '',\n        }\n        const ${Var('operation', 'SfOperation')} = {\n            arrayNames: [],\n            resize: false,\n            maxSize: -1,\n            skip: 0,\n            framesToWrite: 0,\n            url: '',\n            soundInfo,\n        }\n        let ${Var('unhandledOptions', 'Set<Int>')} = parseSoundFileOpenOpts(\n            ${globs.m},\n            soundInfo,\n        )\n        \n        // Remove the operation type\n        unhandledOptions.delete(0)\n        \n        let ${Var('i', 'Int')} = 1\n        let ${Var('str', 'string')} = ''\n        while (i < msg_getLength(${globs.m})) {\n            if (!unhandledOptions.has(i)) {\n\n            } else if (msg_isStringToken(${globs.m}, i)) {\n                str = msg_readStringToken(${globs.m}, i)\n                if (str === '-resize') {\n                    unhandledOptions.delete(i)\n                    operation.resize = true\n\n                } else if (str === '-maxsize' || str === '-nframes') {\n                    unhandledOptions.delete(i)\n                    if (\n                        i + 1 >= msg_getLength(${globs.m}) \n                        || !msg_isFloatToken(${globs.m}, i + 1)\n                    ) {\n                        console.log(\"invalid value for -maxsize\")\n                    }\n                    operation.maxSize = msg_readFloatToken(${globs.m}, i + 1)\n                    unhandledOptions.delete(i + 1)\n                    i++\n\n                } else if (str === '-skip') {\n                    unhandledOptions.delete(i)\n                    if (\n                        i + 1 >= msg_getLength(${globs.m}) \n                        || !msg_isFloatToken(${globs.m}, i + 1)\n                    ) {\n                        console.log(\"invalid value for -skip\")\n                    }\n                    operation.skip = msg_readFloatToken(${globs.m}, i + 1)\n                    unhandledOptions.delete(i + 1)\n                    i++\n\n                } else if (str === '-normalize') {\n                    unhandledOptions.delete(i)\n                    console.log('-normalize not implemented')\n                }\n            }\n            i++\n        }\n\n        i = 1\n        let ${Var('urlFound', 'boolean')} = false\n        while (i < msg_getLength(${globs.m})) {\n            if (!unhandledOptions.has(i)) {\n\n            } else if (msg_isStringToken(${globs.m}, i)) {\n                str = msg_readStringToken(${globs.m}, i)\n                if (!str.startsWith('-') && urlFound === false) {\n                    operation.url = str\n                    urlFound = true\n                } else {\n                    operation.arrayNames.push(str)\n                }\n                unhandledOptions.delete(i)\n            }\n            i++\n        }\n\n        for (i = 0; i < operation.arrayNames.length; i++) {\n            if (!commons_hasArray(operation.arrayNames[i])) {\n                console.log('[soundfiler] unknown array ' + operation.arrayNames[i])\n                return\n            }\n        }\n\n        if (unhandledOptions.size) {\n            console.log(\"soundfiler received invalid options\")\n        }\n\n        soundInfo.channelCount = operation.arrayNames.length\n\n        if (operationType === 'read') {\n            const callback = ${Func([\n        Var('id', 'fs_OperationId'),\n        Var('status', 'fs_OperationStatus'),\n        Var('sound', 'FloatArray[]'),\n    ], 'void')} => {\n                const ${Var('operation', 'SfOperation')} = ${state.operations}.get(id)\n                ${state.operations}.delete(id)\n                let ${Var('i', 'Int')} = 0\n                let ${Var('maxFramesRead', 'Float')} = 0\n                let ${Var('framesToRead', 'Float')} = 0\n                let ${Var('array', 'FloatArray')} = createFloatArray(0)\n                for (i = 0; i < sound.length; i++) {\n                    if (operation.resize) {\n                        if (operation.maxSize > 0) {\n                            framesToRead = Math.min(\n                                operation.maxSize, \n                                toFloat(sound[i].length) - operation.skip\n                            )\n\n                        } else {\n                            framesToRead = toFloat(sound[i].length) - operation.skip\n                        }\n\n                        commons_setArray(\n                            operation.arrayNames[i], \n                            sound[i].subarray(\n                                toInt(operation.skip), \n                                toInt(operation.skip + framesToRead)\n                            )\n                        )\n                        \n                    } else {\n                        array = commons_getArray(operation.arrayNames[i])\n                        framesToRead = Math.min(\n                            toFloat(array.length),\n                            toFloat(sound[i].length) - operation.skip\n                        )\n                        array.set(sound[i].subarray(0, array.length))\n                    }\n                    maxFramesRead = Math.max(\n                        maxFramesRead,\n                        framesToRead\n                    )\n                }\n\n                ${snds.$1}(${state.buildMessage1}(operation.soundInfo))\n                ${snds.$0}(msg_floats([maxFramesRead]))\n            }\n\n            const ${Var('id', 'fs_OperationId')} = fs_readSoundFile(\n                operation.url, \n                soundInfo,\n                callback\n            )\n\n            ${state.operations}.set(id, operation)\n\n        } else if (operationType === 'write') {\n            let ${Var('i', 'Int')} = 0\n            let ${Var('framesToWrite', 'Float')} = 0\n            let ${Var('array', 'FloatArray')} = createFloatArray(0)\n            const ${Var('sound', 'FloatArray[]')} = []\n            \n            for (i = 0; i < operation.arrayNames.length; i++) {\n                framesToWrite = Math.max(\n                    framesToWrite,\n                    toFloat(commons_getArray(operation.arrayNames[i]).length) - operation.skip,\n                )\n            }\n\n            if (operation.maxSize >= 0) {\n                framesToWrite = Math.min(\n                    operation.maxSize, \n                    framesToWrite\n                )\n            }\n            operation.framesToWrite = framesToWrite\n\n            if (framesToWrite < 1) {\n                console.log('[soundfiler] no frames to write')\n                return\n            }\n\n            for (i = 0; i < operation.arrayNames.length; i++) {\n                array = commons_getArray(operation.arrayNames[i])\n                if (framesToWrite > toFloat(array.length) - operation.skip) {\n                    sound.push(createFloatArray(toInt(framesToWrite)))\n                    sound[i].set(array.subarray(\n                        toInt(operation.skip), \n                        toInt(operation.skip + framesToWrite)\n                    ))\n                } else {\n                    sound.push(array.subarray(\n                        toInt(operation.skip), \n                        toInt(operation.skip + framesToWrite)\n                    ))\n                }\n            }\n\n            const callback = ${Func([\n        Var('id', 'fs_OperationId'),\n        Var('status', 'fs_OperationStatus'),\n    ], 'void')} => {\n                const ${Var('operation', 'SfOperation')} = ${state.operations}.get(id)\n                ${state.operations}.delete(id)\n                ${snds.$1}(${state.buildMessage1}(operation.soundInfo))\n                ${snds.$0}(msg_floats([operation.framesToWrite]))\n            }\n\n            const ${Var('id', 'fs_OperationId')} = fs_writeSoundFile(\n                sound, \n                operation.url, \n                soundInfo, \n                callback\n            )\n\n            ${state.operations}.set(id, operation)\n        }\n\n        return\n    }\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    declare,\n    messages,\n    stateVariables,\n    sharedCode: [parseSoundFileOpenOpts],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=soundfiler.js.map\n","/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: (pdNode) => {\n        let prefix = 'print:';\n        if (pdNode.args.length === 1 && pdNode.args[0] === '-n') {\n            prefix = '';\n        }\n        else if (pdNode.args.length >= 1) {\n            prefix = pdNode.args.join(' ') + ':';\n        }\n        return { prefix };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {},\n    }),\n};\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ globs, node: { args } }) => ({\n    '0': `\n        console.log(\"${args.prefix} \" + msg_display(${globs.m}))\n        return\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { messages, stateVariables };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=print.js.map\n","import '../../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { ValidationError } from '../../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\n\nconst TYPE_ARGUMENTS = [\n    'float',\n    'bang',\n    'symbol',\n    'list',\n    'anything',\n];\nconst resolveTypeArgumentAlias = (value) => {\n    switch (value) {\n        case 'f':\n            return 'float';\n        case 'b':\n            return 'bang';\n        case 's':\n            return 'symbol';\n        case 'l':\n            return 'list';\n        case 'a':\n            return 'anything';\n        case 'p':\n            return 'pointer';\n        default:\n            return value;\n    }\n};\nconst assertTypeArgument = (value) => {\n    if (value === 'pointer') {\n        throw new ValidationError(`\"pointer\" not supported (yet)`);\n    }\n    else if (!TYPE_ARGUMENTS.includes(value)) {\n        throw new ValidationError(`invalid type ${value}`);\n    }\n    return value;\n};\nconst renderMessageTransfer = (typeArgument, msgVariableName, index) => {\n    switch (typeArgument) {\n        case 'float':\n            return `msg_floats([messageTokenToFloat(${msgVariableName}, ${index})])`;\n        case 'bang':\n            return `msg_bang()`;\n        case 'symbol':\n            return `msg_strings([messageTokenToString(${msgVariableName}, ${index})])`;\n        case 'list':\n        case 'anything':\n            return `${msgVariableName}`;\n        default:\n            throw new Error(`type argument ${typeArgument} not supported (yet)`);\n    }\n};\nconst messageTokenToFloat = ({ macros: { Func, Var } }) => `\n    function messageTokenToFloat ${Func([\n    Var('m', 'Message'),\n    Var('i', 'Int')\n], 'Float')} {\n        if (msg_isFloatToken(m, i)) {\n            return msg_readFloatToken(m, i)\n        } else {\n            return 0\n        }\n    }\n`;\nconst messageTokenToString = ({ macros: { Func, Var } }) => `\n    function messageTokenToString ${Func([\n    Var('m', 'Message'),\n    Var('i', 'Int')\n], 'string')} {\n        if (msg_isStringToken(m, i)) {\n            const ${Var('str', 'string')} = msg_readStringToken(m, i)\n            if (str === 'bang') {\n                return 'symbol'\n            } else {\n                return str\n            }\n        } else {\n            return 'float'\n        }\n    }\n`;\n\nexport { assertTypeArgument, messageTokenToFloat, messageTokenToString, renderMessageTransfer, resolveTypeArgumentAlias };\n//# sourceMappingURL=type-arguments.js.map\n","import { mapArray, renderCode } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertString } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, messageTokenToFloat, messageTokenToString, renderMessageTransfer } from './shared-code/type-arguments.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {};\n// TODO : \n// - pointer\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        typeArguments: args.length === 0 ? ['bang', 'bang'] : args\n            .map(assertString)\n            .map(resolveTypeArgumentAlias)\n            .map(assertTypeArgument),\n    }),\n    build: ({ typeArguments }) => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: mapArray(typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n    }),\n};\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, node: { args: { typeArguments } } }) => ({\n    '0': renderCode `\n        ${typeArguments.reverse().map((typeArg, i) => `${snds[typeArguments.length - i - 1]}(${renderMessageTransfer(typeArg, globs.m, 0)})`)}\n        return\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    messages,\n    stateVariables,\n    sharedCode: [\n        messageTokenToFloat,\n        messageTokenToString,\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=trigger.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    currentValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        initValue: assertOptionalNumber(args[0]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node, state, macros: { Var }, }) => `let ${Var(state.currentValue, 'Float')} = ${node.args.initValue}`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, macros: { Var }, }) => ({\n    '0': `\n    if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n        const ${Var('newValue', 'Float')} = msg_readFloatToken(${globs.m}, 0)\n        if (newValue !== ${state.currentValue}) {\n            ${state.currentValue} = newValue\n            ${snds[0]}(msg_floats([${state.currentValue}]))\n        }\n        return\n\n    } else if (msg_isBang(${globs.m})) {\n        ${snds[0]}(msg_floats([${state.currentValue}]))\n        return \n\n    } else if (\n        msg_isMatching(${globs.m}, [MSG_STRING_TOKEN, MSG_FLOAT_TOKEN])\n        && msg_readStringToken(${globs.m}, 0) === 'set'\n    ) {\n        ${state.currentValue} = msg_readFloatToken(${globs.m}, 1)\n        return\n    }\n    `,\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    messages,\n    stateVariables,\n    declare,\n    sharedCode: [bangUtils],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=change.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInlet } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    threshold: 1\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        threshold: assertOptionalNumber(args[0]) || 0\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node, state, macros: { Var }, }) => `\n    let ${Var(state.threshold, 'Float')} = ${node.args.threshold}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, macros: { Var } }) => ({\n    '0': `\n    if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n        const ${Var('value', 'Float')} = msg_readFloatToken(${globs.m}, 0)\n        if (value >= ${state.threshold}) {\n            ${snds[1]}(msg_floats([value]))\n        } else {\n            ${snds[0]}(msg_floats([value]))\n        }\n        return\n    }\n    `,\n    '1': coldFloatInlet(globs.m, state.threshold),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { messages, stateVariables, declare };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=moses.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { coldFloatInlet } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    minValue: 1,\n    maxValue: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        minValue: assertOptionalNumber(args[0]) || 0,\n        maxValue: assertOptionalNumber(args[1]) || 0,\n    }),\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n            '2': { type: 'message', id: '2' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node, state, macros: { Var }, }) => `\n    let ${Var(state.minValue, 'Float')} = ${node.args.minValue}\n    let ${Var(state.maxValue, 'Float')} = ${node.args.maxValue}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state }) => ({\n    '0': `\n    if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n        ${snds[0]}(msg_floats([\n            Math.max(Math.min(${state.maxValue}, msg_readFloatToken(${globs.m}, 0)), ${state.minValue})\n        ]))\n        return\n    }\n    `,\n    '1': coldFloatInlet(globs.m, state.minValue),\n    '2': coldFloatInlet(globs.m, state.maxValue),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = { messages, stateVariables, declare };\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=clip.js.map\n","import { mapArray, renderCode, countTo } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, messageTokenToFloat, messageTokenToString, renderMessageTransfer } from './shared-code/type-arguments.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    delay: 1,\n    scheduledMessages: 1,\n    scheduledFrames: 1,\n    lastReceived: 1,\n    funcScheduleMessage: 1,\n    funcSetDelay: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => {\n        let delay = 0;\n        if (args.length >= 1) {\n            delay = assertNumber(args[args.length - 1]);\n            args = args.slice(0, -1);\n        }\n        args = args.length ? args : [0];\n        return {\n            typeArguments: args.map(resolveTypeArgumentAlias)\n                .map(value => [\n                typeof value === 'number' ? 'float' : assertTypeArgument(value),\n                typeof value === 'number' ? value : value === 'float' ? 0 : 'symbol'\n            ]),\n            delay\n        };\n    },\n    build: (args) => ({\n        inlets: {\n            ...mapArray(args.typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n            [`${args.typeArguments.length}`]: {\n                type: 'message',\n                id: `${args.typeArguments.length}`\n            },\n        },\n        outlets: mapArray(args.typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n    }),\n};\n// ------------------------------- declare ------------------------------ //\n// !!! Array.splice insertion is not supported by assemblyscript, so : \n// 1. We grow arrays to their post-insertion size by using `push`\n// 2. We use `copyWithin` to move old elements to their final position.\n// 3. We insert the new elements at their place.\nconst declare = ({ state, globs, node: { args }, macros: { Var, Func }, }) => renderCode `\n    let ${state.delay} = 0\n    let ${Var(state.scheduledMessages, 'Array<Message>')} = []\n    let ${Var(state.scheduledFrames, 'Array<Int>')} = []\n    const ${Var(state.lastReceived, 'Array<Message>')} = [${args.typeArguments\n    .map(([_, value]) => typeof value === 'number' ?\n    `msg_floats([${value}])`\n    : `msg_strings([\"${value}\"])`).join(',')}]\n\n    const ${state.funcScheduleMessage} = ${Func([\n    Var('inMessage', 'Message')\n], 'void')} => {\n        let ${Var('insertIndex', 'Int')} = 0\n        let ${Var('frame', 'Int')} = ${globs.frame} + ${state.delay}\n        let ${Var('outMessage', 'Message')} = msg_create([])\n\n        while (\n            insertIndex < ${state.scheduledFrames}.length \n            && ${state.scheduledFrames}[insertIndex] <= frame\n        ) {insertIndex++}\n\n        \n        ${countTo(args.typeArguments.length).map(_ => `${state.scheduledMessages}.push(msg_create([]))`)}\n        ${state.scheduledMessages}.copyWithin((insertIndex + 1) * ${args.typeArguments.length}, insertIndex * ${args.typeArguments.length})\n        ${state.scheduledFrames}.push(0)\n        ${state.scheduledFrames}.copyWithin(insertIndex + 1, insertIndex)\n\n        ${args.typeArguments.reverse()\n    .map(([typeArg], i) => [args.typeArguments.length - i - 1, typeArg])\n    .map(([iReverse, typeArg], i) => `\n                if (msg_getLength(inMessage) > ${iReverse}) {\n                    outMessage = ${renderMessageTransfer(typeArg, 'inMessage', iReverse)}\n                    ${state.lastReceived}[${iReverse}] = outMessage\n                } else {\n                    outMessage = ${state.lastReceived}[${iReverse}]\n                }\n                ${state.scheduledMessages}[insertIndex * ${args.typeArguments.length} + ${i}] = outMessage\n            `)}\n        ${state.scheduledFrames}[insertIndex] = frame\n    }\n\n    const ${state.funcSetDelay} = ${Func([\n    Var('delay', 'Float')\n], 'void')} => {\n        ${state.delay} = toInt(Math.round(delay / 1000 * ${globs.sampleRate}))\n    }\n\n    commons_waitEngineConfigure(() => {\n        ${state.funcSetDelay}(${args.delay})\n    })\n`;\n// ------------------------------- loop ------------------------------ //\nconst loop = ({ node, state, globs, snds, }) => `\n    while (${state.scheduledFrames}.length && ${state.scheduledFrames}[0] <= ${globs.frame}) {\n        ${state.scheduledFrames}.shift()\n        ${countTo(node.args.typeArguments.length).reverse()\n    .map((i) => `${snds[i]}(${state.scheduledMessages}.shift())`)}\n    }\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ node, snds, globs, state, macros: { Var } }) => ({\n    '0': renderCode `\n    if (msg_isBang(${globs.m})) {\n        ${state.funcScheduleMessage}(msg_create([]))\n        return\n\n    } else if (msg_isMatching(${globs.m}, [MSG_STRING_TOKEN])) {\n        const ${Var('action', 'string')} = msg_readStringToken(${globs.m}, 0)\n\n        if (action === 'clear') {\n            ${state.scheduledMessages} = []\n            ${state.scheduledFrames} = []\n            return \n\n        } else if (action === 'flush') {\n            ${state.scheduledFrames} = []\n            while (${state.scheduledMessages}.length) {\n                ${countTo(node.args.typeArguments.length).reverse()\n        .map((i) => `${snds[i]}(${state.scheduledMessages}.shift())`)}\n            }\n            return\n        }\n\n    } else {\n        ${state.funcScheduleMessage}(${globs.m})\n        return\n    }\n    `,\n    ...mapArray(node.args.typeArguments.slice(1), ([typeArg], i) => [\n        `${i + 1}`,\n        `${state.lastReceived}[${i + 1}] = ${renderMessageTransfer(typeArg, globs.m, 0)}\n            return`\n    ]),\n    [node.args.typeArguments.length]: coldFloatInletWithSetter(globs.m, state.funcSetDelay)\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    loop,\n    messages,\n    stateVariables,\n    declare,\n    sharedCode: [\n        messageTokenToFloat,\n        messageTokenToString,\n        bangUtils,\n    ],\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=pipe.js.map\n","import { mapArray, renderCode, renderSwitch } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { resolveTypeArgumentAlias, assertTypeArgument, messageTokenToString, messageTokenToFloat } from './shared-code/type-arguments.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    floatValues: 1,\n    stringValues: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst builder = {\n    translateArgs: ({ args }) => ({\n        typeArguments: (args.length ? args : ['float']).map(resolveTypeArgumentAlias)\n            // Not sure why but 'bang' is supported as a creation argument, \n            // but turned into a float.\n            .map(typeArg => {\n            if (typeArg === 'bang') {\n                typeArg = 'float';\n            }\n            if (typeof typeArg === 'number') {\n                return typeArg;\n            }\n            else if (!['float', 'symbol'].includes(typeArg)) {\n                throw new Error(`${typeArg} not supported (yet)`);\n            }\n            return typeArg;\n        })\n            .map(value => [\n            typeof value === 'number' ? 'float' : assertTypeArgument(value),\n            typeof value === 'number' ? value : value === 'float' ? 0 : 'symbol'\n        ]),\n    }),\n    build: (args) => ({\n        inlets: mapArray(args.typeArguments, (_, i) => [`${i}`, { type: 'message', id: `${i}` }]),\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node: { args }, state, macros: { Var }, }) => renderCode `\n    const ${Var(state.floatValues, 'Array<Float>')} = [${args.typeArguments.map(([typeArg, defaultValue]) => `${typeArg === 'float' ? defaultValue : 0}`).join(',')}]\n    const ${Var(state.stringValues, 'Array<string>')} = [${args.typeArguments.map(([typeArg, defaultValue]) => `${typeArg === 'symbol' ? `\"${defaultValue}\"` : '\"\"'}`).join(',')}]\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, node, macros: { Var } }) => ({\n    '0': renderCode `\n    if (!msg_isBang(${globs.m})) {\n        for (let ${Var('i', 'Int')} = 0; i < msg_getLength(${globs.m}); i++) {\n            ${state.stringValues}[i] = messageTokenToString(${globs.m}, i)\n            ${state.floatValues}[i] = messageTokenToFloat(${globs.m}, i)\n        }\n    }\n\n    const ${Var('template', 'MessageTemplate')} = [${node.args.typeArguments.map(([typeArg], i) => typeArg === 'symbol' ?\n        `MSG_STRING_TOKEN,${state.stringValues}[${i}].length`\n        : `MSG_FLOAT_TOKEN`).join(',')}]\n\n    const ${Var('messageOut', 'Message')} = msg_create(template)\n\n    ${node.args.typeArguments.map(([typeArg], i) => typeArg === 'symbol' ?\n        `msg_writeStringToken(messageOut, ${i}, ${state.stringValues}[${i}])`\n        : `msg_writeFloatToken(messageOut, ${i}, ${state.floatValues}[${i}])`)}\n\n    ${snds[0]}(messageOut)\n    return\n    `,\n    ...mapArray(node.args.typeArguments.slice(1), ([typeArg], i) => [\n        `${i + 1}`,\n        renderSwitch([\n            typeArg === 'symbol',\n            `${state.stringValues}[${i + 1}] = messageTokenToString(${globs.m}, 0)`\n        ], [\n            typeArg === 'float',\n            `${state.floatValues}[${i + 1}] = messageTokenToFloat(${globs.m}, 0)`\n        ]) + ';return'\n    ]),\n});\n// ------------------------------------------------------------------- //\nconst nodeImplementation = {\n    messages,\n    stateVariables,\n    declare,\n    sharedCode: [messageTokenToString, messageTokenToFloat, bangUtils]\n};\n\nexport { builder, nodeImplementation };\n//# sourceMappingURL=pack.js.map\n","import { mapArray, renderCode, renderIf, renderSwitch } from '../../WebPd_compiler-js/dist/WebPd_compiler-js/src/functional-helpers.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { roundFloatAsPdInt } from './shared-code/numbers.js';\nimport { messageTokenToString, messageTokenToFloat } from './shared-code/type-arguments.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    floatInputs: 1,\n    stringInputs: 1,\n    outputs: 1,\n};\n// TODO : Implement if (`if(<test>, <then>, <else>)`)\n// ------------------------------- node builder ------------------------------ //\nconst builderExpr = {\n    translateArgs: ({ args }) => ({\n        tokenizedExpressions: preprocessExpression(args).map(tokenizeExpression),\n    }),\n    build: (args) => ({\n        inlets: mapArray(validateAndListInputsExpr(args.tokenizedExpressions), ({ id }) => [`${id}`, { type: 'message', id: `${id}` }]),\n        outlets: mapArray(args.tokenizedExpressions, (_, i) => [\n            `${i}`,\n            { type: 'message', id: `${i}` },\n        ]),\n    }),\n};\nconst builderExprTilde = {\n    translateArgs: ({ args }) => ({\n        tokenizedExpressions: preprocessExpression(args).map(tokenizeExpression),\n    }),\n    build: (args) => ({\n        inlets: mapArray(validateAndListInputsExprTilde(args.tokenizedExpressions), ({ id, type }) => [\n            `${id}`,\n            { type: type === 'signal' ? 'signal' : 'message', id: `${id}` },\n        ]),\n        outlets: mapArray(args.tokenizedExpressions, (_, i) => [\n            `${i}`,\n            { type: 'signal', id: `${i}` },\n        ]),\n    }),\n};\n// ------------------------------- declare ------------------------------ //\nconst declare = ({ node: { args, type }, state, macros: { Var }, }) => {\n    const inputs = type === 'expr' ?\n        validateAndListInputsExpr(args.tokenizedExpressions)\n        : validateAndListInputsExprTilde(args.tokenizedExpressions)\n            .filter(({ type }) => type !== 'signal');\n    return renderCode `\n        const ${Var(state.floatInputs, 'Map<Int, Float>')} = new Map()\n        const ${Var(state.stringInputs, 'Map<Int, string>')} = new Map()\n        const ${Var(state.outputs, 'Array<Float>')} = new Array(${args.tokenizedExpressions.length})\n        ${inputs.filter(input => input.type === 'float' || input.type === 'int')\n        .map(input => `${state.floatInputs}.set(${input.id}, 0)`)}\n        ${inputs.filter(input => input.type === 'string')\n        .map(input => `${state.stringInputs}.set(${input.id}, '')`)}\n    `;\n};\n// ------------------------------- loop ------------------------------ //\nconst loopExprTilde = ({ node: { args }, state, outs, ins, }) => `\n    ${args.tokenizedExpressions.map((tokens, i) => `${outs[i]} = ${renderTokenizedExpression(state, ins, tokens)}`)}\n`;\n// ------------------------------- messages ------------------------------ //\nconst messages = ({ snds, globs, state, node: { args, type }, macros: { Var }, }) => {\n    const inputs = type === 'expr' ?\n        validateAndListInputsExpr(args.tokenizedExpressions)\n        : validateAndListInputsExprTilde(args.tokenizedExpressions)\n            .filter(({ type }) => type !== 'signal');\n    const hasInput0 = inputs.length && inputs[0].id === 0;\n    return {\n        '0': renderCode `\n\n        if (!msg_isBang(${globs.m})) {\n            for (let ${Var('i', 'Int')} = 0; i < msg_getLength(${globs.m}); i++) {\n                ${state.stringInputs}.set(i, messageTokenToString(${globs.m}, i))\n                ${state.floatInputs}.set(i, messageTokenToFloat(${globs.m}, i))\n            }\n        }\n\n        ${renderIf(type === 'expr', () => `\n                ${args.tokenizedExpressions.map((tokens, i) => `${state.outputs}[${i}] = ${renderTokenizedExpression(state, null, tokens)}`)}\n        \n                ${args.tokenizedExpressions.map((_, i) => `${snds[`${i}`]}(msg_floats([${state.outputs}[${i}]]))`)}\n            `)}\n        \n        return\n        `,\n        ...mapArray(inputs.slice(hasInput0 ? 1 : 0), ({ id, type }) => [\n            `${id}`,\n            renderSwitch([\n                type === 'float' || type === 'int',\n                `${state.floatInputs}.set(${id}, messageTokenToFloat(${globs.m}, 0));return`,\n            ], [\n                type === 'string',\n                `${state.stringInputs}.set(${id}, messageTokenToString(${globs.m}, 0));return`,\n            ])\n        ])\n    };\n};\n// ------------------------------------------------------------------- //\nconst TOKENIZE_REGEXP = /(?<f>\\$f(?<id_f>[0-9]+))|(?<v>\\$v(?<id_v>[0-9]+))|(?<i>\\$i(?<id_i>[0-9]+))|(?<s>\\$s(?<id_s>[0-9]+)\\s*\\[(?<sIndex>[^\\[\\]]*)\\])/;\nconst tokenizeExpression = (expression) => {\n    let match;\n    let tokens = [];\n    while (match = TOKENIZE_REGEXP.exec(expression)) {\n        if (match.index) {\n            tokens.push({\n                type: 'raw',\n                content: expression.slice(0, match.index)\n            });\n        }\n        if (match.groups['f']) {\n            tokens.push({\n                type: 'float',\n                id: parseInt(match.groups['id_f']) - 1,\n            });\n        }\n        else if (match.groups['v']) {\n            tokens.push({\n                type: 'signal',\n                id: parseInt(match.groups['id_v']) - 1,\n            });\n        }\n        else if (match.groups['i']) {\n            tokens.push({\n                type: 'int',\n                id: parseInt(match.groups['id_i']) - 1,\n            });\n            // Symbols in an expr are used normally only to index an array.\n            // Since we need to cast to an int to index an array, we need \n            // to wrap the indexing expression with a cast to int :\n            // $s1[$i1 + 2] -> $s1[toInt($i1 + 2)]\n        }\n        else if (match.groups['s']) {\n            tokens = [\n                ...tokens,\n                {\n                    type: 'string',\n                    id: parseInt(match.groups['id_s']) - 1,\n                },\n                {\n                    type: 'indexing-start'\n                },\n                ...tokenizeExpression(match.groups['sIndex']),\n                {\n                    type: 'indexing-end'\n                },\n            ];\n        }\n        expression = expression.slice(match.index + match[0].length);\n    }\n    if (expression.length) {\n        tokens.push({\n            type: 'raw',\n            content: expression\n        });\n    }\n    return tokens;\n};\nconst renderTokenizedExpression = (state, ins, tokens) => tokens.map(token => {\n    switch (token.type) {\n        case 'float':\n            return `${state.floatInputs}.get(${token.id})`;\n        case 'signal':\n            if (ins === null) {\n                throw new Error(`invalid token signal received`);\n            }\n            return ins[token.id];\n        case 'int':\n            return `roundFloatAsPdInt(${state.floatInputs}.get(${token.id}))`;\n        case 'string':\n            return `commons_getArray(${state.stringInputs}.get(${token.id}))`;\n        case 'indexing-start':\n            return '[toInt(';\n        case 'indexing-end':\n            return ')]';\n        case 'raw':\n            return token.content;\n    }\n}).join('');\nconst listInputs = (tokenizedExpressions) => {\n    const inputs = [];\n    tokenizedExpressions.forEach(tokenizedExpression => {\n        tokenizedExpression.forEach(token => {\n            if (token.type === 'float'\n                || token.type === 'signal'\n                || token.type === 'int'\n                || token.type === 'string') {\n                inputs.push(token);\n            }\n        });\n    });\n    // Sort so that input 0 appears first if it exists\n    inputs.sort(({ id: i1 }, { id: i2 }) => i1 - i2);\n    const inputsMap = new Map();\n    return inputs.filter(token => {\n        if (inputsMap.has(token.id)) {\n            if (inputsMap.get(token.id).type !== token.type) {\n                throw new Error(`contradictory definitions for input ${token.id}`);\n            }\n            return false;\n        }\n        else {\n            inputsMap.set(token.id, token);\n            return true;\n        }\n    });\n};\nconst validateAndListInputsExpr = (tokenizedExpressions) => {\n    const inputs = listInputs(tokenizedExpressions);\n    inputs.forEach(input => {\n        if (input.type === 'signal') {\n            throw new Error(`invalid signal token $v# for [expr]`);\n        }\n    });\n    return inputs;\n};\nconst validateAndListInputsExprTilde = (tokenizedExpressions) => {\n    return listInputs(tokenizedExpressions);\n};\nconst preprocessExpression = (args) => {\n    let expression = args.join(' ');\n    // Get all Math functions from the expression and prefix them with `Math.`\n    Object.getOwnPropertyNames(Math).forEach(funcName => {\n        expression = expression.replaceAll(funcName, `Math.${funcName}`);\n    });\n    // Split the several outputs from the expression\n    return expression.split(';')\n        .map(expression => expression.trim());\n};\nconst nodeImplementations = {\n    'expr': {\n        messages,\n        stateVariables,\n        declare,\n        sharedCode: [\n            messageTokenToString,\n            messageTokenToFloat,\n            roundFloatAsPdInt,\n            bangUtils,\n        ],\n    },\n    'expr~': {\n        messages,\n        stateVariables,\n        declare,\n        loop: loopExprTilde,\n        sharedCode: [\n            messageTokenToString,\n            messageTokenToFloat,\n            roundFloatAsPdInt,\n            bangUtils,\n        ],\n    },\n};\nconst builders = {\n    'expr': builderExpr,\n    'expr~': builderExprTilde,\n};\n\nexport { TOKENIZE_REGEXP, builders, listInputs, nodeImplementations, renderTokenizedExpression, tokenizeExpression };\n//# sourceMappingURL=expr-expr~.js.map\n","import '../../WebPd_pd-json/dist/WebPd_pd-json/src/to-dsp-graph.js';\nimport { assertOptionalNumber } from '../../WebPd_pd-json/dist/WebPd_pd-json/src/validation.js';\nimport { bangUtils } from './shared-code/core.js';\nimport { coldFloatInletWithSetter } from './shared-code/standard-message-receivers.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst stateVariables = {\n    leftOp: 1,\n    rightOp: 1,\n    funcSetRightOp: 1,\n    funcSetLeftOp: 1,\n};\n// ------------------------------- node builder ------------------------------ //\nconst makeBuilder = (defaultValue) => ({\n    translateArgs: (pdNode) => {\n        const value = assertOptionalNumber(pdNode.args[0]);\n        return {\n            value: value !== undefined ? value : defaultValue,\n        };\n    },\n    build: () => ({\n        inlets: {\n            '0': { type: 'message', id: '0' },\n            '1': { type: 'message', id: '1' },\n        },\n        outlets: {\n            '0': { type: 'message', id: '0' },\n        },\n    }),\n});\nconst makeNodeImplementation = ({ generateOperation, prepareLeftOp = 'value', prepareRightOp = 'value', }) => {\n    // ------------------------------ declare ------------------------------ //\n    const declare = ({ state, macros: { Var, Func }, node: { args }, }) => `\n        let ${Var(state.leftOp, 'Float')} = 0\n        let ${Var(state.rightOp, 'Float')} = 0\n\n        const ${state.funcSetLeftOp} = ${Func([\n        Var('value', 'Float')\n    ], 'void')} => {\n            ${state.leftOp} = ${prepareLeftOp}\n        }\n\n        const ${state.funcSetRightOp} = ${Func([\n        Var('value', 'Float')\n    ], 'void')} => {\n            ${state.rightOp} = ${prepareRightOp}\n        }\n\n        ${state.funcSetLeftOp}(0)\n        ${state.funcSetRightOp}(${args.value})\n    `;\n    // ------------------------------- messages ------------------------------ //\n    const messages = ({ state, globs, snds, }) => ({\n        '0': `\n        if (msg_isMatching(${globs.m}, [MSG_FLOAT_TOKEN])) {\n            ${state.funcSetLeftOp}(msg_readFloatToken(${globs.m}, 0))\n            ${snds.$0}(msg_floats([${generateOperation(state)}]))\n            return\n        \n        } else if (msg_isBang(${globs.m})) {\n            ${snds.$0}(msg_floats([${generateOperation(state)}]))\n            return\n        }\n        `,\n        '1': coldFloatInletWithSetter(globs.m, state.funcSetRightOp),\n    });\n    return {\n        declare,\n        messages,\n        stateVariables,\n        sharedCode: [bangUtils],\n    };\n};\n// ------------------------------------------------------------------- //\nconst nodeImplementations = {\n    '+': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} + ${state.rightOp}`\n    }),\n    '-': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} - ${state.rightOp}`\n    }),\n    '*': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} * ${state.rightOp}`\n    }),\n    '/': makeNodeImplementation({\n        generateOperation: (state) => `${state.rightOp} !== 0 ? ${state.leftOp} / ${state.rightOp}: 0`\n    }),\n    'mod': makeNodeImplementation({\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        // Modulo in Pd works so that negative values passed to the [mod] function cycle seamlessly : \n        // -3 % 3 = 0 ; -2 % 3 = 1 ; -1 % 3 = 2 ; 0 % 3 = 0 ; 1 % 3 = 1 ; ...\n        // So we need to translate the leftOp so that it is > 0 in order for the javascript % function to work.\n        generateOperation: (state) => `${state.rightOp} !== 0 ? (${state.rightOp} + (${state.leftOp} % ${state.rightOp})) % ${state.rightOp}: 0`\n    }),\n    'pow': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} > 0 || (Math.round(${state.rightOp}) === ${state.rightOp}) ? Math.pow(${state.leftOp}, ${state.rightOp}): 0`\n    }),\n    '||': makeNodeImplementation({\n        prepareLeftOp: `Math.floor(Math.abs(value))`,\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        generateOperation: (state) => `${state.leftOp} || ${state.rightOp} ? 1: 0`\n    }),\n    '&&': makeNodeImplementation({\n        prepareLeftOp: `Math.floor(Math.abs(value))`,\n        prepareRightOp: `Math.floor(Math.abs(value))`,\n        generateOperation: (state) => `${state.leftOp} && ${state.rightOp} ? 1: 0`\n    }),\n    '>': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} > ${state.rightOp} ? 1: 0`\n    }),\n    '>=': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} >= ${state.rightOp} ? 1: 0`\n    }),\n    '<': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} < ${state.rightOp} ? 1: 0`\n    }),\n    '<=': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} <= ${state.rightOp} ? 1: 0`\n    }),\n    '==': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} == ${state.rightOp} ? 1: 0`\n    }),\n    '!=': makeNodeImplementation({\n        generateOperation: (state) => `${state.leftOp} != ${state.rightOp} ? 1: 0`\n    }),\n};\nconst builders = {\n    '+': makeBuilder(0),\n    '-': makeBuilder(0),\n    '*': makeBuilder(1),\n    '/': makeBuilder(1),\n    'mod': makeBuilder(0),\n    'pow': makeBuilder(0),\n    '||': makeBuilder(0),\n    '&&': makeBuilder(0),\n    '>': makeBuilder(0),\n    '>=': makeBuilder(0),\n    '<': makeBuilder(0),\n    '<=': makeBuilder(0),\n    '==': makeBuilder(0),\n    '!=': makeBuilder(0),\n};\n\nexport { builders, nodeImplementations };\n//# sourceMappingURL=binop.js.map\n","import { builder as builder$5, nodeImplementation as nodeImplementation$6 } from './src/dac~.js';\nimport { builder as builder$6, nodeImplementation as nodeImplementation$7 } from './src/adc~.js';\nimport { builders as builders$2, nodeImplementations as nodeImplementations$2 } from './src/osc~-phasor~.js';\nimport { builder as builder$3, nodeImplementation as nodeImplementation$3 } from './src/clip~.js';\nimport { builder as builder$2, nodeImplementation as nodeImplementation$2 } from './src/sig~.js';\nimport { builder as builder$1, nodeImplementation as nodeImplementation$1 } from './src/snapshot~.js';\nimport { builder as builder$4, nodeImplementation as nodeImplementation$4 } from './src/vline~.js';\nimport { builders as builders$1, nodeImplementations as nodeImplementations$1 } from './src/funcs~.js';\nimport { builder as builder$7, nodeImplementation as nodeImplementation$8 } from './src/tabplay~.js';\nimport { builder as builder$8, nodeImplementation as nodeImplementation$9 } from './src/readsf~.js';\nimport { builder as builder$9, nodeImplementation as nodeImplementation$a } from './src/writesf~.js';\nimport { builder as builder$b, nodeImplementation as nodeImplementation$c } from './src/bp~.js';\nimport { builder as builder$d, nodeImplementation as nodeImplementation$d } from './src/throw~.js';\nimport { builder as builder$e, nodeImplementation as nodeImplementation$e } from './src/catch~.js';\nimport { builder as builder$p, nodeImplementation as nodeImplementation$p } from './src/metro.js';\nimport { builder as builder$q, nodeImplementation as nodeImplementation$q } from './src/timer.js';\nimport { builder as builder$r, nodeImplementation as nodeImplementation$r } from './src/delay.js';\nimport { builders as builders$5, nodeImplementations as nodeImplementations$5 } from './src/controls-float.js';\nimport { builder as builder$f, nodeImplementation as nodeImplementation$f } from './src/controls-bang.js';\nimport { builder as builder$g, nodeImplementation as nodeImplementation$g } from './src/loadbang.js';\nimport { builders as builders$8, nodeImplementations as nodeImplementations$7 } from './src/float-int.js';\nimport { builders as builders$7, nodeImplementations as nodeImplementations$8 } from './src/funcs.js';\nimport { builders, nodeImplementations } from './src/binop~.js';\nimport { builder as builder$a, nodeImplementation as nodeImplementation$5 } from './src/mixer~.js';\nimport { builder, nodeImplementation } from './src/noise~.js';\nimport { builders as builders$4, nodeImplementations as nodeImplementations$4 } from './src/delread~-delread4~.js';\nimport { builder as builder$c, nodeImplementation as nodeImplementation$b } from './src/delwrite~.js';\nimport { builders as builders$3, nodeImplementations as nodeImplementations$3 } from './src/filters-real~.js';\nimport { builder as builder$o, nodeImplementation as nodeImplementation$o } from './src/msg.js';\nimport { builder as builder$s, nodeImplementation as nodeImplementation$s } from './src/soundfiler.js';\nimport { builder as builder$h, nodeImplementation as nodeImplementation$h } from './src/print.js';\nimport { builder as builder$i, nodeImplementation as nodeImplementation$i } from './src/trigger.js';\nimport { builder as builder$j, nodeImplementation as nodeImplementation$j } from './src/change.js';\nimport { builder as builder$m, nodeImplementation as nodeImplementation$m } from './src/moses.js';\nimport { builder as builder$k, nodeImplementation as nodeImplementation$k } from './src/clip.js';\nimport { builder as builder$l, nodeImplementation as nodeImplementation$l } from './src/pipe.js';\nimport { builder as builder$n, nodeImplementation as nodeImplementation$n } from './src/pack.js';\nimport { builders as builders$9, nodeImplementations as nodeImplementations$9 } from './src/expr-expr~.js';\nimport { builders as builders$6, nodeImplementations as nodeImplementations$6 } from './src/binop.js';\n\n/*\n * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>\n *\n * BSD Simplified License.\n * For information on usage and redistribution, and for a DISCLAIMER OF ALL\n * WARRANTIES, see the file, \"LICENSE.txt,\" in this distribution.\n *\n * See https://github.com/sebpiq/WebPd_pd-parser for documentation\n *\n */\nconst NODE_BUILDERS = {\n    ...builders,\n    ...builders$1,\n    ...builders$2,\n    ...builders$3,\n    ...builders$4,\n    'noise~': builder,\n    'snapshot~': builder$1,\n    'sig~': builder$2,\n    'clip~': builder$3,\n    'vline~': builder$4,\n    'dac~': builder$5,\n    'adc~': builder$6,\n    'tabplay~': builder$7,\n    'readsf~': builder$8,\n    'writesf~': builder$9,\n    'mixer~': builder$a,\n    'vd~': { aliasTo: 'delread4~' },\n    'bp~': builder$b,\n    'delwrite~': builder$c,\n    'throw~': builder$d,\n    'catch~': builder$e,\n    ...builders$5,\n    ...builders$6,\n    ...builders$7,\n    ...builders$8,\n    ...builders$9,\n    bng: builder$f,\n    loadbang: builder$g,\n    print: builder$h,\n    trigger: builder$i,\n    t: { aliasTo: 'trigger' },\n    change: builder$j,\n    clip: builder$k,\n    pipe: builder$l,\n    moses: builder$m,\n    pack: builder$n,\n    msg: builder$o,\n    metro: builder$p,\n    timer: builder$q,\n    delay: builder$r,\n    del: { aliasTo: 'delay' },\n    soundfiler: builder$s,\n    // The following don't need implementations as they will never\n    // show up in the graph traversal.\n    graph: { isNoop: true },\n    array: { isNoop: true },\n    text: { isNoop: true },\n    cnv: { isNoop: true },\n    'block~': { isNoop: true },\n};\nconst NODE_IMPLEMENTATIONS = {\n    ...nodeImplementations,\n    ...nodeImplementations$1,\n    ...nodeImplementations$2,\n    ...nodeImplementations$3,\n    ...nodeImplementations$4,\n    'noise~': nodeImplementation,\n    'snapshot~': nodeImplementation$1,\n    'sig~': nodeImplementation$2,\n    'clip~': nodeImplementation$3,\n    'vline~': nodeImplementation$4,\n    'mixer~': nodeImplementation$5,\n    'dac~': nodeImplementation$6,\n    'adc~': nodeImplementation$7,\n    'tabplay~': nodeImplementation$8,\n    'readsf~': nodeImplementation$9,\n    'writesf~': nodeImplementation$a,\n    'delwrite~': nodeImplementation$b,\n    'bp~': nodeImplementation$c,\n    'throw~': nodeImplementation$d,\n    'catch~': nodeImplementation$e,\n    ...nodeImplementations$5,\n    ...nodeImplementations$6,\n    ...nodeImplementations$7,\n    ...nodeImplementations$8,\n    ...nodeImplementations$9,\n    bng: nodeImplementation$f,\n    loadbang: nodeImplementation$g,\n    print: nodeImplementation$h,\n    trigger: nodeImplementation$i,\n    change: nodeImplementation$j,\n    clip: nodeImplementation$k,\n    pipe: nodeImplementation$l,\n    moses: nodeImplementation$m,\n    pack: nodeImplementation$n,\n    msg: nodeImplementation$o,\n    metro: nodeImplementation$p,\n    timer: nodeImplementation$q,\n    delay: nodeImplementation$r,\n    soundfiler: nodeImplementation$s,\n};\n\nexport { NODE_BUILDERS, NODE_IMPLEMENTATIONS };\n//# sourceMappingURL=index.js.map\n","export const waitAscCompiler = async () => {\n    return new Promise((resolve) => {\n        const _waitRepeat = () => {\n            setTimeout(() => {\n                if (window.asc) {\n                    resolve()\n                } else _waitRepeat()\n            }, 200)\n        }\n        _waitRepeat()        \n    })\n}\n\nexport const compileAsc = async (code, bitDepth) => {\n    const compileOptions = {\n        optimizeLevel: 3,\n        runtime: \"incremental\",\n        exportRuntime: true,\n    }\n    if (bitDepth === 32) {\n        // For 32 bits version of Math\n        compileOptions.use = ['Math=NativeMathf']\n    }\n    const { error, binary, stderr } = await window.asc.compileString(code, compileOptions)\n    if (error) {\n        console.error(code)\n        throw new Error(stderr.toString())\n    }\n    return binary.buffer\n}","import { buildGraphNodeId, toDspGraph } from '@webpd/pd-json'\nimport compile from '@webpd/compiler-js'\nimport { NODE_BUILDERS, NODE_IMPLEMENTATIONS } from '@webpd/pd-registry'\nimport {\n    fsWeb,\n    WebPdWorkletNode,\n} from '@webpd/audioworklets'\nimport { compileAsc } from './wasm'\nimport { PORTLET_ID } from './pd-json'\n\nconst BIT_DEPTH = 32\n\nexport const createEngine = async (STATE) => {\n    const { pdJson, controls, audioContext } = STATE\n    const dspGraph = toDspGraph(pdJson, NODE_BUILDERS)\n    const inletCallerSpecs = _collectInletCallerSpecs(controls, dspGraph)\n    const arrays = Object.values(pdJson.arrays).reduce(\n        (arrays, array) => ({\n            ...arrays,\n            [array.args[0]]: array.data\n                ? new Float32Array(array.data)\n                : new Float32Array(array.args[1]),\n        }),\n        {}\n    )\n\n    const code = compile(dspGraph, NODE_IMPLEMENTATIONS, {\n        target: STATE.target,\n        inletCallerSpecs,\n        audioSettings: {\n            bitDepth: BIT_DEPTH,\n            channelCount: { in: 0, out: 2 },\n        },\n    })\n\n    const webpdNode = new WebPdWorkletNode(audioContext)\n    webpdNode.connect(audioContext.destination)\n    webpdNode.port.onmessage = (message) => fsWeb(webpdNode, message)\n    if (STATE.target === 'javascript') {\n        webpdNode.port.postMessage({\n            type: 'code:JS',\n            payload: {\n                jsCode: code,\n                arrays,\n            },\n        })\n    } else if (STATE.target === 'assemblyscript') {\n        const wasmBuffer = await compileAsc(\n            code,\n            BIT_DEPTH\n        )\n        webpdNode.port.postMessage({\n            type: 'code:WASM',\n            payload: {\n                wasmBuffer,\n                arrays,\n            },\n        })\n    }\n    return webpdNode\n}\n\nconst _collectInletCallerSpecs = (controls, dspGraph, inletCallerSpecs = {}) => {\n    controls.forEach((control) => {\n        if (control.type === 'container') {\n            inletCallerSpecs = _collectInletCallerSpecs(control.children, dspGraph, inletCallerSpecs)\n        } else if (control.type === 'control') {\n            const nodeId = buildGraphNodeId(control.patch.id, control.node.id)\n            const portletId = PORTLET_ID\n            if (!dspGraph[nodeId]) { return }\n            inletCallerSpecs[nodeId] = inletCallerSpecs[nodeId] || []\n            inletCallerSpecs[nodeId].push(portletId)\n        } else {\n            throw new Error(`invalid type ${control.type}`)\n        }\n    })\n    return inletCallerSpecs\n}","import {\n    addPoints,\n    computePointsBoundingBox,\n    computeRectangleDimensions,\n} from './math-utils'\n\nexport const CONTAINER_PADDING = 0.5\nconst GRID_DETECT_THRESHOLD_PX = 5\n\nexport const createViews = (STATE, controls = null) => {\n    if (controls === null) {\n        controls = STATE.controls\n    }\n\n    const controlsViews = controls.map((control) => {\n        if (control.type === 'container') {\n            const nestedViews = createViews(STATE, control.children)\n            return _buildContainerView(control, nestedViews)\n        } else if (control.type === 'control') {\n            return _buildControlView(control)\n        }\n    })\n\n    _computeLayout(controlsViews)\n        .forEach((column) =>\n            column\n                .filter((cell) => !!cell.controlView)\n                .forEach(\n                    (cell) => (cell.controlView.position = { x: cell.x, y: cell.y })\n                )\n        )\n    \n    return controlsViews.filter(controlView => {\n        // Can happen if 2 controls overlap, then only one of them will be placed in the grid \n        if (!controlView.position) {\n            console.warn(`control view \"${controlView.label}\" could not be assigned a position`)\n        }\n        return controlView.position\n    })\n}\n\nconst _buildContainerView = (control, children) => ({\n    type: 'container',\n    label: control.node.args[0] || null,\n    control,\n    dimensions: addPoints(\n        { x: CONTAINER_PADDING * 2, y: CONTAINER_PADDING * 2 },\n        computeRectangleDimensions(\n            computePointsBoundingBox([\n                ...children.map((c) => c.position),\n                ...children.map((c) => addPoints(c.position, c.dimensions)),\n            ])\n        )\n    ),\n    children,\n    position: null,\n})\n\nconst _buildControlView = (control) => ({\n    type: 'control',\n    label: control.node.layout.label.length ? control.node.layout.label : null,\n    control,\n    dimensions: _getDimensionsGrid(control.node.type, control.node.args),\n    position: null,\n})\n\nconst _getDimensionsGrid = (nodeType, nodeArgs) => {\n    switch (nodeType) {\n        case 'floatatom':\n        case 'symbolatom':\n            return { x: 4, y: 2 }\n        case 'bng':\n        case 'tgl':\n            return { x: 2, y: 2 }\n        case 'nbx':\n            return { x: 4, y: 2 }\n        case 'vradio':\n            return { x: 2, y: 2 * nodeArgs[0] }\n        case 'hradio':\n            return { x: 2 * nodeArgs[0], y: 2 }\n        case 'vsl':\n            return { x: 2, y: 8 }\n        case 'hsl':\n            return { x: 8, y: 2 }\n        default:\n            throw new Error(`unsupported type ${nodeType}`)\n    }\n}\n\nexport const _computeLayout = (controlsViews) => {\n    const roughGrid = {\n        x: {\n            // controlsViews grouped by column\n            grouped: [],\n            // X for each column\n            coordinates: [],\n            // width for each column\n            sizes: [],\n        },\n        y: {\n            // controlsViews grouped by row\n            grouped: [],\n            // Y for each row\n            coordinates: [],\n            // height for each column\n            sizes: [],\n        },\n    }\n\n    // Start by creating a rough grid which groups the control views by rows\n    // and by columns. \n    Object.keys(roughGrid).forEach((axis) => {\n        const grouped = roughGrid[axis].grouped\n        const getCoordinate = (c) => c.control.node.layout[axis]\n        controlsViews.forEach((controlView) => {\n            const inserted = grouped.some((rowsOrColumns) => {\n                // Try to assign `controlView` to an existing row or column\n                if (\n                    rowsOrColumns.some(\n                        (otherControlView) =>\n                            Math.abs(\n                                getCoordinate(controlView) -\n                                    getCoordinate(otherControlView)\n                            ) < GRID_DETECT_THRESHOLD_PX\n                    )\n                ) {\n                    rowsOrColumns.push(controlView)\n                    return true\n                }\n            })\n\n            // If it could not be inserted to an existing one, we create a new rowOrColumn,\n            // and insert it in the right place in the list of rowsOrColumns.\n            if (!inserted) {\n                let i = 0\n                while (\n                    i < grouped.length &&\n                    getCoordinate(grouped[i][0]) < getCoordinate(controlView)\n                ) {\n                    i++\n                }\n                grouped.splice(i, 0, [controlView])\n            }\n\n            // Assigns the coordinate for the row or column by taking\n            // sizes of the largest controls in each column or row.\n            // and stacking these max sizes.\n            roughGrid[axis].sizes = grouped.map(\n                (rowOrCol) =>\n                    Math.max(\n                        ...rowOrCol.map(\n                            (controlView) => controlView.dimensions[axis]\n                        )\n                    ),\n                []\n            )\n\n            roughGrid[axis].coordinates = roughGrid[axis].sizes\n                .slice(0, -1)\n                .reduce((coords, size) => [...coords, coords.slice(-1)[0] + size], [0])\n        })\n    })\n\n    // Create a grid by placing controlViews in cells (col, row).\n    const grid = roughGrid.x.grouped.map((column, colInd) =>\n        roughGrid.y.grouped.map((row, rowInd) => {\n            const controlView = row.filter((controlView) =>\n                column.includes(controlView)\n            )[0]\n            return {\n                x: roughGrid.x.coordinates[colInd],\n                y: roughGrid.y.coordinates[rowInd],\n                width: controlView ? controlView.dimensions.x: 0,\n                controlView: controlView || null,\n            }\n        })\n    )\n\n    // Pack the layout more compactly by moving left all columns \n    // that can be.\n    grid.forEach((column, colInd) => {\n        let dX = column[0].x\n        column\n            .forEach((cell, rowInd) => {\n                if (cell.controlView === null) {\n                    return\n                }\n                grid.slice(0, colInd)\n                    .map((otherColumn) => otherColumn[rowInd])\n                    .forEach((otherCell) => {\n                        if (otherCell.controlView === null) {\n                            return\n                        }\n                        dX = Math.min(\n                            dX,\n                            cell.x - (otherCell.x + otherCell.width)\n                        )\n                    })\n            })\n        if (dX) {\n            grid.slice(colInd).forEach((column, j) => {\n                column.forEach((cell) => (cell.x -= dX))\n            })\n        }\n    })\n\n    return grid\n}\n","import { buildGraphNodeId } from '@webpd/pd-json'\nimport { PORTLET_ID } from './pd-json'\nimport { CONTAINER_PADDING } from './views'\n\nconst GRID_SIZE_PX = 30\nconst LABEL_HEIGHT_GRID = 0.6\n\nexport const render = (STATE, parent, controlsViews = null) => {\n    if (controlsViews === null) {\n        controlsViews = STATE.controlsViews\n    }\n    controlsViews.forEach((controlView) => {\n        if (controlView.type === 'container') {\n            const childrenContainerElem = _renderContainer(STATE, parent, controlView)\n            render(STATE, childrenContainerElem, controlView.children)\n        } else if (controlView.type === 'control') {\n            _renderControl(STATE, parent, controlView)\n        } else {\n            throw new Error(`unexpected control type ${controlView.type}`)\n        }\n    })\n}\n\nconst _renderControl = (STATE, parent, controlView) => {\n    const { node, patch } = controlView.control\n\n    const color = STATE.colorScheme.next()\n\n    const div = document.createElement('div')\n    div.classList.add('control')\n    div.id = `control-${patch.id}-${node.id}`\n    div.style.left = `${\n        controlView.position.x * GRID_SIZE_PX + CONTAINER_PADDING * GRID_SIZE_PX\n    }px`\n    div.style.top = `${\n        controlView.position.y * GRID_SIZE_PX\n    }px`\n    div.style.width = `${controlView.dimensions.x * GRID_SIZE_PX}px`\n    div.style.height = `${controlView.dimensions.y * GRID_SIZE_PX}px`\n    parent.appendChild(div)\n\n    if (controlView.label) {\n        const labelDiv = _renderLabel(div, controlView.label)\n        labelDiv.style.color = color\n    }\n\n    const innerDiv = document.createElement('div')\n    div.appendChild(innerDiv)\n    const nexusElem = _renderNexus(STATE, innerDiv, controlView)\n    \n    nexusElem.colorize('accent', color)\n    nexusElem.colorize('fill', 'black')\n    nexusElem.colorize('dark', color)\n    nexusElem.colorize('mediumDark', '#222')\n    nexusElem.colorize('mediumLight', '#333')\n\n    return div\n}\n\nconst _renderContainer = (_, parent, controlView) => {\n    const div = document.createElement('div')\n    div.classList.add('controls-container')\n\n    div.style.left = `${controlView.position.x * GRID_SIZE_PX}px`\n    div.style.top = `${controlView.position.y * GRID_SIZE_PX}px`\n    div.style.width = `${(controlView.dimensions.x - CONTAINER_PADDING) * GRID_SIZE_PX}px`\n    div.style.height = `${\n        (controlView.dimensions.y - CONTAINER_PADDING) * GRID_SIZE_PX\n    }px`\n    div.style.padding = `${CONTAINER_PADDING * 0.5 * GRID_SIZE_PX}px`\n\n    // div.style.backgroundColor = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6)\n    if (controlView.label) {\n        _renderLabel(div, controlView.label)\n    }\n\n    parent.appendChild(div)\n    return div\n}\n\nconst _renderLabel = (parent, label) => {\n    const labelDiv = document.createElement('div')\n    labelDiv.classList.add('label')\n    labelDiv.innerHTML = label\n    parent.appendChild(labelDiv)\n    return labelDiv\n}\n\nconst _renderNexus = (STATE, div, controlView) => {\n    const { node, patch } = controlView.control\n    const width = controlView.dimensions.x * GRID_SIZE_PX\n    const height = (controlView.dimensions.y - LABEL_HEIGHT_GRID) * GRID_SIZE_PX\n\n    let nexusElem\n    switch (node.type) {\n        case 'hsl':\n            // TODO : case 'vsl':\n            nexusElem = new Nexus.Add.Slider(div, {\n                min: node.args[0],\n                max: node.args[1],\n                value: node.args[3],\n                size: [width, height],\n            })\n            break\n\n        case 'hradio':\n            // TODO : case 'vradio':\n            nexusElem = new Nexus.RadioButton(div, {\n                numberOfButtons: node.args[0],\n                active: node.args[2],\n                size: [width, height],\n            })\n            break\n\n        case 'bng':\n            // TODO : case 'vradio':\n            nexusElem = new Nexus.Button(div, {\n                size: [height, height],\n            })\n            break\n\n        case 'nbx':\n        case 'floatatom':\n            nexusElem = new Nexus.Number(div, {\n                value: node.type === 'nbx' ? node.args[3] : 0,\n                size: [width, height],\n            })\n            break\n\n        case 'tgl':\n            nexusElem = new Nexus.Toggle(div, {\n                state: !!node.args[2],\n                size: [width, height],\n            })\n            break\n\n        default:\n            throw new Error(`Not supported ${node.type}`)\n    }\n\n    let messageBuilder\n    if (node.type === 'bng' || node.type === 'tgl') {\n        messageBuilder = () => ['bang']\n    } else {\n        messageBuilder = (v) => [v]\n    }\n    nexusElem.on('change', (v) => {\n        STATE.webpdNode.port.postMessage({\n            type: 'inletCaller',\n            payload: {\n                nodeId: buildGraphNodeId(patch.id, node.id),\n                portletId: PORTLET_ID,\n                message: messageBuilder(v),\n            },\n        })\n    })\n    return nexusElem\n}\n\nexport const generateColorScheme = (STATE) => {\n    const colors = []\n    const colorCount = 10\n    const colorSchemeSelector = STATE.pdJson.patches[0].connections.length % 2\n\n    switch (colorSchemeSelector) {\n        case 0:\n            for (let i = 0; i < colorCount; i++) {\n                const r = 0 //+ (colorCount - i) * 100 / colorCount\n                const g = 180 + (colorCount - i) * (240 - 180) / colorCount\n                const b = 100 + i * 150 / colorCount\n                colors.push(`rgba(${Math.round(r)}, ${Math.round(g)}, ${Math.round(b)})`)\n            }\n            break\n        case 1:\n            for (let i = 0; i < colorCount; i++) {\n                const r = 160 + i * 95 / colorCount\n                const b = 80 + (colorCount - i) * 100 / colorCount\n                const g = 0// + (colorCount - i) * 100 / colorCount\n                colors.push(`rgba(${Math.round(r)}, ${Math.round(g)}, ${Math.round(b)})`)\n            }\n            break\n\n    \n    }\n\n    return {\n        counter: 0,\n        next () {\n            return colors[this.counter++ % colors.length]\n        }\n    }\n}","import {\n    registerWebPdWorkletNode,\n} from '@webpd/audioworklets'\nimport { loadPdJson } from './pd-json'\nimport { createModels } from './models'\nimport { createEngine } from './webpd-engine'\nimport { createViews } from './views'\nimport { render, generateColorScheme } from './render'\nimport { waitAscCompiler } from './wasm'\n\nconst ELEMS = {\n    controlsRoot: document.querySelector('#controls-root'),\n    startButton: document.querySelector('#start'),\n    loadingLabel: document.querySelector('#loading'),\n    loadingContainer: document.querySelector('#splash-container')\n}\nELEMS.startButton.style.display = 'none'\nconst PATCH_URL = './ginger2.pd'\n\nconst STATE = {\n    target: 'assemblyscript',\n    audioContext: new AudioContext(),\n    webpdNode: null,\n    pdJson: null,\n    controls: null,\n    controlsViews: null,\n}\n\nELEMS.startButton.onclick = () => {\n    ELEMS.loadingContainer.style.display = 'none'\n    // https://github.com/WebAudio/web-audio-api/issues/345\n    if (STATE.audioContext.state === 'suspended') {\n        STATE.audioContext.resume()\n    }\n}\n\nconst _nextTick = () => new Promise((resolve) => setTimeout(resolve, 1))\n\nconst initializeApp = async () => {\n    ELEMS.loadingLabel.innerHTML = 'loading assemblyscript compiler ...'\n    await waitAscCompiler()\n    await registerWebPdWorkletNode(STATE.audioContext)\n\n    ELEMS.loadingLabel.innerHTML = `downloading patch ${PATCH_URL} ...`\n    STATE.pdJson = await loadPdJson(PATCH_URL)\n\n    ELEMS.loadingLabel.innerHTML = 'generating GUI ...'\n    await _nextTick()\n\n    STATE.controls = createModels(STATE)\n    STATE.controlsViews = createViews(STATE)\n    STATE.colorScheme = generateColorScheme(STATE)\n    render(STATE, ELEMS.controlsRoot)\n\n    ELEMS.loadingLabel.innerHTML = 'compiling engine ...'\n    await _nextTick()\n\n    STATE.webpdNode = await createEngine(STATE)\n}\n\ninitializeApp()\n    .then(() => {\n        ELEMS.loadingLabel.style.display = 'none'\n        ELEMS.startButton.style.display = 'block'\n        console.log('APP READY')\n    })\n    .catch(() => {\n        ELEMS.loadingLabel.innerHTML = 'ERROR :('\n    })\n"],"names":["fetchRetry","FS_OPERATION_SUCCESS","FS_OPERATION_FAILURE","CONTROL_TYPE","IdNamespaces","getNode","getInlet","getOutlet","getSinks","getSources","NODE_BUILDERS","Var","Func","macros","renderCode","_renderCodeRecursive","mapArray","macros$1","stateVariables","builder","loop","nodeImplementation","makeNodeImplementation","_hasSignalInput","nodeImplementations","builders","declare","messages","makeBuilder","builders$1","builders$2","builders$3","builders$4","builder$1","builder$2","builder$3","builder$4","builder$5","builder$6","builder$7","builder$8","builder$9","builder$a","builder$b","builder$c","builder$d","builder$e","builders$5","builders$6","builders$7","builders$8","builders$9","builder$f","builder$h","builder$i","builder$j","builder$k","builder$l","builder$m","builder$n","builder$o","builder$p","builder$q","builder$r","builder$s","nodeImplementations$1","nodeImplementations$2","nodeImplementations$3","nodeImplementations$4","nodeImplementation$1","nodeImplementation$2","nodeImplementation$3","nodeImplementation$4","nodeImplementation$5","nodeImplementation$6","nodeImplementation$7","nodeImplementation$8","nodeImplementation$9","nodeImplementation$a","nodeImplementation$b","nodeImplementation$c","nodeImplementation$d","nodeImplementation$e","nodeImplementations$5","nodeImplementations$6","nodeImplementations$7","nodeImplementations$8","nodeImplementations$9","nodeImplementation$f","nodeImplementation$g","nodeImplementation$h","nodeImplementation$i","nodeImplementation$j","nodeImplementation$k","nodeImplementation$l","nodeImplementation$m","nodeImplementation$n","nodeImplementation$o","nodeImplementation$p","nodeImplementation$q","nodeImplementation$r","nodeImplementation$s","fsWeb"],"mappings":"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"}